/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface ComponentInterface extends utils.Interface {
  functions: {
    "game()": FunctionFragment;
    "getEntities()": FunctionFragment;
    "getEntitiesWithValue(bytes)": FunctionFragment;
    "getRawValue(uint256)": FunctionFragment;
    "includes(uint256)": FunctionFragment;
    "remove(uint256)": FunctionFragment;
    "set(uint256,bytes)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "game", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getEntities",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getEntitiesWithValue",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRawValue",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "includes",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "remove",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "set",
    values: [BigNumberish, BytesLike]
  ): string;

  decodeFunctionResult(functionFragment: "game", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getEntities",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEntitiesWithValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRawValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "includes", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "remove", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "set", data: BytesLike): Result;

  events: {};
}

export interface Component extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ComponentInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    game(overrides?: CallOverrides): Promise<[string]>;

    getEntities(overrides?: CallOverrides): Promise<[BigNumber[]]>;

    getEntitiesWithValue(
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getRawValue(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    includes(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    remove(
      _entity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    set(
      _entity: BigNumberish,
      _value: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  game(overrides?: CallOverrides): Promise<string>;

  getEntities(overrides?: CallOverrides): Promise<BigNumber[]>;

  getEntitiesWithValue(
    _value: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getRawValue(
    _entity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  includes(_entity: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

  remove(
    _entity: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  set(
    _entity: BigNumberish,
    _value: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    game(overrides?: CallOverrides): Promise<string>;

    getEntities(overrides?: CallOverrides): Promise<BigNumber[]>;

    getEntitiesWithValue(
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getRawValue(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    includes(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    remove(_entity: BigNumberish, overrides?: CallOverrides): Promise<void>;

    set(
      _entity: BigNumberish,
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    game(overrides?: CallOverrides): Promise<BigNumber>;

    getEntities(overrides?: CallOverrides): Promise<BigNumber>;

    getEntitiesWithValue(
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRawValue(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    includes(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    remove(
      _entity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    set(
      _entity: BigNumberish,
      _value: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    game(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getEntities(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getEntitiesWithValue(
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRawValue(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    includes(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    remove(
      _entity: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    set(
      _entity: BigNumberish,
      _value: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
