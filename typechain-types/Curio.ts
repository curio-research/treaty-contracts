/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type PositionStruct = { x: BigNumberish; y: BigNumberish };

export type PositionStructOutput = [BigNumber, BigNumber] & {
  x: BigNumber;
  y: BigNumber;
};

export type ComponentSpecStruct = { name: string; valueType: BigNumberish };

export type ComponentSpecStructOutput = [string, number] & {
  name: string;
  valueType: number;
};

export type FacetCutStruct = {
  facetAddress: string;
  action: BigNumberish;
  functionSelectors: BytesLike[];
};

export type FacetCutStructOutput = [string, number, string[]] & {
  facetAddress: string;
  action: number;
  functionSelectors: string[];
};

export type FacetStruct = {
  facetAddress: string;
  functionSelectors: BytesLike[];
};

export type FacetStructOutput = [string, string[]] & {
  facetAddress: string;
  functionSelectors: string[];
};

export type TileStruct = {
  isInitialized: boolean;
  terrain: BigNumberish;
  city: BigNumberish;
};

export type TileStructOutput = [boolean, number, BigNumber] & {
  isInitialized: boolean;
  terrain: number;
  city: BigNumber;
};

export type WorldConstantsStruct = {
  admin: string;
  worldWidth: BigNumberish;
  worldHeight: BigNumberish;
  numInitTerrainTypes: BigNumberish;
  initBatchSize: BigNumberish;
  maxCityCountPerPlayer: BigNumberish;
  maxArmyCountPerPlayer: BigNumberish;
  maxPlayerCount: BigNumberish;
  maxInventoryCapacity: BigNumberish;
  cityUpgradeGoldCost: BigNumberish;
  cityHealth: BigNumberish;
  cityAttack: BigNumberish;
  cityDefense: BigNumberish;
};

export type WorldConstantsStructOutput = [
  string,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  admin: string;
  worldWidth: BigNumber;
  worldHeight: BigNumber;
  numInitTerrainTypes: BigNumber;
  initBatchSize: BigNumber;
  maxCityCountPerPlayer: BigNumber;
  maxArmyCountPerPlayer: BigNumber;
  maxPlayerCount: BigNumber;
  maxInventoryCapacity: BigNumber;
  cityUpgradeGoldCost: BigNumber;
  cityHealth: BigNumber;
  cityAttack: BigNumber;
  cityDefense: BigNumber;
};

export interface CurioInterface extends utils.Interface {
  functions: {
    "addEntity()": FunctionFragment;
    "bulkInitializeTiles((uint256,uint256)[])": FunctionFragment;
    "pauseGame()": FunctionFragment;
    "reactivatePlayer(address)": FunctionFragment;
    "registerComponents(address,(string,uint8)[])": FunctionFragment;
    "registerDefaultComponents(address)": FunctionFragment;
    "resumeGame()": FunctionFragment;
    "setComponentValue(string,uint256,bytes)": FunctionFragment;
    "storeEncodedColumnBatches(uint256[][])": FunctionFragment;
    "diamondCut((address,uint8,bytes4[])[],address,bytes)": FunctionFragment;
    "facetAddress(bytes4)": FunctionFragment;
    "facetAddresses()": FunctionFragment;
    "facetFunctionSelectors(address)": FunctionFragment;
    "facets()": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "_endBattleArmy(uint256)": FunctionFragment;
    "_endBattleCity(uint256)": FunctionFragment;
    "_startBattleArmy(uint256,uint256)": FunctionFragment;
    "_startBattleCity(uint256,uint256)": FunctionFragment;
    "disbandArmy(uint256)": FunctionFragment;
    "endProduction(uint256,uint256)": FunctionFragment;
    "foldCity(uint256)": FunctionFragment;
    "foundCity(uint256,(uint256,uint256)[],(uint256,uint256),string)": FunctionFragment;
    "initializePlayer((uint256,uint256),string)": FunctionFragment;
    "moveArmy(uint256,(uint256,uint256))": FunctionFragment;
    "moveSettler(uint256,(uint256,uint256))": FunctionFragment;
    "organizeArmy(uint256,string[],uint256[])": FunctionFragment;
    "startProduction(uint256,uint256,uint256)": FunctionFragment;
    "unfoldCity(uint256)": FunctionFragment;
    "upgradeCity(uint256,(uint256,uint256)[])": FunctionFragment;
    "getComponent(string)": FunctionFragment;
    "getComponentById(uint256)": FunctionFragment;
    "getEntity()": FunctionFragment;
    "getPlayerCount()": FunctionFragment;
    "getPlayerId(address)": FunctionFragment;
    "getTileAt((uint256,uint256))": FunctionFragment;
    "getWorldConstants()": FunctionFragment;
    "isPlayerInitialized(address)": FunctionFragment;
    "owner()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "_concatenate(uint256[],uint256[])": FunctionFragment;
    "_difference(Set,Set)": FunctionFragment;
    "_getAddress(string,uint256)": FunctionFragment;
    "_getAddressComponent(string)": FunctionFragment;
    "_getBool(string,uint256)": FunctionFragment;
    "_getBoolComponent(string)": FunctionFragment;
    "_getComponent(string)": FunctionFragment;
    "_getComponentByEntity(uint256)": FunctionFragment;
    "_getComponentValue(string,uint256)": FunctionFragment;
    "_getInt(string,uint256)": FunctionFragment;
    "_getIntComponent(string)": FunctionFragment;
    "_getPosition(string,uint256)": FunctionFragment;
    "_getPositionComponent(string)": FunctionFragment;
    "_getString(string,uint256)": FunctionFragment;
    "_getStringArray(string,uint256)": FunctionFragment;
    "_getStringArrayComponent(string)": FunctionFragment;
    "_getStringComponent(string)": FunctionFragment;
    "_getUint(string,uint256)": FunctionFragment;
    "_getUintArray(string,uint256)": FunctionFragment;
    "_getUintArrayComponent(string)": FunctionFragment;
    "_getUintComponent(string)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "addEntity", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "bulkInitializeTiles",
    values: [PositionStruct[]]
  ): string;
  encodeFunctionData(functionFragment: "pauseGame", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "reactivatePlayer",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "registerComponents",
    values: [string, ComponentSpecStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "registerDefaultComponents",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "resumeGame",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setComponentValue",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "storeEncodedColumnBatches",
    values: [BigNumberish[][]]
  ): string;
  encodeFunctionData(
    functionFragment: "diamondCut",
    values: [FacetCutStruct[], string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "facetAddress",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "facetAddresses",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "facetFunctionSelectors",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "facets", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "_endBattleArmy",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_endBattleCity",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_startBattleArmy",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_startBattleCity",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "disbandArmy",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "endProduction",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "foldCity",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "foundCity",
    values: [BigNumberish, PositionStruct[], PositionStruct, string]
  ): string;
  encodeFunctionData(
    functionFragment: "initializePlayer",
    values: [PositionStruct, string]
  ): string;
  encodeFunctionData(
    functionFragment: "moveArmy",
    values: [BigNumberish, PositionStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "moveSettler",
    values: [BigNumberish, PositionStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "organizeArmy",
    values: [BigNumberish, string[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "startProduction",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "unfoldCity",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "upgradeCity",
    values: [BigNumberish, PositionStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getComponent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getComponentById",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "getEntity", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getPlayerCount",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getPlayerId", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getTileAt",
    values: [PositionStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "getWorldConstants",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isPlayerInitialized",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_concatenate",
    values: [BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "_difference",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getAddress",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getAddressComponent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getBool",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getBoolComponent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getComponent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getComponentByEntity",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getComponentValue",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getInt",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getIntComponent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getPosition",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getPositionComponent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getString",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getStringArray",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getStringArrayComponent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getStringComponent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getUint",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getUintArray",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getUintArrayComponent",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getUintComponent",
    values: [string]
  ): string;

  decodeFunctionResult(functionFragment: "addEntity", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "bulkInitializeTiles",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "pauseGame", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "reactivatePlayer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerDefaultComponents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "resumeGame", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setComponentValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "storeEncodedColumnBatches",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "diamondCut", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "facetAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "facetAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "facetFunctionSelectors",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "facets", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_endBattleArmy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_endBattleCity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_startBattleArmy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_startBattleCity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disbandArmy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "endProduction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "foldCity", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "foundCity", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initializePlayer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "moveArmy", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "moveSettler",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "organizeArmy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "startProduction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unfoldCity", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "upgradeCity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getComponentById",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getEntity", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPlayerCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPlayerId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getTileAt", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getWorldConstants",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isPlayerInitialized",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_concatenate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_difference",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getAddressComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_getBool", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_getBoolComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getComponentByEntity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getComponentValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_getInt", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_getIntComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getPositionComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_getString", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_getStringArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getStringArrayComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getStringComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_getUint", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_getUintArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getUintArrayComponent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getUintComponent",
    data: BytesLike
  ): Result;

  events: {
    "DiamondCut(tuple[],address,bytes)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "ComponentValueRemoved(string,uint256)": EventFragment;
    "ComponentValueSet(string,uint256,bytes)": EventFragment;
    "EntityRemoved(uint256)": EventFragment;
    "NewComponent(string,uint256)": EventFragment;
    "NewEntity(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DiamondCut"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ComponentValueRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ComponentValueSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EntityRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewComponent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewEntity"): EventFragment;
}

export type DiamondCutEvent = TypedEvent<
  [FacetCutStructOutput[], string, string],
  { _diamondCut: FacetCutStructOutput[]; _init: string; _calldata: string }
>;

export type DiamondCutEventFilter = TypedEventFilter<DiamondCutEvent>;

export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  { previousOwner: string; newOwner: string }
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export type ComponentValueRemovedEvent = TypedEvent<
  [string, BigNumber],
  { _componentName: string; _entity: BigNumber }
>;

export type ComponentValueRemovedEventFilter =
  TypedEventFilter<ComponentValueRemovedEvent>;

export type ComponentValueSetEvent = TypedEvent<
  [string, BigNumber, string],
  { _componentName: string; _entity: BigNumber; _value: string }
>;

export type ComponentValueSetEventFilter =
  TypedEventFilter<ComponentValueSetEvent>;

export type EntityRemovedEvent = TypedEvent<
  [BigNumber],
  { _entity: BigNumber }
>;

export type EntityRemovedEventFilter = TypedEventFilter<EntityRemovedEvent>;

export type NewComponentEvent = TypedEvent<
  [string, BigNumber],
  { _name: string; _entity: BigNumber }
>;

export type NewComponentEventFilter = TypedEventFilter<NewComponentEvent>;

export type NewEntityEvent = TypedEvent<[BigNumber], { _entity: BigNumber }>;

export type NewEntityEventFilter = TypedEventFilter<NewEntityEvent>;

export interface Curio extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: CurioInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addEntity(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    bulkInitializeTiles(
      _positions: PositionStruct[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    pauseGame(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    reactivatePlayer(
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    registerComponents(
      _gameAddr: string,
      _componentSpecs: ComponentSpecStruct[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    registerDefaultComponents(
      _gameAddr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    resumeGame(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setComponentValue(
      _componentName: string,
      _entity: BigNumberish,
      _value: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    storeEncodedColumnBatches(
      _colBatches: BigNumberish[][],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    diamondCut(
      _diamondCut: FacetCutStruct[],
      _init: string,
      _calldata: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    facetAddress(
      _functionSelector: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string] & { facetAddress_: string }>;

    facetAddresses(
      overrides?: CallOverrides
    ): Promise<[string[]] & { facetAddresses_: string[] }>;

    facetFunctionSelectors(
      _facet: string,
      overrides?: CallOverrides
    ): Promise<[string[]] & { _facetFunctionSelectors: string[] }>;

    facets(
      overrides?: CallOverrides
    ): Promise<[FacetStructOutput[]] & { facets_: FacetStructOutput[] }>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    _endBattleArmy(
      _army: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _endBattleCity(
      _army: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _startBattleArmy(
      _army: BigNumberish,
      _targetArmy: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _startBattleCity(
      _army: BigNumberish,
      _city: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    disbandArmy(
      _army: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    endProduction(
      _building: BigNumberish,
      _production: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    foldCity(
      _city: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    foundCity(
      _settler: BigNumberish,
      _territory: PositionStruct[],
      _centerPosition: PositionStruct,
      _cityName: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    initializePlayer(
      _position: PositionStruct,
      _name: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    moveArmy(
      _army: BigNumberish,
      _targetPosition: PositionStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    moveSettler(
      _settler: BigNumberish,
      _targetPosition: PositionStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    organizeArmy(
      _city: BigNumberish,
      _troopTypes: string[],
      _amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    startProduction(
      _building: BigNumberish,
      _template: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    unfoldCity(
      _settler: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    upgradeCity(
      _city: BigNumberish,
      _newTerritory: PositionStruct[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getComponent(_name: string, overrides?: CallOverrides): Promise<[string]>;

    getComponentById(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getEntity(overrides?: CallOverrides): Promise<[BigNumber]>;

    getPlayerCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    getPlayerId(
      _player: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTileAt(
      _pos: PositionStruct,
      overrides?: CallOverrides
    ): Promise<[TileStructOutput]>;

    getWorldConstants(
      overrides?: CallOverrides
    ): Promise<[WorldConstantsStructOutput]>;

    isPlayerInitialized(
      _player: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    owner(overrides?: CallOverrides): Promise<[string] & { owner_: string }>;

    transferOwnership(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _concatenate(
      _arr1: BigNumberish[],
      _arr2: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    _difference(
      set1: string,
      set2: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    _getAddress(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _getAddressComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _getBool(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    _getBoolComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _getComponent(_name: string, overrides?: CallOverrides): Promise<[string]>;

    _getComponentByEntity(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _getComponentValue(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _getInt(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getIntComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _getPosition(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[PositionStructOutput]>;

    _getPositionComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _getString(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _getStringArray(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    _getStringArrayComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _getStringComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _getUint(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getUintArray(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    _getUintArrayComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _getUintComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  addEntity(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  bulkInitializeTiles(
    _positions: PositionStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  pauseGame(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  reactivatePlayer(
    _address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  registerComponents(
    _gameAddr: string,
    _componentSpecs: ComponentSpecStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  registerDefaultComponents(
    _gameAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  resumeGame(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setComponentValue(
    _componentName: string,
    _entity: BigNumberish,
    _value: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  storeEncodedColumnBatches(
    _colBatches: BigNumberish[][],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  diamondCut(
    _diamondCut: FacetCutStruct[],
    _init: string,
    _calldata: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  facetAddress(
    _functionSelector: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  facetAddresses(overrides?: CallOverrides): Promise<string[]>;

  facetFunctionSelectors(
    _facet: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  facets(overrides?: CallOverrides): Promise<FacetStructOutput[]>;

  supportsInterface(
    _interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  _endBattleArmy(
    _army: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _endBattleCity(
    _army: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _startBattleArmy(
    _army: BigNumberish,
    _targetArmy: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _startBattleCity(
    _army: BigNumberish,
    _city: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  disbandArmy(
    _army: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  endProduction(
    _building: BigNumberish,
    _production: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  foldCity(
    _city: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  foundCity(
    _settler: BigNumberish,
    _territory: PositionStruct[],
    _centerPosition: PositionStruct,
    _cityName: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  initializePlayer(
    _position: PositionStruct,
    _name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  moveArmy(
    _army: BigNumberish,
    _targetPosition: PositionStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  moveSettler(
    _settler: BigNumberish,
    _targetPosition: PositionStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  organizeArmy(
    _city: BigNumberish,
    _troopTypes: string[],
    _amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  startProduction(
    _building: BigNumberish,
    _template: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  unfoldCity(
    _settler: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  upgradeCity(
    _city: BigNumberish,
    _newTerritory: PositionStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getComponent(_name: string, overrides?: CallOverrides): Promise<string>;

  getComponentById(
    _entity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getEntity(overrides?: CallOverrides): Promise<BigNumber>;

  getPlayerCount(overrides?: CallOverrides): Promise<BigNumber>;

  getPlayerId(_player: string, overrides?: CallOverrides): Promise<BigNumber>;

  getTileAt(
    _pos: PositionStruct,
    overrides?: CallOverrides
  ): Promise<TileStructOutput>;

  getWorldConstants(
    overrides?: CallOverrides
  ): Promise<WorldConstantsStructOutput>;

  isPlayerInitialized(
    _player: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  owner(overrides?: CallOverrides): Promise<string>;

  transferOwnership(
    _newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _concatenate(
    _arr1: BigNumberish[],
    _arr2: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  _difference(
    set1: string,
    set2: string,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  _getAddress(
    _componentName: string,
    _entity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  _getAddressComponent(
    _name: string,
    overrides?: CallOverrides
  ): Promise<string>;

  _getBool(
    _componentName: string,
    _entity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  _getBoolComponent(_name: string, overrides?: CallOverrides): Promise<string>;

  _getComponent(_name: string, overrides?: CallOverrides): Promise<string>;

  _getComponentByEntity(
    _entity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  _getComponentValue(
    _componentName: string,
    _entity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  _getInt(
    _componentName: string,
    _entity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getIntComponent(_name: string, overrides?: CallOverrides): Promise<string>;

  _getPosition(
    _componentName: string,
    _entity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<PositionStructOutput>;

  _getPositionComponent(
    _name: string,
    overrides?: CallOverrides
  ): Promise<string>;

  _getString(
    _componentName: string,
    _entity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  _getStringArray(
    _componentName: string,
    _entity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  _getStringArrayComponent(
    _name: string,
    overrides?: CallOverrides
  ): Promise<string>;

  _getStringComponent(
    _name: string,
    overrides?: CallOverrides
  ): Promise<string>;

  _getUint(
    _componentName: string,
    _entity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getUintArray(
    _componentName: string,
    _entity: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  _getUintArrayComponent(
    _name: string,
    overrides?: CallOverrides
  ): Promise<string>;

  _getUintComponent(_name: string, overrides?: CallOverrides): Promise<string>;

  callStatic: {
    addEntity(overrides?: CallOverrides): Promise<BigNumber>;

    bulkInitializeTiles(
      _positions: PositionStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    pauseGame(overrides?: CallOverrides): Promise<void>;

    reactivatePlayer(
      _address: string,
      overrides?: CallOverrides
    ): Promise<void>;

    registerComponents(
      _gameAddr: string,
      _componentSpecs: ComponentSpecStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    registerDefaultComponents(
      _gameAddr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    resumeGame(overrides?: CallOverrides): Promise<void>;

    setComponentValue(
      _componentName: string,
      _entity: BigNumberish,
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    storeEncodedColumnBatches(
      _colBatches: BigNumberish[][],
      overrides?: CallOverrides
    ): Promise<void>;

    diamondCut(
      _diamondCut: FacetCutStruct[],
      _init: string,
      _calldata: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    facetAddress(
      _functionSelector: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    facetAddresses(overrides?: CallOverrides): Promise<string[]>;

    facetFunctionSelectors(
      _facet: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    facets(overrides?: CallOverrides): Promise<FacetStructOutput[]>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    _endBattleArmy(
      _army: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _endBattleCity(
      _army: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _startBattleArmy(
      _army: BigNumberish,
      _targetArmy: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _startBattleCity(
      _army: BigNumberish,
      _city: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    disbandArmy(_army: BigNumberish, overrides?: CallOverrides): Promise<void>;

    endProduction(
      _building: BigNumberish,
      _production: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    foldCity(
      _city: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    foundCity(
      _settler: BigNumberish,
      _territory: PositionStruct[],
      _centerPosition: PositionStruct,
      _cityName: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initializePlayer(
      _position: PositionStruct,
      _name: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { _player: BigNumber; _settler: BigNumber }
    >;

    moveArmy(
      _army: BigNumberish,
      _targetPosition: PositionStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    moveSettler(
      _settler: BigNumberish,
      _targetPosition: PositionStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    organizeArmy(
      _city: BigNumberish,
      _troopTypes: string[],
      _amounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    startProduction(
      _building: BigNumberish,
      _template: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    unfoldCity(
      _settler: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    upgradeCity(
      _city: BigNumberish,
      _newTerritory: PositionStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    getComponent(_name: string, overrides?: CallOverrides): Promise<string>;

    getComponentById(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getEntity(overrides?: CallOverrides): Promise<BigNumber>;

    getPlayerCount(overrides?: CallOverrides): Promise<BigNumber>;

    getPlayerId(_player: string, overrides?: CallOverrides): Promise<BigNumber>;

    getTileAt(
      _pos: PositionStruct,
      overrides?: CallOverrides
    ): Promise<TileStructOutput>;

    getWorldConstants(
      overrides?: CallOverrides
    ): Promise<WorldConstantsStructOutput>;

    isPlayerInitialized(
      _player: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    owner(overrides?: CallOverrides): Promise<string>;

    transferOwnership(
      _newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    _concatenate(
      _arr1: BigNumberish[],
      _arr2: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    _difference(
      set1: string,
      set2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    _getAddress(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    _getAddressComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<string>;

    _getBool(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    _getBoolComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<string>;

    _getComponent(_name: string, overrides?: CallOverrides): Promise<string>;

    _getComponentByEntity(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    _getComponentValue(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    _getInt(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getIntComponent(_name: string, overrides?: CallOverrides): Promise<string>;

    _getPosition(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PositionStructOutput>;

    _getPositionComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<string>;

    _getString(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    _getStringArray(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    _getStringArrayComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<string>;

    _getStringComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<string>;

    _getUint(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getUintArray(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    _getUintArrayComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<string>;

    _getUintComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    "DiamondCut(tuple[],address,bytes)"(
      _diamondCut?: null,
      _init?: null,
      _calldata?: null
    ): DiamondCutEventFilter;
    DiamondCut(
      _diamondCut?: null,
      _init?: null,
      _calldata?: null
    ): DiamondCutEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;

    "ComponentValueRemoved(string,uint256)"(
      _componentName?: null,
      _entity?: null
    ): ComponentValueRemovedEventFilter;
    ComponentValueRemoved(
      _componentName?: null,
      _entity?: null
    ): ComponentValueRemovedEventFilter;

    "ComponentValueSet(string,uint256,bytes)"(
      _componentName?: null,
      _entity?: null,
      _value?: null
    ): ComponentValueSetEventFilter;
    ComponentValueSet(
      _componentName?: null,
      _entity?: null,
      _value?: null
    ): ComponentValueSetEventFilter;

    "EntityRemoved(uint256)"(_entity?: null): EntityRemovedEventFilter;
    EntityRemoved(_entity?: null): EntityRemovedEventFilter;

    "NewComponent(string,uint256)"(
      _name?: null,
      _entity?: null
    ): NewComponentEventFilter;
    NewComponent(_name?: null, _entity?: null): NewComponentEventFilter;

    "NewEntity(uint256)"(_entity?: null): NewEntityEventFilter;
    NewEntity(_entity?: null): NewEntityEventFilter;
  };

  estimateGas: {
    addEntity(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    bulkInitializeTiles(
      _positions: PositionStruct[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    pauseGame(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    reactivatePlayer(
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    registerComponents(
      _gameAddr: string,
      _componentSpecs: ComponentSpecStruct[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    registerDefaultComponents(
      _gameAddr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    resumeGame(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setComponentValue(
      _componentName: string,
      _entity: BigNumberish,
      _value: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    storeEncodedColumnBatches(
      _colBatches: BigNumberish[][],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    diamondCut(
      _diamondCut: FacetCutStruct[],
      _init: string,
      _calldata: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    facetAddress(
      _functionSelector: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    facetAddresses(overrides?: CallOverrides): Promise<BigNumber>;

    facetFunctionSelectors(
      _facet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    facets(overrides?: CallOverrides): Promise<BigNumber>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _endBattleArmy(
      _army: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _endBattleCity(
      _army: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _startBattleArmy(
      _army: BigNumberish,
      _targetArmy: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _startBattleCity(
      _army: BigNumberish,
      _city: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    disbandArmy(
      _army: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    endProduction(
      _building: BigNumberish,
      _production: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    foldCity(
      _city: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    foundCity(
      _settler: BigNumberish,
      _territory: PositionStruct[],
      _centerPosition: PositionStruct,
      _cityName: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    initializePlayer(
      _position: PositionStruct,
      _name: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    moveArmy(
      _army: BigNumberish,
      _targetPosition: PositionStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    moveSettler(
      _settler: BigNumberish,
      _targetPosition: PositionStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    organizeArmy(
      _city: BigNumberish,
      _troopTypes: string[],
      _amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    startProduction(
      _building: BigNumberish,
      _template: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    unfoldCity(
      _settler: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    upgradeCity(
      _city: BigNumberish,
      _newTerritory: PositionStruct[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getComponent(_name: string, overrides?: CallOverrides): Promise<BigNumber>;

    getComponentById(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getEntity(overrides?: CallOverrides): Promise<BigNumber>;

    getPlayerCount(overrides?: CallOverrides): Promise<BigNumber>;

    getPlayerId(_player: string, overrides?: CallOverrides): Promise<BigNumber>;

    getTileAt(
      _pos: PositionStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getWorldConstants(overrides?: CallOverrides): Promise<BigNumber>;

    isPlayerInitialized(
      _player: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _concatenate(
      _arr1: BigNumberish[],
      _arr2: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _difference(
      set1: string,
      set2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getAddress(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getAddressComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getBool(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getBoolComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getComponent(_name: string, overrides?: CallOverrides): Promise<BigNumber>;

    _getComponentByEntity(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getComponentValue(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getInt(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getIntComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getPosition(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getPositionComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getString(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getStringArray(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getStringArrayComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getStringComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getUint(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getUintArray(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getUintArrayComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getUintComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addEntity(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    bulkInitializeTiles(
      _positions: PositionStruct[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    pauseGame(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    reactivatePlayer(
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    registerComponents(
      _gameAddr: string,
      _componentSpecs: ComponentSpecStruct[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    registerDefaultComponents(
      _gameAddr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    resumeGame(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setComponentValue(
      _componentName: string,
      _entity: BigNumberish,
      _value: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    storeEncodedColumnBatches(
      _colBatches: BigNumberish[][],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    diamondCut(
      _diamondCut: FacetCutStruct[],
      _init: string,
      _calldata: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    facetAddress(
      _functionSelector: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    facetAddresses(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    facetFunctionSelectors(
      _facet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    facets(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    supportsInterface(
      _interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _endBattleArmy(
      _army: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _endBattleCity(
      _army: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _startBattleArmy(
      _army: BigNumberish,
      _targetArmy: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _startBattleCity(
      _army: BigNumberish,
      _city: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    disbandArmy(
      _army: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    endProduction(
      _building: BigNumberish,
      _production: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    foldCity(
      _city: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    foundCity(
      _settler: BigNumberish,
      _territory: PositionStruct[],
      _centerPosition: PositionStruct,
      _cityName: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    initializePlayer(
      _position: PositionStruct,
      _name: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    moveArmy(
      _army: BigNumberish,
      _targetPosition: PositionStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    moveSettler(
      _settler: BigNumberish,
      _targetPosition: PositionStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    organizeArmy(
      _city: BigNumberish,
      _troopTypes: string[],
      _amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    startProduction(
      _building: BigNumberish,
      _template: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    unfoldCity(
      _settler: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    upgradeCity(
      _city: BigNumberish,
      _newTerritory: PositionStruct[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getComponentById(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getEntity(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPlayerCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPlayerId(
      _player: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTileAt(
      _pos: PositionStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getWorldConstants(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    isPlayerInitialized(
      _player: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferOwnership(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _concatenate(
      _arr1: BigNumberish[],
      _arr2: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _difference(
      set1: string,
      set2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getAddress(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getAddressComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getBool(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getBoolComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getComponentByEntity(
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getComponentValue(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getInt(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getIntComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getPosition(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getPositionComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getString(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getStringArray(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getStringArrayComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getStringComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getUint(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getUintArray(
      _componentName: string,
      _entity: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getUintArrayComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getUintComponent(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
