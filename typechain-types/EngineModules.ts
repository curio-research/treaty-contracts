/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type PositionStruct = { x: BigNumberish; y: BigNumberish };

export type PositionStructOutput = [BigNumber, BigNumber] & {
  x: BigNumber;
  y: BigNumber;
};

export type ArmyStruct = {
  owner: string;
  troopIds: BigNumberish[];
  lastMoved: BigNumberish;
  lastLargeActionTaken: BigNumberish;
  pos: PositionStruct;
};

export type ArmyStructOutput = [
  string,
  BigNumber[],
  BigNumber,
  BigNumber,
  PositionStructOutput
] & {
  owner: string;
  troopIds: BigNumber[];
  lastMoved: BigNumber;
  lastLargeActionTaken: BigNumber;
  pos: PositionStructOutput;
};

export type TroopStruct = {
  armyId: BigNumberish;
  troopTypeId: BigNumberish;
  health: BigNumberish;
};

export type TroopStructOutput = [BigNumber, BigNumber, BigNumber] & {
  armyId: BigNumber;
  troopTypeId: BigNumber;
  health: BigNumber;
};

export interface EngineModulesInterface extends utils.Interface {
  functions: {
    "_troopJoinArmySizeCheck((address,uint256[],uint256,uint256,(uint256,uint256)),(uint256,uint256,uint256))": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_troopJoinArmySizeCheck",
    values: [ArmyStruct, TroopStruct]
  ): string;

  decodeFunctionResult(
    functionFragment: "_troopJoinArmySizeCheck",
    data: BytesLike
  ): Result;

  events: {};
}

export interface EngineModules extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: EngineModulesInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    _troopJoinArmySizeCheck(
      _mainArmy: ArmyStruct,
      _joiningTroop: TroopStruct,
      overrides?: CallOverrides
    ): Promise<[void]>;
  };

  _troopJoinArmySizeCheck(
    _mainArmy: ArmyStruct,
    _joiningTroop: TroopStruct,
    overrides?: CallOverrides
  ): Promise<void>;

  callStatic: {
    _troopJoinArmySizeCheck(
      _mainArmy: ArmyStruct,
      _joiningTroop: TroopStruct,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    _troopJoinArmySizeCheck(
      _mainArmy: ArmyStruct,
      _joiningTroop: TroopStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    _troopJoinArmySizeCheck(
      _mainArmy: ArmyStruct,
      _joiningTroop: TroopStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
