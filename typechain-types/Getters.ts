/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type ItemWithMetadataStruct = {
  materialIds: BigNumberish[];
  materialAmounts: BigNumberish[];
};

export type ItemWithMetadataStructOutput = [BigNumber[], BigNumber[]] & {
  materialIds: BigNumber[];
  materialAmounts: BigNumber[];
};

export type PositionStruct = { x: BigNumberish; y: BigNumberish };

export type PositionStructOutput = [BigNumber, BigNumber] & {
  x: BigNumber;
  y: BigNumber;
};

export type PlayerDataStruct = {
  a: string;
  alive: boolean;
  isInitialized: boolean;
  initTimestamp: BigNumberish;
  position: PositionStruct;
  energy: BigNumberish;
  health: BigNumberish;
  level: BigNumberish;
};

export type PlayerDataStructOutput = [
  string,
  boolean,
  boolean,
  BigNumber,
  PositionStructOutput,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  a: string;
  alive: boolean;
  isInitialized: boolean;
  initTimestamp: BigNumber;
  position: PositionStructOutput;
  energy: BigNumber;
  health: BigNumber;
  level: BigNumber;
};

export interface GettersInterface extends utils.Interface {
  functions: {
    "bulkGetAllItems()": FunctionFragment;
    "bulkGetAllPlayerData()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "bulkGetAllItems",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "bulkGetAllPlayerData",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "bulkGetAllItems",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkGetAllPlayerData",
    data: BytesLike
  ): Result;

  events: {};
}

export interface Getters extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: GettersInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    bulkGetAllItems(
      overrides?: CallOverrides
    ): Promise<[ItemWithMetadataStructOutput[]]>;

    bulkGetAllPlayerData(
      overrides?: CallOverrides
    ): Promise<[PlayerDataStructOutput[]]>;
  };

  bulkGetAllItems(
    overrides?: CallOverrides
  ): Promise<ItemWithMetadataStructOutput[]>;

  bulkGetAllPlayerData(
    overrides?: CallOverrides
  ): Promise<PlayerDataStructOutput[]>;

  callStatic: {
    bulkGetAllItems(
      overrides?: CallOverrides
    ): Promise<ItemWithMetadataStructOutput[]>;

    bulkGetAllPlayerData(
      overrides?: CallOverrides
    ): Promise<PlayerDataStructOutput[]>;
  };

  filters: {};

  estimateGas: {
    bulkGetAllItems(overrides?: CallOverrides): Promise<BigNumber>;

    bulkGetAllPlayerData(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    bulkGetAllItems(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    bulkGetAllPlayerData(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
