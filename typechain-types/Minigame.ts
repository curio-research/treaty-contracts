/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type ItemWithMetadataStruct = {
  mineable: boolean;
  mineItemIds: BigNumberish[];
  strength: BigNumberish;
  craftable: boolean;
  craftItemIds: BigNumberish[];
  craftItemAmounts: BigNumberish[];
  occupiable: boolean;
  healthDamage: BigNumberish;
  energyDamage: BigNumberish;
};

export type ItemWithMetadataStructOutput = [
  boolean,
  BigNumber[],
  BigNumber,
  boolean,
  BigNumber[],
  BigNumber[],
  boolean,
  BigNumber,
  BigNumber
] & {
  mineable: boolean;
  mineItemIds: BigNumber[];
  strength: BigNumber;
  craftable: boolean;
  craftItemIds: BigNumber[];
  craftItemAmounts: BigNumber[];
  occupiable: boolean;
  healthDamage: BigNumber;
  energyDamage: BigNumber;
};

export type PositionStruct = { x: BigNumberish; y: BigNumberish };

export type PositionStructOutput = [BigNumber, BigNumber] & {
  x: BigNumber;
  y: BigNumber;
};

export type PlayerDataStruct = {
  initialized: boolean;
  initTimestamp: BigNumberish;
  playerAddr: string;
  alive: boolean;
  position: PositionStruct;
  health: BigNumberish;
  energy: BigNumberish;
};

export type PlayerDataStructOutput = [
  boolean,
  BigNumber,
  string,
  boolean,
  PositionStructOutput,
  BigNumber,
  BigNumber
] & {
  initialized: boolean;
  initTimestamp: BigNumber;
  playerAddr: string;
  alive: boolean;
  position: PositionStructOutput;
  health: BigNumber;
  energy: BigNumber;
};

export type RecipeStruct = {
  craftItemIds: BigNumberish[];
  craftItemAmounts: BigNumberish[];
};

export type RecipeStructOutput = [BigNumber[], BigNumber[]] & {
  craftItemIds: BigNumber[];
  craftItemAmounts: BigNumber[];
};

export type TileWithMetadataStruct = {
  occupier: string;
  blocks: BigNumberish[];
  x: BigNumberish;
  y: BigNumberish;
};

export type TileWithMetadataStructOutput = [
  string,
  BigNumber[],
  BigNumber,
  BigNumber
] & { occupier: string; blocks: BigNumber[]; x: BigNumber; y: BigNumber };

export interface MinigameInterface extends utils.Interface {
  functions: {
    "_addCraftItemAndAmount(uint256,uint256[],uint256[])": FunctionFragment;
    "_blockOccupier(uint256,uint256)": FunctionFragment;
    "_decreaseEnergy(address,uint256)": FunctionFragment;
    "_decreaseHealth(address,uint256)": FunctionFragment;
    "_decreaseItemInInventory(address,uint256,uint256)": FunctionFragment;
    "_die(address)": FunctionFragment;
    "_getAllPlayerAddresses()": FunctionFragment;
    "_getAllPlayerData(address)": FunctionFragment;
    "_getBlockAtPosition(uint256,uint256,uint256)": FunctionFragment;
    "_getBlockCountAtPosition(uint256,uint256)": FunctionFragment;
    "_getInventoryByPlayer(address)": FunctionFragment;
    "_getItemAmountById(address,uint256)": FunctionFragment;
    "_getItemNonce()": FunctionFragment;
    "_getItemWithMetadata(uint256)": FunctionFragment;
    "_getMap(uint256,uint256)": FunctionFragment;
    "_getPlayerPosition(address)": FunctionFragment;
    "_getPositionFromIndex(uint256)": FunctionFragment;
    "_getTopBlockAtPosition(uint256,uint256)": FunctionFragment;
    "_getWorldSize()": FunctionFragment;
    "_increaseEnergy(address,uint256)": FunctionFragment;
    "_increaseHealth(address,uint256)": FunctionFragment;
    "_increaseItemInInventory(address,uint256,uint256)": FunctionFragment;
    "_isItemActive(uint256)": FunctionFragment;
    "_isOccupied(uint256,uint256)": FunctionFragment;
    "_isValidAttack(address,address)": FunctionFragment;
    "_isValidMove(address,uint256,uint256)": FunctionFragment;
    "_mine(uint256,uint256)": FunctionFragment;
    "_modifyItemInInventoryNonce(uint256,bool)": FunctionFragment;
    "_place(uint256,uint256,uint256)": FunctionFragment;
    "_removeCraftItemAndAmount(uint256)": FunctionFragment;
    "_setOccupierAtPosition(address,uint256,uint256)": FunctionFragment;
    "_setPlayerPosition(address,uint256,uint256)": FunctionFragment;
    "_transfer(address,uint256,uint256)": FunctionFragment;
    "_withinDistance(uint256,uint256,uint256,uint256,uint256)": FunctionFragment;
    "attack(address)": FunctionFragment;
    "craft(uint256)": FunctionFragment;
    "gameName()": FunctionFragment;
    "initializePlayer(uint256,uint256)": FunctionFragment;
    "mine(uint256,uint256,uint256)": FunctionFragment;
    "move(uint256,uint256)": FunctionFragment;
    "place(uint256,uint256,uint256)": FunctionFragment;
    "s()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_addCraftItemAndAmount",
    values: [BigNumberish, BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "_blockOccupier",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_decreaseEnergy",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_decreaseHealth",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_decreaseItemInInventory",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "_die", values: [string]): string;
  encodeFunctionData(
    functionFragment: "_getAllPlayerAddresses",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_getAllPlayerData",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getBlockAtPosition",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getBlockCountAtPosition",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getInventoryByPlayer",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getItemAmountById",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getItemNonce",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_getItemWithMetadata",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getMap",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getPlayerPosition",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getPositionFromIndex",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getTopBlockAtPosition",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getWorldSize",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_increaseEnergy",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_increaseHealth",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_increaseItemInInventory",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_isItemActive",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_isOccupied",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_isValidAttack",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "_isValidMove",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_mine",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_modifyItemInInventoryNonce",
    values: [BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "_place",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_removeCraftItemAndAmount",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_setOccupierAtPosition",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_setPlayerPosition",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_transfer",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_withinDistance",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(functionFragment: "attack", values: [string]): string;
  encodeFunctionData(functionFragment: "craft", values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: "gameName", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "initializePlayer",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mine",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "move",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "place",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "s", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "_addCraftItemAndAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_blockOccupier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_decreaseEnergy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_decreaseHealth",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_decreaseItemInInventory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_die", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_getAllPlayerAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getAllPlayerData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getBlockAtPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getBlockCountAtPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getInventoryByPlayer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getItemAmountById",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getItemNonce",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getItemWithMetadata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_getMap", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_getPlayerPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getPositionFromIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getTopBlockAtPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getWorldSize",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_increaseEnergy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_increaseHealth",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_increaseItemInInventory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_isItemActive",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_isOccupied",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_isValidAttack",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_isValidMove",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_mine", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_modifyItemInInventoryNonce",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_place", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_removeCraftItemAndAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_setOccupierAtPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_setPlayerPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_transfer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_withinDistance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "attack", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "craft", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "gameName", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initializePlayer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mine", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "move", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "place", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "s", data: BytesLike): Result;

  events: {
    "Attack(address,address)": EventFragment;
    "Craft(address,uint256)": EventFragment;
    "Death(address)": EventFragment;
    "Mine(address,uint256,uint256,uint256,uint256)": EventFragment;
    "Move(address,uint256,uint256)": EventFragment;
    "NewPlayer(address,uint256,uint256)": EventFragment;
    "Place(address,uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Attack"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Craft"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Death"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Mine"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Move"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewPlayer"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Place"): EventFragment;
}

export type AttackEvent = TypedEvent<
  [string, string],
  { _player1: string; _player2: string }
>;

export type AttackEventFilter = TypedEventFilter<AttackEvent>;

export type CraftEvent = TypedEvent<
  [string, BigNumber],
  { _player: string; _blockId: BigNumber }
>;

export type CraftEventFilter = TypedEventFilter<CraftEvent>;

export type DeathEvent = TypedEvent<[string], { _player: string }>;

export type DeathEventFilter = TypedEventFilter<DeathEvent>;

export type MineEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber, BigNumber],
  {
    _player: string;
    _x: BigNumber;
    _y: BigNumber;
    _blockId: BigNumber;
    _zIndex: BigNumber;
  }
>;

export type MineEventFilter = TypedEventFilter<MineEvent>;

export type MoveEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  { _player: string; _x: BigNumber; _y: BigNumber }
>;

export type MoveEventFilter = TypedEventFilter<MoveEvent>;

export type NewPlayerEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  { _player: string; _x: BigNumber; _y: BigNumber }
>;

export type NewPlayerEventFilter = TypedEventFilter<NewPlayerEvent>;

export type PlaceEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber],
  { _player: string; _x: BigNumber; _y: BigNumber; _blockId: BigNumber }
>;

export type PlaceEventFilter = TypedEventFilter<PlaceEvent>;

export interface Minigame extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MinigameInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    _addCraftItemAndAmount(
      _itemId: BigNumberish,
      _craftItemIds: BigNumberish[],
      _craftItemAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _blockOccupier(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _decreaseEnergy(
      _player: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _decreaseHealth(
      _player: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _decreaseItemInInventory(
      _player: string,
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _die(
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _getAllPlayerAddresses(overrides?: CallOverrides): Promise<[string[]]>;

    _getAllPlayerData(
      _player: string,
      overrides?: CallOverrides
    ): Promise<
      [PlayerDataStructOutput] & { playerData: PlayerDataStructOutput }
    >;

    _getBlockAtPosition(
      _x: BigNumberish,
      _y: BigNumberish,
      _zIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getBlockCountAtPosition(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getInventoryByPlayer(
      _player: string,
      overrides?: CallOverrides
    ): Promise<[RecipeStructOutput]>;

    _getItemAmountById(
      _player: string,
      _blockId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getItemNonce(overrides?: CallOverrides): Promise<[BigNumber]>;

    _getItemWithMetadata(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[ItemWithMetadataStructOutput]>;

    _getMap(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[TileWithMetadataStructOutput[]]>;

    _getPlayerPosition(
      _player: string,
      overrides?: CallOverrides
    ): Promise<[PositionStructOutput]>;

    _getPositionFromIndex(
      k: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[PositionStructOutput]>;

    _getTopBlockAtPosition(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getWorldSize(overrides?: CallOverrides): Promise<[BigNumber, BigNumber]>;

    _increaseEnergy(
      _player: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _increaseHealth(
      _player: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _increaseItemInInventory(
      _player: string,
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _isItemActive(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    _isOccupied(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    _isValidAttack(
      _player: string,
      _target: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    _isValidMove(
      _player: string,
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    _mine(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _modifyItemInInventoryNonce(
      _itemId: BigNumberish,
      dir: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _place(
      _x: BigNumberish,
      _y: BigNumberish,
      _itemId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _removeCraftItemAndAmount(
      _itemId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _setOccupierAtPosition(
      _player: string,
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _setPlayerPosition(
      _player: string,
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _transfer(
      _recipient: string,
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _withinDistance(
      _x1: BigNumberish,
      _y1: BigNumberish,
      _x2: BigNumberish,
      _y2: BigNumberish,
      _dist: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    attack(
      _target: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    craft(
      _itemId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    gameName(overrides?: CallOverrides): Promise<[string] & { name: string }>;

    initializePlayer(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    mine(
      _x: BigNumberish,
      _y: BigNumberish,
      _zIdx: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    move(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    place(
      _x: BigNumberish,
      _y: BigNumberish,
      _itemId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    s(
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        BigNumber,
        string,
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        worldWidth: BigNumber;
        worldHeight: BigNumber;
        admin: string;
        paused: boolean;
        itemNonce: BigNumber;
        moveRange: BigNumber;
        attackRange: BigNumber;
        attackDamage: BigNumber;
        attackWaitTime: BigNumber;
        startPlayerHealth: BigNumber;
        startPlayerEnergy: BigNumber;
      }
    >;
  };

  _addCraftItemAndAmount(
    _itemId: BigNumberish,
    _craftItemIds: BigNumberish[],
    _craftItemAmounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _blockOccupier(
    _x: BigNumberish,
    _y: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  _decreaseEnergy(
    _player: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _decreaseHealth(
    _player: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _decreaseItemInInventory(
    _player: string,
    _itemId: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _die(
    _player: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _getAllPlayerAddresses(overrides?: CallOverrides): Promise<string[]>;

  _getAllPlayerData(
    _player: string,
    overrides?: CallOverrides
  ): Promise<PlayerDataStructOutput>;

  _getBlockAtPosition(
    _x: BigNumberish,
    _y: BigNumberish,
    _zIdx: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getBlockCountAtPosition(
    _x: BigNumberish,
    _y: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getInventoryByPlayer(
    _player: string,
    overrides?: CallOverrides
  ): Promise<RecipeStructOutput>;

  _getItemAmountById(
    _player: string,
    _blockId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getItemNonce(overrides?: CallOverrides): Promise<BigNumber>;

  _getItemWithMetadata(
    _itemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<ItemWithMetadataStructOutput>;

  _getMap(
    _x: BigNumberish,
    _y: BigNumberish,
    overrides?: CallOverrides
  ): Promise<TileWithMetadataStructOutput[]>;

  _getPlayerPosition(
    _player: string,
    overrides?: CallOverrides
  ): Promise<PositionStructOutput>;

  _getPositionFromIndex(
    k: BigNumberish,
    overrides?: CallOverrides
  ): Promise<PositionStructOutput>;

  _getTopBlockAtPosition(
    _x: BigNumberish,
    _y: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getWorldSize(overrides?: CallOverrides): Promise<[BigNumber, BigNumber]>;

  _increaseEnergy(
    _player: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _increaseHealth(
    _player: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _increaseItemInInventory(
    _player: string,
    _itemId: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _isItemActive(
    _itemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  _isOccupied(
    _x: BigNumberish,
    _y: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  _isValidAttack(
    _player: string,
    _target: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  _isValidMove(
    _player: string,
    _x: BigNumberish,
    _y: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  _mine(
    _x: BigNumberish,
    _y: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _modifyItemInInventoryNonce(
    _itemId: BigNumberish,
    dir: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _place(
    _x: BigNumberish,
    _y: BigNumberish,
    _itemId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _removeCraftItemAndAmount(
    _itemId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _setOccupierAtPosition(
    _player: string,
    _x: BigNumberish,
    _y: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _setPlayerPosition(
    _player: string,
    _x: BigNumberish,
    _y: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _transfer(
    _recipient: string,
    _itemId: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _withinDistance(
    _x1: BigNumberish,
    _y1: BigNumberish,
    _x2: BigNumberish,
    _y2: BigNumberish,
    _dist: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  attack(
    _target: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  craft(
    _itemId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  gameName(overrides?: CallOverrides): Promise<string>;

  initializePlayer(
    _x: BigNumberish,
    _y: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  mine(
    _x: BigNumberish,
    _y: BigNumberish,
    _zIdx: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  move(
    _x: BigNumberish,
    _y: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  place(
    _x: BigNumberish,
    _y: BigNumberish,
    _itemId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  s(
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      BigNumber,
      string,
      boolean,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      worldWidth: BigNumber;
      worldHeight: BigNumber;
      admin: string;
      paused: boolean;
      itemNonce: BigNumber;
      moveRange: BigNumber;
      attackRange: BigNumber;
      attackDamage: BigNumber;
      attackWaitTime: BigNumber;
      startPlayerHealth: BigNumber;
      startPlayerEnergy: BigNumber;
    }
  >;

  callStatic: {
    _addCraftItemAndAmount(
      _itemId: BigNumberish,
      _craftItemIds: BigNumberish[],
      _craftItemAmounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    _blockOccupier(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    _decreaseEnergy(
      _player: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _decreaseHealth(
      _player: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _decreaseItemInInventory(
      _player: string,
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _die(_player: string, overrides?: CallOverrides): Promise<void>;

    _getAllPlayerAddresses(overrides?: CallOverrides): Promise<string[]>;

    _getAllPlayerData(
      _player: string,
      overrides?: CallOverrides
    ): Promise<PlayerDataStructOutput>;

    _getBlockAtPosition(
      _x: BigNumberish,
      _y: BigNumberish,
      _zIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getBlockCountAtPosition(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getInventoryByPlayer(
      _player: string,
      overrides?: CallOverrides
    ): Promise<RecipeStructOutput>;

    _getItemAmountById(
      _player: string,
      _blockId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getItemNonce(overrides?: CallOverrides): Promise<BigNumber>;

    _getItemWithMetadata(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<ItemWithMetadataStructOutput>;

    _getMap(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<TileWithMetadataStructOutput[]>;

    _getPlayerPosition(
      _player: string,
      overrides?: CallOverrides
    ): Promise<PositionStructOutput>;

    _getPositionFromIndex(
      k: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PositionStructOutput>;

    _getTopBlockAtPosition(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getWorldSize(overrides?: CallOverrides): Promise<[BigNumber, BigNumber]>;

    _increaseEnergy(
      _player: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _increaseHealth(
      _player: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _increaseItemInInventory(
      _player: string,
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _isItemActive(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    _isOccupied(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    _isValidAttack(
      _player: string,
      _target: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    _isValidMove(
      _player: string,
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    _mine(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _modifyItemInInventoryNonce(
      _itemId: BigNumberish,
      dir: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    _place(
      _x: BigNumberish,
      _y: BigNumberish,
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _removeCraftItemAndAmount(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _setOccupierAtPosition(
      _player: string,
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _setPlayerPosition(
      _player: string,
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _transfer(
      _recipient: string,
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _withinDistance(
      _x1: BigNumberish,
      _y1: BigNumberish,
      _x2: BigNumberish,
      _y2: BigNumberish,
      _dist: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    attack(_target: string, overrides?: CallOverrides): Promise<void>;

    craft(_itemId: BigNumberish, overrides?: CallOverrides): Promise<void>;

    gameName(overrides?: CallOverrides): Promise<string>;

    initializePlayer(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    mine(
      _x: BigNumberish,
      _y: BigNumberish,
      _zIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    move(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    place(
      _x: BigNumberish,
      _y: BigNumberish,
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    s(
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        BigNumber,
        string,
        boolean,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        worldWidth: BigNumber;
        worldHeight: BigNumber;
        admin: string;
        paused: boolean;
        itemNonce: BigNumber;
        moveRange: BigNumber;
        attackRange: BigNumber;
        attackDamage: BigNumber;
        attackWaitTime: BigNumber;
        startPlayerHealth: BigNumber;
        startPlayerEnergy: BigNumber;
      }
    >;
  };

  filters: {
    "Attack(address,address)"(
      _player1?: null,
      _player2?: null
    ): AttackEventFilter;
    Attack(_player1?: null, _player2?: null): AttackEventFilter;

    "Craft(address,uint256)"(_player?: null, _blockId?: null): CraftEventFilter;
    Craft(_player?: null, _blockId?: null): CraftEventFilter;

    "Death(address)"(_player?: null): DeathEventFilter;
    Death(_player?: null): DeathEventFilter;

    "Mine(address,uint256,uint256,uint256,uint256)"(
      _player?: null,
      _x?: null,
      _y?: null,
      _blockId?: null,
      _zIndex?: null
    ): MineEventFilter;
    Mine(
      _player?: null,
      _x?: null,
      _y?: null,
      _blockId?: null,
      _zIndex?: null
    ): MineEventFilter;

    "Move(address,uint256,uint256)"(
      _player?: null,
      _x?: null,
      _y?: null
    ): MoveEventFilter;
    Move(_player?: null, _x?: null, _y?: null): MoveEventFilter;

    "NewPlayer(address,uint256,uint256)"(
      _player?: null,
      _x?: null,
      _y?: null
    ): NewPlayerEventFilter;
    NewPlayer(_player?: null, _x?: null, _y?: null): NewPlayerEventFilter;

    "Place(address,uint256,uint256,uint256)"(
      _player?: null,
      _x?: null,
      _y?: null,
      _blockId?: null
    ): PlaceEventFilter;
    Place(
      _player?: null,
      _x?: null,
      _y?: null,
      _blockId?: null
    ): PlaceEventFilter;
  };

  estimateGas: {
    _addCraftItemAndAmount(
      _itemId: BigNumberish,
      _craftItemIds: BigNumberish[],
      _craftItemAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _blockOccupier(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _decreaseEnergy(
      _player: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _decreaseHealth(
      _player: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _decreaseItemInInventory(
      _player: string,
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _die(
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _getAllPlayerAddresses(overrides?: CallOverrides): Promise<BigNumber>;

    _getAllPlayerData(
      _player: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getBlockAtPosition(
      _x: BigNumberish,
      _y: BigNumberish,
      _zIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getBlockCountAtPosition(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getInventoryByPlayer(
      _player: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getItemAmountById(
      _player: string,
      _blockId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getItemNonce(overrides?: CallOverrides): Promise<BigNumber>;

    _getItemWithMetadata(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getMap(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getPlayerPosition(
      _player: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getPositionFromIndex(
      k: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getTopBlockAtPosition(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getWorldSize(overrides?: CallOverrides): Promise<BigNumber>;

    _increaseEnergy(
      _player: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _increaseHealth(
      _player: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _increaseItemInInventory(
      _player: string,
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _isItemActive(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _isOccupied(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _isValidAttack(
      _player: string,
      _target: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _isValidMove(
      _player: string,
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _mine(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _modifyItemInInventoryNonce(
      _itemId: BigNumberish,
      dir: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _place(
      _x: BigNumberish,
      _y: BigNumberish,
      _itemId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _removeCraftItemAndAmount(
      _itemId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _setOccupierAtPosition(
      _player: string,
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _setPlayerPosition(
      _player: string,
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _transfer(
      _recipient: string,
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _withinDistance(
      _x1: BigNumberish,
      _y1: BigNumberish,
      _x2: BigNumberish,
      _y2: BigNumberish,
      _dist: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    attack(
      _target: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    craft(
      _itemId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    gameName(overrides?: CallOverrides): Promise<BigNumber>;

    initializePlayer(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    mine(
      _x: BigNumberish,
      _y: BigNumberish,
      _zIdx: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    move(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    place(
      _x: BigNumberish,
      _y: BigNumberish,
      _itemId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    s(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    _addCraftItemAndAmount(
      _itemId: BigNumberish,
      _craftItemIds: BigNumberish[],
      _craftItemAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _blockOccupier(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _decreaseEnergy(
      _player: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _decreaseHealth(
      _player: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _decreaseItemInInventory(
      _player: string,
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _die(
      _player: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _getAllPlayerAddresses(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getAllPlayerData(
      _player: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getBlockAtPosition(
      _x: BigNumberish,
      _y: BigNumberish,
      _zIdx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getBlockCountAtPosition(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getInventoryByPlayer(
      _player: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getItemAmountById(
      _player: string,
      _blockId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getItemNonce(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _getItemWithMetadata(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getMap(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getPlayerPosition(
      _player: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getPositionFromIndex(
      k: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getTopBlockAtPosition(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getWorldSize(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _increaseEnergy(
      _player: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _increaseHealth(
      _player: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _increaseItemInInventory(
      _player: string,
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _isItemActive(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _isOccupied(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _isValidAttack(
      _player: string,
      _target: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _isValidMove(
      _player: string,
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _mine(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _modifyItemInInventoryNonce(
      _itemId: BigNumberish,
      dir: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _place(
      _x: BigNumberish,
      _y: BigNumberish,
      _itemId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _removeCraftItemAndAmount(
      _itemId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _setOccupierAtPosition(
      _player: string,
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _setPlayerPosition(
      _player: string,
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _transfer(
      _recipient: string,
      _itemId: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _withinDistance(
      _x1: BigNumberish,
      _y1: BigNumberish,
      _x2: BigNumberish,
      _y2: BigNumberish,
      _dist: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    attack(
      _target: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    craft(
      _itemId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    gameName(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initializePlayer(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    mine(
      _x: BigNumberish,
      _y: BigNumberish,
      _zIdx: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    move(
      _x: BigNumberish,
      _y: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    place(
      _x: BigNumberish,
      _y: BigNumberish,
      _itemId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    s(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
