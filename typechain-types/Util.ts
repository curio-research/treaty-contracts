/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type PositionStruct = { x: BigNumberish; y: BigNumberish };

export type PositionStructOutput = [BigNumber, BigNumber] & {
  x: BigNumber;
  y: BigNumber;
};

export type TileStruct = {
  terrain: BigNumberish;
  occupantId: BigNumberish;
  baseId: BigNumberish;
};

export type TileStructOutput = [number, BigNumber, BigNumber] & {
  terrain: number;
  occupantId: BigNumber;
  baseId: BigNumber;
};

export interface UtilInterface extends utils.Interface {
  functions: {
    "_getAttackCooldown(uint256)": FunctionFragment;
    "_getAttackFactor(uint256)": FunctionFragment;
    "_getBaseHealth(uint256)": FunctionFragment;
    "_getBaseOwner(uint256)": FunctionFragment;
    "_getCargoCapacity(uint256)": FunctionFragment;
    "_getDamagePerHit(uint256)": FunctionFragment;
    "_getDefenseFactor(uint256)": FunctionFragment;
    "_getEpochsToProduce(uint256)": FunctionFragment;
    "_getMaxHealth(uint256)": FunctionFragment;
    "_getMovementCooldown(uint256)": FunctionFragment;
    "_getSpeed(uint256)": FunctionFragment;
    "_getTileAt((uint256,uint256))": FunctionFragment;
    "_getTroopOwner(uint256)": FunctionFragment;
    "_getTroopPos(uint256)": FunctionFragment;
    "_hasPort((uint8,uint256,uint256))": FunctionFragment;
    "_hasTroopTransport((uint8,uint256,uint256))": FunctionFragment;
    "_inBound((uint256,uint256))": FunctionFragment;
    "_isLandTroop(uint256)": FunctionFragment;
    "_random(uint256,uint256)": FunctionFragment;
    "_samePos((uint256,uint256),(uint256,uint256))": FunctionFragment;
    "_strike(uint256)": FunctionFragment;
    "_withinDist((uint256,uint256),(uint256,uint256),uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_getAttackCooldown",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getAttackFactor",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getBaseHealth",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getBaseOwner",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getCargoCapacity",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getDamagePerHit",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getDefenseFactor",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getEpochsToProduce",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getMaxHealth",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getMovementCooldown",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getSpeed",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getTileAt",
    values: [PositionStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "_getTroopOwner",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_getTroopPos",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_hasPort",
    values: [TileStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "_hasTroopTransport",
    values: [TileStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "_inBound",
    values: [PositionStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "_isLandTroop",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_random",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_samePos",
    values: [PositionStruct, PositionStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "_strike",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_withinDist",
    values: [PositionStruct, PositionStruct, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "_getAttackCooldown",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getAttackFactor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getBaseHealth",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getBaseOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getCargoCapacity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getDamagePerHit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getDefenseFactor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getEpochsToProduce",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getMaxHealth",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getMovementCooldown",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_getSpeed", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_getTileAt", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_getTroopOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getTroopPos",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_hasPort", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_hasTroopTransport",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_inBound", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_isLandTroop",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_random", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_samePos", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_strike", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "_withinDist",
    data: BytesLike
  ): Result;

  events: {};
}

export interface Util extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: UtilInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    _getAttackCooldown(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getAttackFactor(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getBaseHealth(
      _baseId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getBaseOwner(
      _baseId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _getCargoCapacity(
      _troopId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getDamagePerHit(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getDefenseFactor(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getEpochsToProduce(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getMaxHealth(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getMovementCooldown(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getSpeed(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getTileAt(
      _pos: PositionStruct,
      overrides?: CallOverrides
    ): Promise<[TileStructOutput]>;

    _getTroopOwner(
      _troopId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    _getTroopPos(
      _troopId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[PositionStructOutput]>;

    _hasPort(_tile: TileStruct, overrides?: CallOverrides): Promise<[boolean]>;

    _hasTroopTransport(
      _tile: TileStruct,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    _inBound(_p: PositionStruct, overrides?: CallOverrides): Promise<[boolean]>;

    _isLandTroop(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    _random(
      _salt: BigNumberish,
      _max: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _samePos(
      _p1: PositionStruct,
      _p2: PositionStruct,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    _strike(
      _strikeFactor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    _withinDist(
      _p1: PositionStruct,
      _p2: PositionStruct,
      _dist: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  _getAttackCooldown(
    _troopTypeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getAttackFactor(
    _troopTypeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getBaseHealth(
    _baseId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getBaseOwner(
    _baseId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  _getCargoCapacity(
    _troopId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getDamagePerHit(
    _troopTypeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getDefenseFactor(
    _troopTypeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getEpochsToProduce(
    _troopTypeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getMaxHealth(
    _troopTypeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getMovementCooldown(
    _troopTypeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getSpeed(
    _troopTypeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getTileAt(
    _pos: PositionStruct,
    overrides?: CallOverrides
  ): Promise<TileStructOutput>;

  _getTroopOwner(
    _troopId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  _getTroopPos(
    _troopId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<PositionStructOutput>;

  _hasPort(_tile: TileStruct, overrides?: CallOverrides): Promise<boolean>;

  _hasTroopTransport(
    _tile: TileStruct,
    overrides?: CallOverrides
  ): Promise<boolean>;

  _inBound(_p: PositionStruct, overrides?: CallOverrides): Promise<boolean>;

  _isLandTroop(
    _troopTypeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  _random(
    _salt: BigNumberish,
    _max: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _samePos(
    _p1: PositionStruct,
    _p2: PositionStruct,
    overrides?: CallOverrides
  ): Promise<boolean>;

  _strike(
    _strikeFactor: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  _withinDist(
    _p1: PositionStruct,
    _p2: PositionStruct,
    _dist: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    _getAttackCooldown(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getAttackFactor(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getBaseHealth(
      _baseId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getBaseOwner(
      _baseId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    _getCargoCapacity(
      _troopId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getDamagePerHit(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getDefenseFactor(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getEpochsToProduce(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getMaxHealth(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getMovementCooldown(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getSpeed(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getTileAt(
      _pos: PositionStruct,
      overrides?: CallOverrides
    ): Promise<TileStructOutput>;

    _getTroopOwner(
      _troopId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    _getTroopPos(
      _troopId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PositionStructOutput>;

    _hasPort(_tile: TileStruct, overrides?: CallOverrides): Promise<boolean>;

    _hasTroopTransport(
      _tile: TileStruct,
      overrides?: CallOverrides
    ): Promise<boolean>;

    _inBound(_p: PositionStruct, overrides?: CallOverrides): Promise<boolean>;

    _isLandTroop(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    _random(
      _salt: BigNumberish,
      _max: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _samePos(
      _p1: PositionStruct,
      _p2: PositionStruct,
      overrides?: CallOverrides
    ): Promise<boolean>;

    _strike(
      _strikeFactor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    _withinDist(
      _p1: PositionStruct,
      _p2: PositionStruct,
      _dist: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    _getAttackCooldown(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getAttackFactor(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getBaseHealth(
      _baseId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getBaseOwner(
      _baseId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getCargoCapacity(
      _troopId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getDamagePerHit(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getDefenseFactor(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getEpochsToProduce(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getMaxHealth(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getMovementCooldown(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getSpeed(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getTileAt(
      _pos: PositionStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getTroopOwner(
      _troopId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getTroopPos(
      _troopId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _hasPort(_tile: TileStruct, overrides?: CallOverrides): Promise<BigNumber>;

    _hasTroopTransport(
      _tile: TileStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _inBound(_p: PositionStruct, overrides?: CallOverrides): Promise<BigNumber>;

    _isLandTroop(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _random(
      _salt: BigNumberish,
      _max: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _samePos(
      _p1: PositionStruct,
      _p2: PositionStruct,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _strike(
      _strikeFactor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _withinDist(
      _p1: PositionStruct,
      _p2: PositionStruct,
      _dist: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    _getAttackCooldown(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getAttackFactor(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getBaseHealth(
      _baseId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getBaseOwner(
      _baseId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getCargoCapacity(
      _troopId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getDamagePerHit(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getDefenseFactor(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getEpochsToProduce(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getMaxHealth(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getMovementCooldown(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getSpeed(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getTileAt(
      _pos: PositionStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getTroopOwner(
      _troopId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getTroopPos(
      _troopId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _hasPort(
      _tile: TileStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _hasTroopTransport(
      _tile: TileStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _inBound(
      _p: PositionStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _isLandTroop(
      _troopTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _random(
      _salt: BigNumberish,
      _max: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _samePos(
      _p1: PositionStruct,
      _p2: PositionStruct,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _strike(
      _strikeFactor: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _withinDist(
      _p1: PositionStruct,
      _p2: PositionStruct,
      _dist: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
