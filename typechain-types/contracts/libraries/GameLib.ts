/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface GameLibInterface extends utils.Interface {
  functions: {
    "getAttackBonus(uint256,uint256)": FunctionFragment;
    "getConstituents(uint256)": FunctionFragment;
    "getEntityByAddress(address)": FunctionFragment;
    "getTokenContract(string)": FunctionFragment;
    "getTreatyByName(string)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getAttackBonus"
      | "getConstituents"
      | "getEntityByAddress"
      | "getTokenContract"
      | "getTreatyByName"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getAttackBonus",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getConstituents",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getEntityByAddress",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenContract",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTreatyByName",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "getAttackBonus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getConstituents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEntityByAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTreatyByName",
    data: BytesLike
  ): Result;

  events: {
    "GamePaused()": EventFragment;
    "GameResumed()": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "GamePaused"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GameResumed"): EventFragment;
}

export interface GamePausedEventObject {}
export type GamePausedEvent = TypedEvent<[], GamePausedEventObject>;

export type GamePausedEventFilter = TypedEventFilter<GamePausedEvent>;

export interface GameResumedEventObject {}
export type GameResumedEvent = TypedEvent<[], GameResumedEventObject>;

export type GameResumedEventFilter = TypedEventFilter<GameResumedEvent>;

export interface GameLib extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: GameLibInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getAttackBonus(
      _offenderTemplateID: PromiseOrValue<BigNumberish>,
      _defenderTemplateID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getConstituents(
      _keeperID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getEntityByAddress(
      _entityAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTokenContract(
      _tokenName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getTreatyByName(
      _name: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  getAttackBonus(
    _offenderTemplateID: PromiseOrValue<BigNumberish>,
    _defenderTemplateID: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getConstituents(
    _keeperID: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getEntityByAddress(
    _entityAddress: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTokenContract(
    _tokenName: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  getTreatyByName(
    _name: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    getAttackBonus(
      _offenderTemplateID: PromiseOrValue<BigNumberish>,
      _defenderTemplateID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getConstituents(
      _keeperID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getEntityByAddress(
      _entityAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenContract(
      _tokenName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    getTreatyByName(
      _name: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    "GamePaused()"(): GamePausedEventFilter;
    GamePaused(): GamePausedEventFilter;

    "GameResumed()"(): GameResumedEventFilter;
    GameResumed(): GameResumedEventFilter;
  };

  estimateGas: {
    getAttackBonus(
      _offenderTemplateID: PromiseOrValue<BigNumberish>,
      _defenderTemplateID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getConstituents(
      _keeperID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getEntityByAddress(
      _entityAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenContract(
      _tokenName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTreatyByName(
      _name: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAttackBonus(
      _offenderTemplateID: PromiseOrValue<BigNumberish>,
      _defenderTemplateID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getConstituents(
      _keeperID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getEntityByAddress(
      _entityAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenContract(
      _tokenName: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTreatyByName(
      _name: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
