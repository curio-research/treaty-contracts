/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeTopLevelStrengthAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "_encodePos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "_getStakePointsByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTileData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "topLevelStrength",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopLevelStrengthAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
      {
        internalType: "contract Epoch",
        name: "epochController",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Epoch",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setEpochController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613bef806100206000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806387fc554911610125578063c537e3e5116100ad578063f095277c1161007c578063f095277c146106b1578063f09c4b26146106e1578063f0bfd52b14610711578063f17dd70714610741578063fad86c3c1461075d57610211565b8063c537e3e51461062d578063d81788471461065d578063dc8afb6314610679578063dd597d271461069557610211565b8063aae1eeac116100f4578063aae1eeac14610565578063b0b49ba514610581578063b62b7130146105b1578063be565940146105cd578063bfc525a2146105fd57610211565b806387fc5549146104b75780638bce7fab146104e7578063908b9f17146105055780639889c3211461053557610211565b806354480bca116101a85780636b7af8cb116101775780636b7af8cb146103f75780637956468814610427578063801b83db1461044357806386b714e21461047357806386e68be31461049b57610211565b806354480bca1461034b5780635a9c06441461037b5780635de24e181461039757806367ae0634146103c757610211565b8063487d2080116101e4578063487d20801461029f57806348c5a716146102bb5780634a4e51b3146102eb57806350607fee1461031b57610211565b80631ccd4c1514610216578063201549ac146102465780632c190c62146102625780633f261e0714610281575b600080fd5b610230600480360381019061022b9190612c3e565b61078d565b60405161023d9190613687565b60405180910390f35b610260600480360381019061025b9190612d41565b6107eb565b005b61026a610afa565b6040516102789291906136a2565b60405180910390f35b610289610b10565b60405161029691906134c9565b60405180910390f35b6102b960048036038101906102b49190612cc9565b610ba2565b005b6102d560048036038101906102d09190612bc6565b610c7a565b6040516102e2919061350d565b60405180910390f35b61030560048036038101906103009190612d6a565b610cc2565b604051610312919061350d565b60405180910390f35b61033560048036038101906103309190612d41565b610d62565b60405161034291906134eb565b60405180910390f35b61036560048036038101906103609190612b9d565b611054565b6040516103729190613687565b60405180910390f35b61039560048036038101906103909190612d18565b6110a0565b005b6103b160048036038101906103ac9190612d41565b6110e8565b6040516103be9190613528565b60405180910390f35b6103e160048036038101906103dc9190612d41565b61111b565b6040516103ee9190613469565b60405180910390f35b610411600480360381019061040c9190612d41565b6111cd565b60405161041e9190613665565b60405180910390f35b610441600480360381019061043c9190612cc9565b611325565b005b61045d60048036038101906104589190612e44565b6113a0565b60405161046a91906135ea565b60405180910390f35b61047b611549565b6040516104929b9a999897969594939291906136cb565b60405180910390f35b6104b560048036038101906104b09190612c02565b6115e7565b005b6104d160048036038101906104cc9190612c02565b6116b3565b6040516104de919061350d565b60405180910390f35b6104ef611757565b6040516104fc9190613687565b60405180910390f35b61051f600480360381019061051a9190612b9d565b611764565b60405161052c919061360c565b60405180910390f35b61054f600480360381019061054a9190612e44565b611882565b60405161055c919061350d565b60405180910390f35b61057f600480360381019061057a9190612e6d565b6118b2565b005b61059b60048036038101906105969190612db9565b611ac7565b6040516105a89190613687565b60405180910390f35b6105cb60048036038101906105c69190612c02565b611c6a565b005b6105e760048036038101906105e29190612b9d565b611ccc565b6040516105f49190613628565b60405180910390f35b61061760048036038101906106129190612d41565b611d40565b6040516106249190613687565b60405180910390f35b61064760048036038101906106429190612d41565b611dd2565b604051610654919061350d565b60405180910390f35b61067760048036038101906106729190612db9565b611ebf565b005b610693600480360381019061068e9190612cc9565b61207b565b005b6106af60048036038101906106aa9190612df5565b6121f5565b005b6106cb60048036038101906106c69190612b9d565b61234b565b6040516106d89190613643565b60405180910390f35b6106fb60048036038101906106f69190612d41565b612602565b6040516107089190613687565b60405180910390f35b61072b60048036038101906107269190612d41565b612697565b6040516107389190613687565b60405180910390f35b61075b60048036038101906107569190612c7a565b612785565b005b61077760048036038101906107729190612e44565b61284e565b6040516107849190613628565b60405180910390f35b60008061753d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b600060020181600001516064811061082c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020181602001516064811061086d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018054806108aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905560006108cb82612602565b90506000811115610a6757600080600201836000015160648110610918577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610959577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201600161096b85612602565b61097591906138b8565b815481106109ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490506000617534016000828152602001908152602001600020600101546000600201846000015160648110610a15577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110610a56577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018190555050610af6565b600080600201836000015160648110610aa9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610aea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101819055505b5050565b6000806000800154600060010154915091509091565b6060600061753b01805480602002602001604051908101604052809291908181526020018280548015610b9857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b4e575b5050505050905090565b80600061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610c0691906138b8565b9250508190555060008061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541415610c7557610c748260006118b2565b5b505050565b600080610c8684611ccc565b90506000610c9384611ccc565b9050610ca6828260006175360154610cc2565b610cb557600092505050610cbc565b6001925050505b92915050565b600080836000015185600001511015610cee5784600001518460000151610ce991906138b8565b610d03565b83600001518560000151610d0291906138b8565b5b90506000846020015186602001511015610d305785602001518560200151610d2b91906138b8565b610d45565b84602001518660200151610d4491906138b8565b5b9050838211158015610d575750838111155b925050509392505050565b60606000606467ffffffffffffffff811115610da7577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610de057816020015b610dcd6129a7565b815260200190600190039081610dc55790505b509050600080846000015190505b600a8560000151610dff9190613862565b811015611049576000856020015190505b600a8660200151610e219190613862565b81101561103557604051806080016040528060006002018460648110610e70577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610ead577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160006002018460648110610f2d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610f6a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480602002602001604051908101604052809291908181526020018280548015610fbb57602002820191906000526020600020905b815481526020019060010190808311610fa7575b5050505050815260200183815260200182815250848481518110611008577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001836110209190613862565b9250808061102d906139ce565b915050610e10565b508080611041906139ce565b915050610dee565b508192505050919050565b6000806175420160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8060006175400160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60608160000151826020015160405160200161110592919061343d565b6040516020818303038152906040529050919050565b60008060020182600001516064811061115d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020182602001516064811061119e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6111d56129e5565b6000600201826000015160648110611216577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611257577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180548060200260200160405190810160405280929190818152602001828054801561131557602002820191906000526020600020905b815481526020019060010190808311611301575b5050505050815250509050919050565b6113308260016118b2565b80600061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546113949190613862565b92505081905550505050565b6113a8612a1c565b6000617534016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561148957602002820191906000526020600020905b815481526020019060010190808311611475575b50505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156114e157602002820191906000526020600020905b8154815260200190600101908083116114cd575b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561153957602002820191906000526020600020905b815481526020019060010190808311611525575b5050505050815250509050919050565b6000806000015490806001015490806175320160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175320160149054906101000a900460ff169080617535015490806175360154908061753701549080617538015490806175390154908061753a015490806175400160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508b565b816000600201826000015160648110611629577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020182602001516064811061166a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000806116bf84611ccc565b90506000806000015484600001511080156116e257506000600101548460200151105b80156116f357506000846000015110155b801561170457506000846020015110155b90508061171657600092505050611751565b61172284836001610cc2565b61173157600092505050611751565b61173a84611dd2565b1561174a57600092505050611751565b6001925050505b92915050565b6000806175350154905090565b61176c612a6e565b600061753c0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b60008061753301600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b60008060005b600061753f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156119ae5784600061753f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611982577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154141561199b57809250600191505b80806119a6906139ce565b9150506118b8565b5082611a49578015611a4457600061753f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611a35577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b611ac1565b8215611ac05780611abf57600061753f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b600080600201836000015160648110611b09577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611b4a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490508210611b96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8d906135aa565b60405180910390fd5b6000600201836000015160648110611bd7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611c18577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018281548110611c57577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b80600061753c0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160008201518160000155602082015181600101559050505050565b611cd4612ac9565b600061753c0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601604051806040016040529081600082015481526020016001820154815250509050919050565b600080600201826000015160648110611d82577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611dc3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16611df48361111b565b73ffffffffffffffffffffffffffffffffffffffff1614611e185760019050611eba565b600080600201836000015160648110611e5a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611e9b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490501115611eb55760019050611eba565b600090505b919050565b600080600201836000015160648110611f01577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611f42577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020190506001818054905010611fa5578181600081548110611f92577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550611fce565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b600061753401600083815260200190815260200160002060010154600060020184600001516064811061202a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020184602001516064811061206b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010181905550505050565b600061208633611ccc565b9050600061209385611ccc565b90508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415612104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120fb906135ca565b60405180910390fd5b61211082826005610cc2565b61214f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121469061354a565b60405180910390fd5b8261215a338661078d565b101561219b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121929061356a565b60405180910390fd5b6121a6338585610ba2565b6121b1858585611325565b7f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44338686866040516121e69493929190613484565b60405180910390a15050505050565b60011515811515146122a557816000600201846000015160648110612243577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110612284577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101600082825461229a91906138b8565b925050819055612345565b8160006002018460000151606481106122e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110612328577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101600082825461233e9190613862565b9250508190555b50505050565b612353612ae3565b60008061753f0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff8111156123df577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561240d5781602001602082028036833780820191505090505b50905060005b828110156125525760008061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612497577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600061753d0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002054838381518110612532577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505050808061254a906139ce565b915050612413565b506040518060400160405280600061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156125eb57602002820191906000526020600020905b8154815260200190600101908083116125d7575b505050505081526020018281525092505050919050565b600080600201826000015160648110612644577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110612685577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490509050919050565b6000806126a383612602565b905060006002018360000151606481106126e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110612727577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020160018261273b91906138b8565b81548110612772577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154915050919050565b806127eb5781600061753c0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546127e091906138b8565b925050819055612848565b81600061753c0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546128419190613862565b9250508190555b50505050565b612856612ac9565b600080612868846000600101546128ed565b9150915060008061287e8660006001015461294a565b9150915083158061288d575081155b156128cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128c49061358a565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b60008060008314156129055760008091509150612943565b600183858161293d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b600080600083141561296257600080915091506129a0565b600183858161299a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b6040518060e0016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001612ac3612ac9565b81525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b600081359050612b0c81613b5d565b92915050565b600081359050612b2181613b74565b92915050565b600081359050612b3681613b8b565b92915050565b600060408284031215612b4e57600080fd5b612b586040613776565b90506000612b6884828501612b88565b6000830152506020612b7c84828501612b88565b60208301525092915050565b600081359050612b9781613ba2565b92915050565b600060208284031215612baf57600080fd5b6000612bbd84828501612afd565b91505092915050565b60008060408385031215612bd957600080fd5b6000612be785828601612afd565b9250506020612bf885828601612afd565b9150509250929050565b60008060608385031215612c1557600080fd5b6000612c2385828601612afd565b9250506020612c3485828601612b3c565b9150509250929050565b60008060408385031215612c5157600080fd5b6000612c5f85828601612afd565b9250506020612c7085828601612b88565b9150509250929050565b600080600060608486031215612c8f57600080fd5b6000612c9d86828701612afd565b9350506020612cae86828701612b88565b9250506040612cbf86828701612b12565b9150509250925092565b600080600060608486031215612cde57600080fd5b6000612cec86828701612afd565b9350506020612cfd86828701612b88565b9250506040612d0e86828701612b88565b9150509250925092565b600060208284031215612d2a57600080fd5b6000612d3884828501612b27565b91505092915050565b600060408284031215612d5357600080fd5b6000612d6184828501612b3c565b91505092915050565b600080600060a08486031215612d7f57600080fd5b6000612d8d86828701612b3c565b9350506040612d9e86828701612b3c565b9250506080612daf86828701612b88565b9150509250925092565b60008060608385031215612dcc57600080fd5b6000612dda85828601612b3c565b9250506040612deb85828601612b88565b9150509250929050565b600080600060808486031215612e0a57600080fd5b6000612e1886828701612b3c565b9350506040612e2986828701612b88565b9250506060612e3a86828701612b12565b9150509250925092565b600060208284031215612e5657600080fd5b6000612e6484828501612b88565b91505092915050565b60008060408385031215612e8057600080fd5b6000612e8e85828601612b88565b9250506020612e9f85828601612b12565b9150509250929050565b6000612eb58383612eed565b60208301905092915050565b6000612ecd8383613355565b905092915050565b6000612ee18383613408565b60208301905092915050565b612ef6816138ec565b82525050565b612f05816138ec565b82525050565b6000612f16826137cb565b612f20818561381e565b9350612f2b8361379b565b8060005b83811015612f5c578151612f438882612ea9565b9750612f4e836137f7565b925050600181019050612f2f565b5085935050505092915050565b6000612f74826137d6565b612f7e818561382f565b935083602082028501612f90856137ab565b8060005b85811015612fcc5784840389528151612fad8582612ec1565b9450612fb883613804565b925060208a01995050600181019050612f94565b50829750879550505050505092915050565b6000612fe9826137e1565b612ff38185613840565b9350612ffe836137bb565b8060005b8381101561302f5781516130168882612ed5565b975061302183613811565b925050600181019050613002565b5085935050505092915050565b613045816138fe565b82525050565b613054816138fe565b82525050565b61306381613946565b82525050565b6000613074826137ec565b61307e8185613851565b935061308e81856020860161396a565b61309781613a7f565b840191505092915050565b60006130af601483613851565b91506130ba82613a90565b602082019050919050565b60006130d2601a83613851565b91506130dd82613ab9565b602082019050919050565b60006130f5601983613851565b915061310082613ae2565b602082019050919050565b6000613118601683613851565b915061312382613b0b565b602082019050919050565b600061313b602083613851565b915061314682613b34565b602082019050919050565b60006101208301600083015161316a600086018261303c565b50602083015161317d602086018261303c565b506040830151613190604086018261303c565b5060608301516131a36060860182613408565b5060808301516131b66080860182613408565b5060a08301516131c960a0860182613408565b5060c083015184820360c08601526131e18282612fde565b91505060e083015184820360e08601526131fb8282612fde565b9150506101008301518482036101008601526132178282612fde565b9150508091505092915050565b6101008201600082015161323b600085018261303c565b50602082015161324e6020850182613408565b5060408201516132616040850182612eed565b5060608201516132746060850182613408565b5060808201516132876080850182613408565b5060a082015161329a60a0850182613408565b5060c08201516132ad60c08501826132b3565b50505050565b6040820160008201516132c96000850182613408565b5060208201516132dc6020850182613408565b50505050565b6040820160008201516132f86000850182613408565b50602082015161330b6020850182613408565b50505050565b6000604083016000830151848203600086015261332e8282612fde565b915050602083015184820360208601526133488282612fde565b9150508091505092915050565b600060808301600083015161336d6000860182612eed565b50602083015184820360208601526133858282612fde565b915050604083015161339a6040860182613408565b5060608301516133ad6060860182613408565b508091505092915050565b60006060830160008301516133d06000860182612eed565b5060208301516133e36020860182613408565b50604083015184820360408601526133fb8282612fde565b9150508091505092915050565b6134118161393c565b82525050565b6134208161393c565b82525050565b6134376134328261393c565b613a17565b82525050565b60006134498285613426565b6020820191506134598284613426565b6020820191508190509392505050565b600060208201905061347e6000830184612efc565b92915050565b60006080820190506134996000830187612efc565b6134a66020830186612efc565b6134b36040830185613417565b6134c06060830184613417565b95945050505050565b600060208201905081810360008301526134e38184612f0b565b905092915050565b600060208201905081810360008301526135058184612f69565b905092915050565b6000602082019050613522600083018461304b565b92915050565b600060208201905081810360008301526135428184613069565b905092915050565b60006020820190508181036000830152613563816130a2565b9050919050565b60006020820190508181036000830152613583816130c5565b9050919050565b600060208201905081810360008301526135a3816130e8565b9050919050565b600060208201905081810360008301526135c38161310b565b9050919050565b600060208201905081810360008301526135e38161312e565b9050919050565b600060208201905081810360008301526136048184613151565b905092915050565b6000610100820190506136226000830184613224565b92915050565b600060408201905061363d60008301846132e2565b92915050565b6000602082019050818103600083015261365d8184613311565b905092915050565b6000602082019050818103600083015261367f81846133b8565b905092915050565b600060208201905061369c6000830184613417565b92915050565b60006040820190506136b76000830185613417565b6136c46020830184613417565b9392505050565b6000610160820190506136e1600083018e613417565b6136ee602083018d613417565b6136fb604083018c612efc565b613708606083018b61304b565b613715608083018a613417565b61372260a0830189613417565b61372f60c0830188613417565b61373c60e0830187613417565b61374a610100830186613417565b613758610120830185613417565b61376661014083018461305a565b9c9b505050505050505050505050565b6000613780613791565b905061378c828261399d565b919050565b6000604051905090565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061386d8261393c565b91506138788361393c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156138ad576138ac613a21565b5b828201905092915050565b60006138c38261393c565b91506138ce8361393c565b9250828210156138e1576138e0613a21565b5b828203905092915050565b60006138f78261391c565b9050919050565b60008115159050919050565b6000613915826138ec565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061395182613958565b9050919050565b60006139638261391c565b9050919050565b60005b8381101561398857808201518184015260208101905061396d565b83811115613997576000848401525b50505050565b6139a682613a7f565b810181811067ffffffffffffffff821117156139c5576139c4613a50565b5b80604052505050565b60006139d98261393c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613a0c57613a0b613a21565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f73746f726167652f726563697069656e742d73616d652d61732d73656e646572600082015250565b613b66816138ec565b8114613b7157600080fd5b50565b613b7d816138fe565b8114613b8857600080fd5b50565b613b948161390a565b8114613b9f57600080fd5b50565b613bab8161393c565b8114613bb657600080fd5b5056fea26469706673582212206db90670afb84a61ea9a4db40bdb5239d3bead217db85ea08099ac0b31cdd9b764736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
