/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeTopLevelStrengthAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "_encodePos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopLevelStrengthAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "contract Epoch",
        name: "epochController",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "moveRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Epoch",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setEpochController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613981806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80638bce7fab1161011a578063c537e3e5116100ad578063f095277c1161007c578063f095277c1461063c578063f09c4b261461066c578063f0bfd52b1461069c578063f17dd707146106cc578063fad86c3c146106e8576101fb565b8063c537e3e5146105b8578063d8178847146105e8578063dc8afb6314610604578063dd597d2714610620576101fb565b8063b0b49ba5116100e9578063b0b49ba51461050c578063b62b71301461053c578063be56594014610558578063bfc525a214610588576101fb565b80638bce7fab14610472578063908b9f17146104905780639889c321146104c0578063aae1eeac146104f0576101fb565b80635a9c064411610192578063801b83db11610161578063801b83db146103cd57806386b714e2146103fd57806386e68be31461042657806387fc554914610442576101fb565b80635a9c0644146103355780635de24e181461035157806367ae06341461038157806379564688146103b1576101fb565b8063487d2080116101ce578063487d20801461028957806348c5a716146102a55780634a4e51b3146102d557806350607fee14610305576101fb565b80631ccd4c1514610200578063201549ac146102305780632c190c621461024c5780633f261e071461026b575b600080fd5b61021a60048036038101906102159190612a20565b610718565b604051610227919061340a565b60405180910390f35b61024a60048036038101906102459190612b23565b610776565b005b610254610a85565b604051610262929190613425565b60405180910390f35b610273610a9b565b604051610280919061326e565b60405180910390f35b6102a3600480360381019061029e9190612aab565b610b2d565b005b6102bf60048036038101906102ba91906129a8565b610c05565b6040516102cc91906132b2565b60405180910390f35b6102ef60048036038101906102ea9190612b4c565b610c4d565b6040516102fc91906132b2565b60405180910390f35b61031f600480360381019061031a9190612b23565b610ced565b60405161032c9190613290565b60405180910390f35b61034f600480360381019061034a9190612afa565b610fdf565b005b61036b60048036038101906103669190612b23565b611027565b60405161037891906132cd565b60405180910390f35b61039b60048036038101906103969190612b23565b61105a565b6040516103a8919061320e565b60405180910390f35b6103cb60048036038101906103c69190612aab565b61110c565b005b6103e760048036038101906103e29190612c26565b611187565b6040516103f4919061338f565b60405180910390f35b610405611330565b60405161041d9c9b9a9998979695949392919061344e565b60405180910390f35b610440600480360381019061043b91906129e4565b6113d5565b005b61045c600480360381019061045791906129e4565b6114a1565b60405161046991906132b2565b60405180910390f35b61047a61154a565b604051610487919061340a565b60405180910390f35b6104aa60048036038101906104a5919061297f565b611557565b6040516104b791906133b1565b60405180910390f35b6104da60048036038101906104d59190612c26565b611691565b6040516104e791906132b2565b60405180910390f35b61050a60048036038101906105059190612c4f565b6116c1565b005b61052660048036038101906105219190612b9b565b6118d6565b604051610533919061340a565b60405180910390f35b610556600480360381019061055191906129e4565b611a79565b005b610572600480360381019061056d919061297f565b611adb565b60405161057f91906133cd565b60405180910390f35b6105a2600480360381019061059d9190612b23565b611b4f565b6040516105af919061340a565b60405180910390f35b6105d260048036038101906105cd9190612b23565b611be1565b6040516105df91906132b2565b60405180910390f35b61060260048036038101906105fd9190612b9b565b611cce565b005b61061e60048036038101906106199190612aab565b611e8a565b005b61063a60048036038101906106359190612bd7565b612004565b005b6106566004803603810190610651919061297f565b61215a565b60405161066391906133e8565b60405180910390f35b61068660048036038101906106819190612b23565b612411565b604051610693919061340a565b60405180910390f35b6106b660048036038101906106b19190612b23565b6124a6565b6040516106c3919061340a565b60405180910390f35b6106e660048036038101906106e19190612a5c565b612594565b005b61070260048036038101906106fd9190612c26565b61265d565b60405161070f91906133cd565b60405180910390f35b60008061753f0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60006002018160000151606481106107b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018160200151606481106107f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480610835577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60019003818190600052602060002001600090559055600061085682612411565b905060008111156109f2576000806002018360000151606481106108a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360200151606481106108e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020160016108f685612411565b610900919061364a565b81548110610937577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905060006175350160008281526020019081526020016000206001015460006002018460000151606481106109a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460200151606481106109e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018190555050610a81565b600080600201836000015160648110610a34577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610a75577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101819055505b5050565b6000806000800154600060010154915091509091565b6060600061753d01805480602002602001604051908101604052809291908181526020018280548015610b2357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ad9575b5050505050905090565b80600061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610b91919061364a565b9250508190555060008061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541415610c0057610bff8260006116c1565b5b505050565b600080610c1184611adb565b90506000610c1e84611adb565b9050610c31828260006175380154610c4d565b610c4057600092505050610c47565b6001925050505b92915050565b600080836000015185600001511015610c795784600001518460000151610c74919061364a565b610c8e565b83600001518560000151610c8d919061364a565b5b90506000846020015186602001511015610cbb5785602001518560200151610cb6919061364a565b610cd0565b84602001518660200151610ccf919061364a565b5b9050838211158015610ce25750838111155b925050509392505050565b60606000606467ffffffffffffffff811115610d32577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610d6b57816020015b610d586127b6565b815260200190600190039081610d505790505b509050600080846000015190505b600a8560000151610d8a91906135f4565b811015610fd4576000856020015190505b600a8660200151610dac91906135f4565b811015610fc057604051806080016040528060006002018460648110610dfb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610e38577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160006002018460648110610eb8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610ef5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480602002602001604051908101604052809291908181526020018280548015610f4657602002820191906000526020600020905b815481526020019060010190808311610f32575b5050505050815260200183815260200182815250848481518110610f93577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600183610fab91906135f4565b92508080610fb890613760565b915050610d9b565b508080610fcc90613760565b915050610d79565b508192505050919050565b8060006175330160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060816000015182602001516040516020016110449291906131e2565b6040516020818303038152906040529050919050565b60008060020182600001516064811061109c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260200151606481106110dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6111178260016116c1565b80600061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600082825461117b91906135f4565b92505081905550505050565b61118f6127f4565b6000617535016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561127057602002820191906000526020600020905b81548152602001906001019080831161125c575b50505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156112c857602002820191906000526020600020905b8154815260200190600101908083116112b4575b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561132057602002820191906000526020600020905b81548152602001906001019080831161130c575b5050505050815250509050919050565b6000806000015490806001015490806175320160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175320160149054906101000a900460ff1690806175330160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175360154908061753701549080617538015490806175390154908061753a0154908061753b0154908061753c015490508c565b816000600201826000015160648110611417577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611458577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000806114ad84611adb565b90506000806000015484600001511080156114d057506000600101548460200151105b80156114e157506000846000015110155b80156114f257506000846020015110155b90508061150457600092505050611544565b611515848360006175370154610c4d565b61152457600092505050611544565b61152d84611be1565b1561153d57600092505050611544565b6001925050505b92915050565b6000806175360154905090565b61155f612846565b600061753e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b60008061753401600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b60008060005b60006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156117bd578460006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611791577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015414156117aa57809250600191505b80806117b590613760565b9150506116c7565b50826118585780156118535760006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611844577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b6118d0565b82156118cf57806118ce5760006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b600080600201836000015160648110611918577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611959577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018054905082106119a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161199c9061334f565b60405180910390fd5b60006002018360000151606481106119e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611a27577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018281548110611a66577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b80600061753e0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160008201518160000155602082015181600101559050505050565b611ae36128ab565b600061753e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601604051806040016040529081600082015481526020016001820154815250509050919050565b600080600201826000015160648110611b91577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611bd2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16611c038361105a565b73ffffffffffffffffffffffffffffffffffffffff1614611c275760019050611cc9565b600080600201836000015160648110611c69577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611caa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490501115611cc45760019050611cc9565b600090505b919050565b600080600201836000015160648110611d10577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611d51577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020190506001818054905010611db4578181600081548110611da1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550611ddd565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b6000617535016000838152602001908152602001600020600101546000600201846000015160648110611e39577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110611e7a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010181905550505050565b6000611e9533611adb565b90506000611ea285611adb565b90508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611f13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f0a9061336f565b60405180910390fd5b611f1f82826005610c4d565b611f5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f55906132ef565b60405180910390fd5b82611f693386610718565b1015611faa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa19061330f565b60405180910390fd5b611fb5338585610b2d565b611fc085858561110c565b7f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc4433868686604051611ff59493929190613229565b60405180910390a15050505050565b60011515811515146120b457816000600201846000015160648110612052577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110612093577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010160008282546120a9919061364a565b925050819055612154565b8160006002018460000151606481106120f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110612137577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101600082825461214d91906135f4565b9250508190555b50505050565b6121626128c5565b6000806175410160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff8111156121ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561221c5781602001602082028036833780820191505090505b50905060005b82811015612361576000806175410160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106122a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002054838381518110612341577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505050808061235990613760565b915050612222565b50604051806040016040528060006175410160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156123fa57602002820191906000526020600020905b8154815260200190600101908083116123e6575b505050505081526020018281525092505050919050565b600080600201826000015160648110612453577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110612494577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490509050919050565b6000806124b283612411565b905060006002018360000151606481106124f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110612536577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020160018261254a919061364a565b81548110612581577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154915050919050565b806125fa5781600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546125ef919061364a565b925050819055612657565b81600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461265091906135f4565b9250508190555b50505050565b6126656128ab565b600080612677846000600101546126fc565b9150915060008061268d86600060010154612759565b9150915083158061269c575081155b156126dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126d39061332f565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b60008060008314156127145760008091509150612752565b600183858161274c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b600080600083141561277157600080915091506127af565b60018385816127a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b60405180610100016040528060001515815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016128a56128ab565b81525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b6000813590506128ee816138ef565b92915050565b60008135905061290381613906565b92915050565b6000813590506129188161391d565b92915050565b60006040828403121561293057600080fd5b61293a6040613508565b9050600061294a8482850161296a565b600083015250602061295e8482850161296a565b60208301525092915050565b60008135905061297981613934565b92915050565b60006020828403121561299157600080fd5b600061299f848285016128df565b91505092915050565b600080604083850312156129bb57600080fd5b60006129c9858286016128df565b92505060206129da858286016128df565b9150509250929050565b600080606083850312156129f757600080fd5b6000612a05858286016128df565b9250506020612a168582860161291e565b9150509250929050565b60008060408385031215612a3357600080fd5b6000612a41858286016128df565b9250506020612a528582860161296a565b9150509250929050565b600080600060608486031215612a7157600080fd5b6000612a7f868287016128df565b9350506020612a908682870161296a565b9250506040612aa1868287016128f4565b9150509250925092565b600080600060608486031215612ac057600080fd5b6000612ace868287016128df565b9350506020612adf8682870161296a565b9250506040612af08682870161296a565b9150509250925092565b600060208284031215612b0c57600080fd5b6000612b1a84828501612909565b91505092915050565b600060408284031215612b3557600080fd5b6000612b438482850161291e565b91505092915050565b600080600060a08486031215612b6157600080fd5b6000612b6f8682870161291e565b9350506040612b808682870161291e565b9250506080612b918682870161296a565b9150509250925092565b60008060608385031215612bae57600080fd5b6000612bbc8582860161291e565b9250506040612bcd8582860161296a565b9150509250929050565b600080600060808486031215612bec57600080fd5b6000612bfa8682870161291e565b9350506040612c0b8682870161296a565b9250506060612c1c868287016128f4565b9150509250925092565b600060208284031215612c3857600080fd5b6000612c468482850161296a565b91505092915050565b60008060408385031215612c6257600080fd5b6000612c708582860161296a565b9250506020612c81858286016128f4565b9150509250929050565b6000612c978383612ccf565b60208301905092915050565b6000612caf838361314a565b905092915050565b6000612cc383836131ad565b60208301905092915050565b612cd88161367e565b82525050565b612ce78161367e565b82525050565b6000612cf88261355d565b612d0281856135b0565b9350612d0d8361352d565b8060005b83811015612d3e578151612d258882612c8b565b9750612d3083613589565b925050600181019050612d11565b5085935050505092915050565b6000612d5682613568565b612d6081856135c1565b935083602082028501612d728561353d565b8060005b85811015612dae5784840389528151612d8f8582612ca3565b9450612d9a83613596565b925060208a01995050600181019050612d76565b50829750879550505050505092915050565b6000612dcb82613573565b612dd581856135d2565b9350612de08361354d565b8060005b83811015612e11578151612df88882612cb7565b9750612e03836135a3565b925050600181019050612de4565b5085935050505092915050565b612e2781613690565b82525050565b612e3681613690565b82525050565b612e45816136d8565b82525050565b6000612e568261357e565b612e6081856135e3565b9350612e708185602086016136fc565b612e7981613811565b840191505092915050565b6000612e916014836135e3565b9150612e9c82613822565b602082019050919050565b6000612eb4601a836135e3565b9150612ebf8261384b565b602082019050919050565b6000612ed76019836135e3565b9150612ee282613874565b602082019050919050565b6000612efa6016836135e3565b9150612f058261389d565b602082019050919050565b6000612f1d6020836135e3565b9150612f28826138c6565b602082019050919050565b600061012083016000830151612f4c6000860182612e1e565b506020830151612f5f6020860182612e1e565b506040830151612f726040860182612e1e565b506060830151612f8560608601826131ad565b506080830151612f9860808601826131ad565b5060a0830151612fab60a08601826131ad565b5060c083015184820360c0860152612fc38282612dc0565b91505060e083015184820360e0860152612fdd8282612dc0565b915050610100830151848203610100860152612ff98282612dc0565b9150508091505092915050565b6101208201600082015161301d6000850182612e1e565b5060208201516130306020850182612e1e565b50604082015161304360408501826131ad565b5060608201516130566060850182612ccf565b50608082015161306960808501826131ad565b5060a082015161307c60a08501826131ad565b5060c082015161308f60c08501826131ad565b5060e08201516130a260e08501826130a8565b50505050565b6040820160008201516130be60008501826131ad565b5060208201516130d160208501826131ad565b50505050565b6040820160008201516130ed60008501826131ad565b50602082015161310060208501826131ad565b50505050565b600060408301600083015184820360008601526131238282612dc0565b9150506020830151848203602086015261313d8282612dc0565b9150508091505092915050565b60006080830160008301516131626000860182612ccf565b506020830151848203602086015261317a8282612dc0565b915050604083015161318f60408601826131ad565b5060608301516131a260608601826131ad565b508091505092915050565b6131b6816136ce565b82525050565b6131c5816136ce565b82525050565b6131dc6131d7826136ce565b6137a9565b82525050565b60006131ee82856131cb565b6020820191506131fe82846131cb565b6020820191508190509392505050565b60006020820190506132236000830184612cde565b92915050565b600060808201905061323e6000830187612cde565b61324b6020830186612cde565b61325860408301856131bc565b61326560608301846131bc565b95945050505050565b600060208201905081810360008301526132888184612ced565b905092915050565b600060208201905081810360008301526132aa8184612d4b565b905092915050565b60006020820190506132c76000830184612e2d565b92915050565b600060208201905081810360008301526132e78184612e4b565b905092915050565b6000602082019050818103600083015261330881612e84565b9050919050565b6000602082019050818103600083015261332881612ea7565b9050919050565b6000602082019050818103600083015261334881612eca565b9050919050565b6000602082019050818103600083015261336881612eed565b9050919050565b6000602082019050818103600083015261338881612f10565b9050919050565b600060208201905081810360008301526133a98184612f33565b905092915050565b6000610120820190506133c76000830184613006565b92915050565b60006040820190506133e260008301846130d7565b92915050565b600060208201905081810360008301526134028184613106565b905092915050565b600060208201905061341f60008301846131bc565b92915050565b600060408201905061343a60008301856131bc565b61344760208301846131bc565b9392505050565b600061018082019050613464600083018f6131bc565b613471602083018e6131bc565b61347e604083018d612cde565b61348b606083018c612e2d565b613498608083018b612e3c565b6134a560a083018a6131bc565b6134b260c08301896131bc565b6134bf60e08301886131bc565b6134cd6101008301876131bc565b6134db6101208301866131bc565b6134e96101408301856131bc565b6134f76101608301846131bc565b9d9c50505050505050505050505050565b6000613512613523565b905061351e828261372f565b919050565b6000604051905090565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006135ff826136ce565b915061360a836136ce565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561363f5761363e6137b3565b5b828201905092915050565b6000613655826136ce565b9150613660836136ce565b925082821015613673576136726137b3565b5b828203905092915050565b6000613689826136ae565b9050919050565b60008115159050919050565b60006136a78261367e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006136e3826136ea565b9050919050565b60006136f5826136ae565b9050919050565b60005b8381101561371a5780820151818401526020810190506136ff565b83811115613729576000848401525b50505050565b61373882613811565b810181811067ffffffffffffffff82111715613757576137566137e2565b5b80604052505050565b600061376b826136ce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561379e5761379d6137b3565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f73746f726167652f726563697069656e742d73616d652d61732d73656e646572600082015250565b6138f88161367e565b811461390357600080fd5b50565b61390f81613690565b811461391a57600080fd5b50565b6139268161369c565b811461393157600080fd5b50565b61393d816136ce565b811461394857600080fd5b5056fea2646970667358221220cac55f1c86296060ea76d152cdea5035b0540486c7ec9858f5ba66ffda3bff2164736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
