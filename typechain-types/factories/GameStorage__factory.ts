/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeTopLevelStrengthAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "_encodePos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getTopLevelStrengthAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "contract Epoch",
        name: "epochController",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "moveRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Epoch",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setEpochController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506139bf806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c8063908b9f171161011a578063be565940116100ad578063dc8afb631161007c578063dc8afb6314610650578063e4c451e91461066c578063f095277c1461069c578063f17dd707146106cc578063fad86c3c146106e8576101fb565b8063be565940146105b8578063be947ce0146105e8578063d0e600dc14610618578063d817884714610634576101fb565b8063a93edcf9116100e9578063a93edcf914610534578063aae1eeac14610550578063ac70cc791461056c578063ad7c6cdc14610588576101fb565b8063908b9f17146104745780639889c321146104a45780639bb1e204146104d4578063a54b6e9914610504576101fb565b80635a9c064411610192578063795646881161016157806379564688146103e1578063801b83db146103fd57806386b714e21461042d5780638bce7fab14610456576101fb565b80635a9c0644146103495780635d2f8585146103655780635d7d8041146103955780635de24e18146103b1576101fb565b8063487d2080116101ce578063487d20801461029d57806348c5a716146102b95780634a4e51b3146102e95780635923b9a414610319576101fb565b80631ccd4c15146102005780632c190c62146102305780633f261e071461024f5780633f4105fc1461026d575b600080fd5b61021a600480360381019061021591906129bf565b610718565b6040516102279190613448565b60405180910390f35b610238610776565b604051610246929190613463565b60405180910390f35b61025761078c565b60405161026491906132ac565b60405180910390f35b61028760048036038101906102829190612bdb565b61081e565b6040516102949190613448565b60405180910390f35b6102b760048036038101906102b29190612a4a565b6108ac565b005b6102d360048036038101906102ce9190612983565b610984565b6040516102e091906132f0565b60405180910390f35b61030360048036038101906102fe9190612aeb565b6109cc565b60405161031091906132f0565b60405180910390f35b610333600480360381019061032e9190612bdb565b610a6c565b6040516103409190613448565b60405180910390f35b610363600480360381019061035e9190612a99565b610b54565b005b61037f600480360381019061037a9190612bdb565b610b9c565b60405161038c91906132ce565b60405180910390f35b6103af60048036038101906103aa9190612bdb565b610e7f565b005b6103cb60048036038101906103c69190612ac2565b611171565b6040516103d8919061330b565b60405180910390f35b6103fb60048036038101906103f69190612a4a565b6111a4565b005b61041760048036038101906104129190612b76565b61121f565b60405161042491906133cd565b60405180910390f35b6104356113c8565b60405161044d9c9b9a9998979695949392919061348c565b60405180910390f35b61045e61146d565b60405161046b9190613448565b60405180910390f35b61048e6004803603810190610489919061295a565b61147a565b60405161049b91906133ef565b60405180910390f35b6104be60048036038101906104b99190612b76565b6115b4565b6040516104cb91906132f0565b60405180910390f35b6104ee60048036038101906104e99190612bdb565b6115e4565b6040516104fb9190613448565b60405180910390f35b61051e60048036038101906105199190612a4a565b61166f565b60405161052b91906132f0565b60405180910390f35b61054e60048036038101906105499190612a4a565b611726565b005b61056a60048036038101906105659190612b9f565b6117c7565b005b61058660048036038101906105819190612a4a565b6119dc565b005b6105a2600480360381019061059d9190612bdb565b611aa1565b6040516105af919061324c565b60405180910390f35b6105d260048036038101906105cd919061295a565b611b4c565b6040516105df919061340b565b60405180910390f35b61060260048036038101906105fd9190612c17565b611bc0565b60405161060f9190613448565b60405180910390f35b610632600480360381019061062d9190612c66565b611d54565b005b61064e60048036038101906106499190612b3a565b611e9b565b005b61066a60048036038101906106659190612a4a565b612057565b005b61068660048036038101906106819190612bdb565b6121d1565b60405161069391906132f0565b60405180910390f35b6106b660048036038101906106b1919061295a565b6122b8565b6040516106c39190613426565b60405180910390f35b6106e660048036038101906106e191906129fb565b61256f565b005b61070260048036038101906106fd9190612b76565b612638565b60405161070f919061340b565b60405180910390f35b60008061753f0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6000806000800154600060010154915091509091565b6060600061753d0180548060200260200160405190810160405280929190818152602001828054801561081457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107ca575b5050505050905090565b600080600201836064811061085c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260648110610899577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020180549050905092915050565b80600061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546109109190613688565b9250508190555060008061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054141561097f5761097e8260006117c7565b5b505050565b60008061099084611b4c565b9050600061099d84611b4c565b90506109b08282600061753801546109cc565b6109bf576000925050506109c6565b6001925050505b92915050565b6000808360000151856000015110156109f857846000015184600001516109f39190613688565b610a0d565b83600001518560000151610a0c9190613688565b5b90506000846020015186602001511015610a3a5785602001518560200151610a359190613688565b610a4f565b84602001518660200151610a4e9190613688565b5b9050838211158015610a615750838111155b925050509392505050565b600080610a79848461081e565b905060006002018460648110610ab8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610af5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201600182610b099190613688565b81548110610b40577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015491505092915050565b8060006175330160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000606467ffffffffffffffff811115610be1577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610c1a57816020015b610c07612791565b815260200190600190039081610bff5790505b5090506000808590505b600a86610c319190613632565b811015610e735760008590505b600a86610c4b9190613632565b811015610e5f57604051806080016040528060006002018460648110610c9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610cd7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160006002018460648110610d57577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610d94577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480602002602001604051908101604052809291908181526020018280548015610de557602002820191906000526020600020905b815481526020019060010190808311610dd1575b5050505050815260200183815260200182815250848481518110610e32577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600183610e4a9190613632565b92508080610e579061379e565b915050610c3e565b508080610e6b9061379e565b915050610c24565b50819250505092915050565b60006002018260648110610ebc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018160648110610ef9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480610f36577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590556000610f58838361081e565b905060008111156110e5576000806002018460648110610fa1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610fde577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002016001610ff1868661081e565b610ffb9190613688565b81548110611032577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905060006175350160008281526020019081526020016000206001015460006002018560648110611097577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020184606481106110d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101819055505061116c565b6000806002018460648110611123577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611160577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101819055505b505050565b60608160000151826020015160405160200161118e929190613220565b6040516020818303038152906040529050919050565b6111af8260016117c7565b80600061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546112139190613632565b92505081905550505050565b6112276127cf565b6000617535016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561130857602002820191906000526020600020905b8154815260200190600101908083116112f4575b505050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561136057602002820191906000526020600020905b81548152602001906001019080831161134c575b50505050508152602001600682018054806020026020016040519081016040528092919081815260200182805480156113b857602002820191906000526020600020905b8154815260200190600101908083116113a4575b5050505050815250509050919050565b6000806000015490806001015490806175320160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175320160149054906101000a900460ff1690806175330160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175360154908061753701549080617538015490806175390154908061753a0154908061753b0154908061753c015490508c565b6000806175360154905090565b611482612821565b600061753e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b60008061753401600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b6000806002018360648110611622577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826064811061165f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010154905092915050565b60008061167b85611b4c565b90506000806000015485108015611696575060006001015484105b80156116a3575060008510155b80156116b0575060008410155b9050806116c25760009250505061171f565b600060405180604001604052808781526020018681525090506116ec8184600061753701546109cc565b6116fc576000935050505061171f565b61170686866121d1565b15611717576000935050505061171f565b600193505050505b9392505050565b81600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006016000018190555080600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160010181905550505050565b60008060005b60006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156118c3578460006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611897577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015414156118b057809250600191505b80806118bb9061379e565b9150506117cd565b508261195e5780156119595760006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061194a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b6119d6565b82156119d557806119d45760006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b8260006002018360648110611a1a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260648110611a57577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000806002018360648110611adf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260648110611b1c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b611b54612886565b600061753e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601604051806040016040529081600082015481526020016001820154815250509050919050565b6000806002018460648110611bfe577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611c3b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490508210611c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7e9061338d565b60405180910390fd5b60006002018460648110611cc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611d01577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018281548110611d40577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490509392505050565b6001151581151514611dfc578160006002018560648110611d9e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460648110611ddb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001016000828254611df19190613688565b925050819055611e94565b8160006002018560648110611e3a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460648110611e77577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001016000828254611e8d9190613632565b9250508190555b5050505050565b600080600201836000015160648110611edd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611f1e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020190506001818054905010611f81578181600081548110611f6e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550611faa565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b6000617535016000838152602001908152602001600020600101546000600201846000015160648110612006577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110612047577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010181905550505050565b600061206233611b4c565b9050600061206f85611b4c565b90508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156120e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120d7906133ad565b60405180910390fd5b6120ec828260056109cc565b61212b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121229061332d565b60405180910390fd5b826121363386610718565b1015612177576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161216e9061334d565b60405180910390fd5b6121823385856108ac565b61218d8585856111a4565b7f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44338686866040516121c29493929190613267565b60405180910390a15050505050565b60008073ffffffffffffffffffffffffffffffffffffffff166121f48484611aa1565b73ffffffffffffffffffffffffffffffffffffffff161461221857600190506122b2565b6000806002018460648110612256577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110612293577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018054905011156122ad57600190506122b2565b600090505b92915050565b6122c06128a0565b6000806175410160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff81111561234c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561237a5781602001602082028036833780820191505090505b50905060005b828110156124bf576000806175410160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612404577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008281526020019081526020016000205483838151811061249f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505080806124b79061379e565b915050612380565b50604051806040016040528060006175410160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561255857602002820191906000526020600020905b815481526020019060010190808311612544575b505050505081526020018281525092505050919050565b806125d55781600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546125ca9190613688565b925050819055612632565b81600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461262b9190613632565b9250508190555b50505050565b612640612886565b600080612652846000600101546126d7565b9150915060008061266886600060010154612734565b91509150831580612677575081155b156126b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126ae9061336d565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b60008060008314156126ef576000809150915061272d565b6001838581612727577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b600080600083141561274c576000809150915061278a565b6001838581612784577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b60405180610100016040528060001515815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001612880612886565b81525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b6000813590506128c98161392d565b92915050565b6000813590506128de81613944565b92915050565b6000813590506128f38161395b565b92915050565b60006040828403121561290b57600080fd5b6129156040613546565b9050600061292584828501612945565b600083015250602061293984828501612945565b60208301525092915050565b60008135905061295481613972565b92915050565b60006020828403121561296c57600080fd5b600061297a848285016128ba565b91505092915050565b6000806040838503121561299657600080fd5b60006129a4858286016128ba565b92505060206129b5858286016128ba565b9150509250929050565b600080604083850312156129d257600080fd5b60006129e0858286016128ba565b92505060206129f185828601612945565b9150509250929050565b600080600060608486031215612a1057600080fd5b6000612a1e868287016128ba565b9350506020612a2f86828701612945565b9250506040612a40868287016128cf565b9150509250925092565b600080600060608486031215612a5f57600080fd5b6000612a6d868287016128ba565b9350506020612a7e86828701612945565b9250506040612a8f86828701612945565b9150509250925092565b600060208284031215612aab57600080fd5b6000612ab9848285016128e4565b91505092915050565b600060408284031215612ad457600080fd5b6000612ae2848285016128f9565b91505092915050565b600080600060a08486031215612b0057600080fd5b6000612b0e868287016128f9565b9350506040612b1f868287016128f9565b9250506080612b3086828701612945565b9150509250925092565b60008060608385031215612b4d57600080fd5b6000612b5b858286016128f9565b9250506040612b6c85828601612945565b9150509250929050565b600060208284031215612b8857600080fd5b6000612b9684828501612945565b91505092915050565b60008060408385031215612bb257600080fd5b6000612bc085828601612945565b9250506020612bd1858286016128cf565b9150509250929050565b60008060408385031215612bee57600080fd5b6000612bfc85828601612945565b9250506020612c0d85828601612945565b9150509250929050565b600080600060608486031215612c2c57600080fd5b6000612c3a86828701612945565b9350506020612c4b86828701612945565b9250506040612c5c86828701612945565b9150509250925092565b60008060008060808587031215612c7c57600080fd5b6000612c8a87828801612945565b9450506020612c9b87828801612945565b9350506040612cac87828801612945565b9250506060612cbd878288016128cf565b91505092959194509250565b6000612cd58383612d0d565b60208301905092915050565b6000612ced8383613188565b905092915050565b6000612d0183836131eb565b60208301905092915050565b612d16816136bc565b82525050565b612d25816136bc565b82525050565b6000612d368261359b565b612d4081856135ee565b9350612d4b8361356b565b8060005b83811015612d7c578151612d638882612cc9565b9750612d6e836135c7565b925050600181019050612d4f565b5085935050505092915050565b6000612d94826135a6565b612d9e81856135ff565b935083602082028501612db08561357b565b8060005b85811015612dec5784840389528151612dcd8582612ce1565b9450612dd8836135d4565b925060208a01995050600181019050612db4565b50829750879550505050505092915050565b6000612e09826135b1565b612e138185613610565b9350612e1e8361358b565b8060005b83811015612e4f578151612e368882612cf5565b9750612e41836135e1565b925050600181019050612e22565b5085935050505092915050565b612e65816136ce565b82525050565b612e74816136ce565b82525050565b612e8381613716565b82525050565b6000612e94826135bc565b612e9e8185613621565b9350612eae81856020860161373a565b612eb78161384f565b840191505092915050565b6000612ecf601483613621565b9150612eda82613860565b602082019050919050565b6000612ef2601a83613621565b9150612efd82613889565b602082019050919050565b6000612f15601983613621565b9150612f20826138b2565b602082019050919050565b6000612f38601683613621565b9150612f43826138db565b602082019050919050565b6000612f5b602083613621565b9150612f6682613904565b602082019050919050565b600061012083016000830151612f8a6000860182612e5c565b506020830151612f9d6020860182612e5c565b506040830151612fb06040860182612e5c565b506060830151612fc360608601826131eb565b506080830151612fd660808601826131eb565b5060a0830151612fe960a08601826131eb565b5060c083015184820360c08601526130018282612dfe565b91505060e083015184820360e086015261301b8282612dfe565b9150506101008301518482036101008601526130378282612dfe565b9150508091505092915050565b6101208201600082015161305b6000850182612e5c565b50602082015161306e6020850182612e5c565b50604082015161308160408501826131eb565b5060608201516130946060850182612d0d565b5060808201516130a760808501826131eb565b5060a08201516130ba60a08501826131eb565b5060c08201516130cd60c08501826131eb565b5060e08201516130e060e08501826130e6565b50505050565b6040820160008201516130fc60008501826131eb565b50602082015161310f60208501826131eb565b50505050565b60408201600082015161312b60008501826131eb565b50602082015161313e60208501826131eb565b50505050565b600060408301600083015184820360008601526131618282612dfe565b9150506020830151848203602086015261317b8282612dfe565b9150508091505092915050565b60006080830160008301516131a06000860182612d0d565b50602083015184820360208601526131b88282612dfe565b91505060408301516131cd60408601826131eb565b5060608301516131e060608601826131eb565b508091505092915050565b6131f48161370c565b82525050565b6132038161370c565b82525050565b61321a6132158261370c565b6137e7565b82525050565b600061322c8285613209565b60208201915061323c8284613209565b6020820191508190509392505050565b60006020820190506132616000830184612d1c565b92915050565b600060808201905061327c6000830187612d1c565b6132896020830186612d1c565b61329660408301856131fa565b6132a360608301846131fa565b95945050505050565b600060208201905081810360008301526132c68184612d2b565b905092915050565b600060208201905081810360008301526132e88184612d89565b905092915050565b60006020820190506133056000830184612e6b565b92915050565b600060208201905081810360008301526133258184612e89565b905092915050565b6000602082019050818103600083015261334681612ec2565b9050919050565b6000602082019050818103600083015261336681612ee5565b9050919050565b6000602082019050818103600083015261338681612f08565b9050919050565b600060208201905081810360008301526133a681612f2b565b9050919050565b600060208201905081810360008301526133c681612f4e565b9050919050565b600060208201905081810360008301526133e78184612f71565b905092915050565b6000610120820190506134056000830184613044565b92915050565b60006040820190506134206000830184613115565b92915050565b600060208201905081810360008301526134408184613144565b905092915050565b600060208201905061345d60008301846131fa565b92915050565b600060408201905061347860008301856131fa565b61348560208301846131fa565b9392505050565b6000610180820190506134a2600083018f6131fa565b6134af602083018e6131fa565b6134bc604083018d612d1c565b6134c9606083018c612e6b565b6134d6608083018b612e7a565b6134e360a083018a6131fa565b6134f060c08301896131fa565b6134fd60e08301886131fa565b61350b6101008301876131fa565b6135196101208301866131fa565b6135276101408301856131fa565b6135356101608301846131fa565b9d9c50505050505050505050505050565b6000613550613561565b905061355c828261376d565b919050565b6000604051905090565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061363d8261370c565b91506136488361370c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561367d5761367c6137f1565b5b828201905092915050565b60006136938261370c565b915061369e8361370c565b9250828210156136b1576136b06137f1565b5b828203905092915050565b60006136c7826136ec565b9050919050565b60008115159050919050565b60006136e5826136bc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061372182613728565b9050919050565b6000613733826136ec565b9050919050565b60005b8381101561375857808201518184015260208101905061373d565b83811115613767576000848401525b50505050565b6137768261384f565b810181811067ffffffffffffffff8211171561379557613794613820565b5b80604052505050565b60006137a98261370c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156137dc576137db6137f1565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f73746f726167652f726563697069656e742d73616d652d61732d73656e646572600082015250565b613936816136bc565b811461394157600080fd5b50565b61394d816136ce565b811461395857600080fd5b50565b613964816136da565b811461396f57600080fd5b50565b61397b8161370c565b811461398657600080fd5b5056fea2646970667358221220863d715b3259b4281530426852976c810731fcd629e9d929b952828521da0ac064736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
