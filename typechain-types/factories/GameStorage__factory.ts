/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_materialIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "_addItemMaterialAndAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_blockAtLocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_checkLevel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseEnergy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_die",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isInitialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getBlockAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "materialIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "materialAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseEnergy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_mineBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_placeBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_playerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_removeItemMaterialAndAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setOccupierAtLocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "WORLD_WIDTH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "WORLD_HEIGHT",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "moveRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506122e1806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063908b9f17116100f9578063a54b6e9911610097578063b8afe4be11610071578063b8afe4be1461053b578063dc8afb631461056b578063e4c451e914610587578063f321da3b146105b7576101c4565b8063a54b6e99146104bf578063a93edcf9146104ef578063ad7c6cdc1461050b576101c4565b80639889c321116100d35780639889c321146104275780639b6d903a146104575780639cdc08d814610473578063a24ce62f1461048f576101c4565b8063908b9f17146103bf57806395c8929e146103ef5780639667b4c31461040b576101c4565b806367f98b5911610166578063801b83db11610140578063801b83db1461031d57806386b714e21461034d5780638bce7fab146103715780638cf4e61a1461038f576101c4565b806367f98b59146102c957806379564688146102e55780637dfe27c614610301576101c4565b806342526175116101a25780634252617514610245578063485a530914610261578063487d20801461027d57806348c5a71614610299576101c4565b806302e8af84146101c95780631e9eb73b146101e5578063267b52c714610215575b600080fd5b6101e360048036038101906101de9190611a0f565b6105d3565b005b6101ff60048036038101906101fa9190611a0f565b610635565b60405161020c9190611e97565b60405180910390f35b61022f600480360381019061022a9190611a0f565b6106a1565b60405161023c9190611f4b565b60405180910390f35b61025f600480360381019061025a9190611a0f565b610700565b005b61027b60048036038101906102769190611a0f565b610762565b005b61029760048036038101906102929190611a4b565b6107c4565b005b6102b360048036038101906102ae91906119d3565b610835565b6040516102c09190611e97565b60405180910390f35b6102e360048036038101906102de9190611ac3565b6108f9565b005b6102ff60048036038101906102fa9190611a4b565b610a1e565b005b61031b60048036038101906103169190611b7e565b610a8f565b005b61033760048036038101906103329190611a9a565b610b2d565b6040516103449190611ef2565b60405180910390f35b610355610d59565b6040516103689796959493929190611f66565b60405180910390f35b610379610dc0565b6040516103869190611f4b565b60405180910390f35b6103a960048036038101906103a491906119aa565b610dce565b6040516103b69190611f30565b60405180910390f35b6103d960048036038101906103d491906119aa565b610e43565b6040516103e69190611f14565b60405180910390f35b61040960048036038101906104049190611b7e565b610f27565b005b610425600480360381019061042091906119aa565b610fc6565b005b610441600480360381019061043c9190611a9a565b61115c565b60405161044e9190611e97565b60405180910390f35b610471600480360381019061046c9190611a4b565b61118d565b005b61048d60048036038101906104889190611a0f565b611254565b005b6104a960048036038101906104a49190611bcd565b6112b6565b6040516104b69190611e97565b60405180910390f35b6104d960048036038101906104d49190611a4b565b61132e565b6040516104e69190611e97565b60405180910390f35b61050960048036038101906105049190611a4b565b6113d4565b005b61052560048036038101906105209190611b42565b611477565b6040516105329190611e7c565b60405180910390f35b61055560048036038101906105509190611b7e565b611524565b6040516105629190611f4b565b60405180910390f35b61058560048036038101906105809190611a4b565b6115c3565b005b6105a1600480360381019061059c9190611b42565b6116a3565b6040516105ae9190611e97565b60405180910390f35b6105d160048036038101906105cc9190611a9a565b6116f6565b005b806000621e848d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825461062a91906120c6565b925050819055505050565b600080621e8486016000838152602001908152602001600020546000621e848d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601541015905092915050565b600080621e848e0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b806000621e848d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160008282546107579190612070565b925050819055505050565b806000621e848d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160008282546107b991906120c6565b925050819055505050565b806000621e848e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600082825461082991906120c6565b92505081905550505050565b60008061084184610dce565b9050600061084e84610dce565b9050600080621e84900160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600581426108a691906120c6565b116108b757600093505050506108f3565b6108db83600001518460200151846000015185602001516000621e848901546112b6565b6108eb57600093505050506108f3565b600193505050505b92915050565b816000621e848401600085815260200190815260200160002090805190602001906109259291906117e4565b5060005b82518110156109f957600083828151811061096d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508282815181106109b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516000621e84850160008781526020019081526020016000206000838152602001908152602001600020819055505080806109f190612173565b915050610929565b5060016000621e8487016000828254610a129190612070565b92505081905550505050565b806000621e848e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610a839190612070565b92505081905550505050565b600080600201846103e88110610ace577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201836103e88110610b0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101600083815260200190815260200160002081905550505050565b610b35611831565b600080621e848401600084815260200190815260200160002080549050905060008167ffffffffffffffff811115610b96577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610bc45781602001602082028036833780820191505090505b50905060005b6000621e848401600086815260200190815260200160002080549050811015610cce57600080621e84840160008781526020019081526020016000208281548110610c3e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490506000621e8485016000878152602001908152602001600020600082815260200190815260200160002054838381518110610cae577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050508080610cc690612173565b915050610bca565b50600060405180604001604052806000621e8484016000888152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610d3e57602002820191906000526020600020905b815481526020019060010190808311610d2a575b50505050508152602001838152509050809350505050919050565b600080600001549080600101549080621e84820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080621e84820160149054906101000a900460ff169080621e848701549080621e848801549080621e84890154905087565b600080621e84870154905090565b610dd661184b565b6000621e848d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201604051806040016040529081600082015481526020016001820154815250509050919050565b610e4b611865565b6000621e848d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff16151515158152602001600182015481526020016002820160405180604001604052908160008201548152602001600182015481525050815260200160048201548152602001600582015481526020016006820154815250509050919050565b806000600201846103e88110610f66577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201836103e88110610fa4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160010160006001815260200190815260200160002081905550505050565b600080621e848d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550600080621e848d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160405180604001604052908160008201548152602001600182015481525050905060008060020182600001516103e881106110d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d0020182602001516103e88110611113577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600080621e848301600083815260200190815260200160002060000160009054906101000a900460ff169050919050565b826000600201836103e881106111cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201826103e8811061120a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b806000621e848d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008282546112ab9190612070565b925050819055505050565b600080848710156112d25786856112cd91906120c6565b6112df565b84876112de91906120c6565b5b90506000848710156112fc5786856112f791906120c6565b611309565b848761130891906120c6565b5b9050600084831115801561131d5750848211155b905080935050505095945050505050565b60008061133a85610dce565b90506000806000015485108015611355575060006001015484105b8015611362575060008510155b801561136f575060008410155b905080611381576000925050506113cd565b61139d8585846000015185602001516000621e848801546112b6565b6113ac576000925050506113cd565b6113b685856116a3565b156113c6576000925050506113cd565b6001925050505b9392505050565b816000621e848d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160000181905550806000621e848d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160010181905550505050565b600080600201836103e881106114b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201826103e881106114f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600080600201846103e88110611563577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201836103e881106115a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160010160008381526020019081526020016000205490509392505050565b60006115ce33610dce565b905060006115db85610dce565b90506115fb826000015183602001518360000151846020015160056112b6565b61163a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163190611eb2565b60405180910390fd5b8261164533866106a1565b1015611686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167d90611ed2565b60405180910390fd5b6116913385856107c4565b61169c858585610a1e565b5050505050565b60008073ffffffffffffffffffffffffffffffffffffffff166116c68484611477565b73ffffffffffffffffffffffffffffffffffffffff1614156116eb57600090506116f0565b600190505b92915050565b60005b6000621e8484016000838152602001908152602001600020805490508110156117bc57600080621e8484016000848152602001908152602001600020828154811061176d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600080621e84850160008581526020019081526020016000206000838152602001908152602001600020819055505080806117b490612173565b9150506116f9565b506000621e848401600082815260200190815260200160002060006117e191906118ac565b50565b828054828255906000526020600020908101928215611820579160200282015b8281111561181f578251825591602001919060010190611804565b5b50905061182d91906118cd565b5090565b604051806040016040528060608152602001606081525090565b604051806040016040528060008152602001600081525090565b6040518060e001604052806000151581526020016000151581526020016000815260200161189161184b565b81526020016000815260200160008152602001600081525090565b50805460008255906000526020600020908101906118ca91906118cd565b50565b5b808211156118e65760008160009055506001016118ce565b5090565b60006118fd6118f884611ffa565b611fd5565b9050808382526020820190508285602086028201111561191c57600080fd5b60005b8581101561194c57816119328882611995565b84526020840193506020830192505060018101905061191f565b5050509392505050565b6000813590506119658161227d565b92915050565b600082601f83011261197c57600080fd5b813561198c8482602086016118ea565b91505092915050565b6000813590506119a481612294565b92915050565b6000602082840312156119bc57600080fd5b60006119ca84828501611956565b91505092915050565b600080604083850312156119e657600080fd5b60006119f485828601611956565b9250506020611a0585828601611956565b9150509250929050565b60008060408385031215611a2257600080fd5b6000611a3085828601611956565b9250506020611a4185828601611995565b9150509250929050565b600080600060608486031215611a6057600080fd5b6000611a6e86828701611956565b9350506020611a7f86828701611995565b9250506040611a9086828701611995565b9150509250925092565b600060208284031215611aac57600080fd5b6000611aba84828501611995565b91505092915050565b600080600060608486031215611ad857600080fd5b6000611ae686828701611995565b935050602084013567ffffffffffffffff811115611b0357600080fd5b611b0f8682870161196b565b925050604084013567ffffffffffffffff811115611b2c57600080fd5b611b388682870161196b565b9150509250925092565b60008060408385031215611b5557600080fd5b6000611b6385828601611995565b9250506020611b7485828601611995565b9150509250929050565b600080600060608486031215611b9357600080fd5b6000611ba186828701611995565b9350506020611bb286828701611995565b9250506040611bc386828701611995565b9150509250925092565b600080600080600060a08688031215611be557600080fd5b6000611bf388828901611995565b9550506020611c0488828901611995565b9450506040611c1588828901611995565b9350506060611c2688828901611995565b9250506080611c3788828901611995565b9150509295509295909350565b6000611c508383611e5e565b60208301905092915050565b611c65816120fa565b82525050565b6000611c7682612036565b611c80818561204e565b9350611c8b83612026565b8060005b83811015611cbc578151611ca38882611c44565b9750611cae83612041565b925050600181019050611c8f565b5085935050505092915050565b611cd28161210c565b82525050565b611ce18161210c565b82525050565b6000611cf460148361205f565b9150611cff8261222b565b602082019050919050565b6000611d17601a8361205f565b9150611d2282612254565b602082019050919050565b60006040830160008301518482036000860152611d4a8282611c6b565b91505060208301518482036020860152611d648282611c6b565b9150508091505092915050565b61010082016000820151611d886000850182611cc9565b506020820151611d9b6020850182611cc9565b506040820151611dae6040850182611e5e565b506060820151611dc16060850182611e00565b506080820151611dd460a0850182611e5e565b5060a0820151611de760c0850182611e5e565b5060c0820151611dfa60e0850182611e5e565b50505050565b604082016000820151611e166000850182611e5e565b506020820151611e296020850182611e5e565b50505050565b604082016000820151611e456000850182611e5e565b506020820151611e586020850182611e5e565b50505050565b611e6781612138565b82525050565b611e7681612138565b82525050565b6000602082019050611e916000830184611c5c565b92915050565b6000602082019050611eac6000830184611cd8565b92915050565b60006020820190508181036000830152611ecb81611ce7565b9050919050565b60006020820190508181036000830152611eeb81611d0a565b9050919050565b60006020820190508181036000830152611f0c8184611d2d565b905092915050565b600061010082019050611f2a6000830184611d71565b92915050565b6000604082019050611f456000830184611e2f565b92915050565b6000602082019050611f606000830184611e6d565b92915050565b600060e082019050611f7b600083018a611e6d565b611f886020830189611e6d565b611f956040830188611c5c565b611fa26060830187611cd8565b611faf6080830186611e6d565b611fbc60a0830185611e6d565b611fc960c0830184611e6d565b98975050505050505050565b6000611fdf611ff0565b9050611feb8282612142565b919050565b6000604051905090565b600067ffffffffffffffff821115612015576120146121eb565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061207b82612138565b915061208683612138565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120bb576120ba6121bc565b5b828201905092915050565b60006120d182612138565b91506120dc83612138565b9250828210156120ef576120ee6121bc565b5b828203905092915050565b600061210582612118565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61214b8261221a565b810181811067ffffffffffffffff8211171561216a576121696121eb565b5b80604052505050565b600061217e82612138565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156121b1576121b06121bc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b612286816120fa565b811461229157600080fd5b50565b61229d81612138565b81146122a857600080fd5b5056fea264697066735822122066d428e167025d4d31d4d556c08fe658e3183394e38a80d7803143d7c6ea377564736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
