/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_towerId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_towerId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "StakeTower",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_towerId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "UnstakeTower",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_craftItemIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_craftItemAmounts",
        type: "uint256[]",
      },
    ],
    name: "_addCraftItemAndAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeEnergy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_removeCraftItemAndAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "encodePos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "contract Epoch",
        name: "epochController",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "moveRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Epoch",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setEpochController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506138a4806100206000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806386b714e21161011a578063ad7c6cdc116100ad578063e4c451e91161007c578063e4c451e914610663578063e9cf517314610693578063f095277c146106af578063f17dd707146106df578063fad86c3c146106fb57610206565b8063ad7c6cdc146105b7578063be565940146105e7578063be947ce014610617578063dc8afb631461064757610206565b8063a54b6e99116100e9578063a54b6e9914610533578063a93edcf914610563578063aae1eeac1461057f578063ac70cc791461059b57610206565b806386b714e21461048c5780638bce7fab146104b5578063908b9f17146104d35780639889c3211461050357610206565b80634a4e51b31161019d5780635d7d80411161016c5780635d7d8041146103d85780635e3a6282146103f45780637956468814610424578063801b83db1461044057806384258cae1461047057610206565b80634a4e51b31461032c5780635923b9a41461035c5780635a9c06441461038c5780635d2f8585146103a857610206565b80633f261e07116101d95780633f261e07146102925780633f4105fc146102b0578063487d2080146102e057806348c5a716146102fc57610206565b806306ae3d021461020b57806316e1cc67146102275780631ccd4c15146102435780632c190c6214610273575b600080fd5b61022560048036038101906102209190612ae6565b61072b565b005b610241600480360381019061023c91906129ef565b610837565b005b61025d6004803603810190610258919061284b565b61092f565b60405161026a91906132b2565b60405180910390f35b61027b61098d565b6040516102899291906132cd565b60405180910390f35b61029a6109a3565b6040516102a791906130f6565b60405180910390f35b6102ca60048036038101906102c59190612aaa565b610a35565b6040516102d791906132b2565b60405180910390f35b6102fa60048036038101906102f591906128d6565b610ac2565b005b6103166004803603810190610311919061280f565b610b9a565b604051610323919061313a565b60405180910390f35b61034660048036038101906103419190612977565b610be2565b604051610353919061313a565b60405180910390f35b61037660048036038101906103719190612aaa565b610c82565b60405161038391906132b2565b60405180910390f35b6103a660048036038101906103a19190612925565b610d69565b005b6103c260048036038101906103bd9190612aaa565b610db1565b6040516103cf9190613118565b60405180910390f35b6103f260048036038101906103ed9190612aaa565b611092565b005b61040e6004803603810190610409919061294e565b611162565b60405161041b9190613155565b60405180910390f35b61043e600480360381019061043991906128d6565b611195565b005b61045a600480360381019061045591906129c6565b611210565b6040516104679190613237565b60405180910390f35b61048a60048036038101906104859190612887565b6113b9565b005b610494611482565b6040516104ac9c9b9a999897969594939291906132f6565b60405180910390f35b6104bd611527565b6040516104ca91906132b2565b60405180910390f35b6104ed60048036038101906104e891906127e6565b611534565b6040516104fa9190613259565b60405180910390f35b61051d600480360381019061051891906129c6565b61166e565b60405161052a919061313a565b60405180910390f35b61054d600480360381019061054891906128d6565b61169e565b60405161055a919061313a565b60405180910390f35b61057d600480360381019061057891906128d6565b611755565b005b61059960048036038101906105949190612a6e565b6117f6565b005b6105b560048036038101906105b091906128d6565b611a0b565b005b6105d160048036038101906105cc9190612aaa565b611acf565b6040516105de91906130db565b60405180910390f35b61060160048036038101906105fc91906127e6565b611b79565b60405161060e9190613275565b60405180910390f35b610631600480360381019061062c9190612ae6565b611bed565b60405161063e91906132b2565b60405180910390f35b610661600480360381019061065c91906128d6565b611d7f565b005b61067d60048036038101906106789190612aaa565b611ebc565b60405161068a919061313a565b60405180910390f35b6106ad60048036038101906106a891906129c6565b611fa2565b005b6106c960048036038101906106c491906127e6565b612023565b6040516106d69190613290565b60405180910390f35b6106f960048036038101906106f49190612887565b6122da565b005b610715600480360381019061071091906129c6565b6123a3565b6040516107229190613275565b60405180910390f35b6000806002018460648110610769577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c8020183606481106107a5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101905060018180549050106108085781816000815481106107f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550610831565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b50505050565b805182511461087b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610872906131f7565b60405180910390fd5b60016000614e2501600085815260200190815260200160002060000160016101000a81548160ff021916908315150217905550816000614e2501600085815260200190815260200160002060050190805190602001906108dc9291906124fc565b50806000614e25016000858152602001908152602001600020600601908051906020019061090b9291906124fc565b5060016000614e2601600082825461092391906134c8565b92505081905550505050565b600080614e2f0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6000806000800154600060010154915091509091565b60606000614e2d01805480602002602001604051908101604052809291908181526020018280548015610a2b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109e1575b5050505050905090565b6000806002018360648110610a73577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018260648110610aaf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160010180549050905092915050565b806000614e2f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610b26919061351e565b92505081905550600080614e2f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541415610b9557610b948260006117f6565b5b505050565b600080610ba684611b79565b90506000610bb384611b79565b9050610bc682826000614e280154610be2565b610bd557600092505050610bdc565b6001925050505b92915050565b600080836000015185600001511015610c0e5784600001518460000151610c09919061351e565b610c23565b83600001518560000151610c22919061351e565b5b90506000846020015186602001511015610c505785602001518560200151610c4b919061351e565b610c65565b84602001518660200151610c64919061351e565b5b9050838211158015610c775750838111155b925050509392505050565b600080610c8f8484610a35565b905060006002018460648110610cce577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018360648110610d0a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101600182610d1e919061351e565b81548110610d55577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015491505092915050565b806000614e230160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000606467ffffffffffffffff811115610df6577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610e2f57816020015b610e1c612549565b815260200190600190039081610e145790505b5090506000808590505b600a86610e4691906134c8565b8110156110865760008590505b600a86610e6091906134c8565b81101561107257604051806080016040528060006002018460648110610eaf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018360648110610eeb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160006002018460648110610f6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018360648110610fa7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101805480602002602001604051908101604052809291908181526020018280548015610ff857602002820191906000526020600020905b815481526020019060010190808311610fe4575b5050505050815260200183815260200182815250848481518110611045577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018361105d91906134c8565b9250808061106a90613634565b915050610e53565b50808061107e90613634565b915050610e39565b50819250505092915050565b600060020182606481106110cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c80201816064811061110b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101805480611148577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590555050565b60608160000151826020015160405160200161117f9291906130af565b6040516020818303038152906040529050919050565b6111a08260016117f6565b806000614e2f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600082825461120491906134c8565b92505081905550505050565b611218612587565b6000614e25016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482018054806020026020016040519081016040528092919081815260200182805480156112f957602002820191906000526020600020905b8154815260200190600101908083116112e5575b505050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561135157602002820191906000526020600020905b81548152602001906001019080831161133d575b50505050508152602001600682018054806020026020016040519081016040528092919081815260200182805480156113a957602002820191906000526020600020905b815481526020019060010190808311611395575b5050505050815250509050919050565b8061141f57816000614e2e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000828254611414919061351e565b92505081905561147c565b816000614e2e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825461147591906134c8565b9250508190555b50505050565b600080600001549080600101549080614e220160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080614e220160149054906101000a900460ff169080614e230160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080614e2601549080614e2701549080614e2801549080614e2901549080614e2a01549080614e2b01549080614e2c015490508c565b600080614e260154905090565b61153c6125d9565b6000614e2e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b600080614e2401600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b6000806116aa85611b79565b905060008060000154851080156116c5575060006001015484105b80156116d2575060008510155b80156116df575060008410155b9050806116f15760009250505061174e565b6000604051806040016040528087815260200186815250905061171b81846000614e270154610be2565b61172b576000935050505061174e565b6117358686611ebc565b15611746576000935050505061174e565b600193505050505b9392505050565b816000614e2e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160000181905550806000614e2e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160010181905550505050565b60008060005b6000614e310160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156118f257846000614e310160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106118c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015414156118df57809250600191505b80806118ea90613634565b9150506117fc565b508261198d578015611988576000614e310160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611979577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b611a05565b8215611a045780611a03576000614e310160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b8260006002018360648110611a49577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018260648110611a85577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000806002018360648110611b0d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018260648110611b49577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b611b8161263e565b6000614e2e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601604051806040016040529081600082015481526020016001820154815250509050919050565b6000806002018460648110611c2b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018360648110611c67577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101805490508210611cb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611caa906131d7565b60405180910390fd5b60006002018460648110611cf0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018360648110611d2c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600202016001018281548110611d6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490509392505050565b6000611d8a33611b79565b90506000611d9785611b79565b90508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611e08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dff90613217565b60405180910390fd5b611e1482826005610be2565b611e53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4a90613177565b60405180910390fd5b82611e5e338661092f565b1015611e9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9690613197565b60405180910390fd5b611eaa338585610ac2565b611eb5858585611195565b5050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16611edf8484611acf565b73ffffffffffffffffffffffffffffffffffffffff1614611f035760019050611f9c565b6000806002018460648110611f41577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018360648110611f7d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101805490501115611f975760019050611f9c565b600090505b92915050565b600080614e2501600083815260200190815260200160002060000160016101000a81548160ff0219169083151502179055506000614e250160008281526020019081526020016000206005016000611ffa9190612658565b6000614e2501600082815260200190815260200160002060060160006120209190612658565b50565b61202b612679565b600080614e310160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff8111156120b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156120e55781602001602082028036833780820191505090505b50905060005b8281101561222a57600080614e310160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061216f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490506000614e2f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008281526020019081526020016000205483838151811061220a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505050808061222290613634565b9150506120eb565b5060405180604001604052806000614e310160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156122c357602002820191906000526020600020905b8154815260200190600101908083116122af575b505050505081526020018281525092505050919050565b8061234057816000614e2e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254612335919061351e565b92505081905561239d565b816000614e2e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461239691906134c8565b9250508190555b50505050565b6123ab61263e565b6000806123bd84600060010154612442565b915091506000806123d38660006001015461249f565b915091508315806123e2575081155b15612422576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612419906131b7565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b600080600083141561245a5760008091509150612498565b6001838581612492577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b60008060008314156124b757600080915091506124f5565b60018385816124ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b828054828255906000526020600020908101928215612538579160200282015b8281111561253757825182559160200191906001019061251c565b5b5090506125459190612693565b5090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b60405180610100016040528060001515815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200161263861263e565b81525090565b604051806040016040528060008152602001600081525090565b50805460008255906000526020600020908101906126769190612693565b50565b604051806040016040528060608152602001606081525090565b5b808211156126ac576000816000905550600101612694565b5090565b60006126c36126be846133d5565b6133b0565b905080838252602082019050828560208602820111156126e257600080fd5b60005b8581101561271257816126f888826127d1565b8452602084019350602083019250506001810190506126e5565b5050509392505050565b60008135905061272b81613812565b92915050565b600082601f83011261274257600080fd5b81356127528482602086016126b0565b91505092915050565b60008135905061276a81613829565b92915050565b60008135905061277f81613840565b92915050565b60006040828403121561279757600080fd5b6127a160406133b0565b905060006127b1848285016127d1565b60008301525060206127c5848285016127d1565b60208301525092915050565b6000813590506127e081613857565b92915050565b6000602082840312156127f857600080fd5b60006128068482850161271c565b91505092915050565b6000806040838503121561282257600080fd5b60006128308582860161271c565b92505060206128418582860161271c565b9150509250929050565b6000806040838503121561285e57600080fd5b600061286c8582860161271c565b925050602061287d858286016127d1565b9150509250929050565b60008060006060848603121561289c57600080fd5b60006128aa8682870161271c565b93505060206128bb868287016127d1565b92505060406128cc8682870161275b565b9150509250925092565b6000806000606084860312156128eb57600080fd5b60006128f98682870161271c565b935050602061290a868287016127d1565b925050604061291b868287016127d1565b9150509250925092565b60006020828403121561293757600080fd5b600061294584828501612770565b91505092915050565b60006040828403121561296057600080fd5b600061296e84828501612785565b91505092915050565b600080600060a0848603121561298c57600080fd5b600061299a86828701612785565b93505060406129ab86828701612785565b92505060806129bc868287016127d1565b9150509250925092565b6000602082840312156129d857600080fd5b60006129e6848285016127d1565b91505092915050565b600080600060608486031215612a0457600080fd5b6000612a12868287016127d1565b935050602084013567ffffffffffffffff811115612a2f57600080fd5b612a3b86828701612731565b925050604084013567ffffffffffffffff811115612a5857600080fd5b612a6486828701612731565b9150509250925092565b60008060408385031215612a8157600080fd5b6000612a8f858286016127d1565b9250506020612aa08582860161275b565b9150509250929050565b60008060408385031215612abd57600080fd5b6000612acb858286016127d1565b9250506020612adc858286016127d1565b9150509250929050565b600080600060608486031215612afb57600080fd5b6000612b09868287016127d1565b9350506020612b1a868287016127d1565b9250506040612b2b868287016127d1565b9150509250925092565b6000612b418383612b79565b60208301905092915050565b6000612b598383613017565b905092915050565b6000612b6d838361307a565b60208301905092915050565b612b8281613552565b82525050565b612b9181613552565b82525050565b6000612ba282613431565b612bac8185613484565b9350612bb783613401565b8060005b83811015612be8578151612bcf8882612b35565b9750612bda8361345d565b925050600181019050612bbb565b5085935050505092915050565b6000612c008261343c565b612c0a8185613495565b935083602082028501612c1c85613411565b8060005b85811015612c585784840389528151612c398582612b4d565b9450612c448361346a565b925060208a01995050600181019050612c20565b50829750879550505050505092915050565b6000612c7582613447565b612c7f81856134a6565b9350612c8a83613421565b8060005b83811015612cbb578151612ca28882612b61565b9750612cad83613477565b925050600181019050612c8e565b5085935050505092915050565b612cd181613564565b82525050565b612ce081613564565b82525050565b612cef816135ac565b82525050565b6000612d0082613452565b612d0a81856134b7565b9350612d1a8185602086016135d0565b612d23816136e5565b840191505092915050565b6000612d3b6014836134b7565b9150612d46826136f6565b602082019050919050565b6000612d5e601a836134b7565b9150612d698261371f565b602082019050919050565b6000612d816019836134b7565b9150612d8c82613748565b602082019050919050565b6000612da46016836134b7565b9150612daf82613771565b602082019050919050565b6000612dc76021836134b7565b9150612dd28261379a565b604082019050919050565b6000612dea6020836134b7565b9150612df5826137e9565b602082019050919050565b600061012083016000830151612e196000860182612cc8565b506020830151612e2c6020860182612cc8565b506040830151612e3f6040860182612cc8565b506060830151612e52606086018261307a565b506080830151612e65608086018261307a565b5060a0830151612e7860a086018261307a565b5060c083015184820360c0860152612e908282612c6a565b91505060e083015184820360e0860152612eaa8282612c6a565b915050610100830151848203610100860152612ec68282612c6a565b9150508091505092915050565b61012082016000820151612eea6000850182612cc8565b506020820151612efd6020850182612cc8565b506040820151612f10604085018261307a565b506060820151612f236060850182612b79565b506080820151612f36608085018261307a565b5060a0820151612f4960a085018261307a565b5060c0820151612f5c60c085018261307a565b5060e0820151612f6f60e0850182612f75565b50505050565b604082016000820151612f8b600085018261307a565b506020820151612f9e602085018261307a565b50505050565b604082016000820151612fba600085018261307a565b506020820151612fcd602085018261307a565b50505050565b60006040830160008301518482036000860152612ff08282612c6a565b9150506020830151848203602086015261300a8282612c6a565b9150508091505092915050565b600060808301600083015161302f6000860182612b79565b50602083015184820360208601526130478282612c6a565b915050604083015161305c604086018261307a565b50606083015161306f606086018261307a565b508091505092915050565b613083816135a2565b82525050565b613092816135a2565b82525050565b6130a96130a4826135a2565b61367d565b82525050565b60006130bb8285613098565b6020820191506130cb8284613098565b6020820191508190509392505050565b60006020820190506130f06000830184612b88565b92915050565b600060208201905081810360008301526131108184612b97565b905092915050565b600060208201905081810360008301526131328184612bf5565b905092915050565b600060208201905061314f6000830184612cd7565b92915050565b6000602082019050818103600083015261316f8184612cf5565b905092915050565b6000602082019050818103600083015261319081612d2e565b9050919050565b600060208201905081810360008301526131b081612d51565b9050919050565b600060208201905081810360008301526131d081612d74565b9050919050565b600060208201905081810360008301526131f081612d97565b9050919050565b6000602082019050818103600083015261321081612dba565b9050919050565b6000602082019050818103600083015261323081612ddd565b9050919050565b600060208201905081810360008301526132518184612e00565b905092915050565b60006101208201905061326f6000830184612ed3565b92915050565b600060408201905061328a6000830184612fa4565b92915050565b600060208201905081810360008301526132aa8184612fd3565b905092915050565b60006020820190506132c76000830184613089565b92915050565b60006040820190506132e26000830185613089565b6132ef6020830184613089565b9392505050565b60006101808201905061330c600083018f613089565b613319602083018e613089565b613326604083018d612b88565b613333606083018c612cd7565b613340608083018b612ce6565b61334d60a083018a613089565b61335a60c0830189613089565b61336760e0830188613089565b613375610100830187613089565b613383610120830186613089565b613391610140830185613089565b61339f610160830184613089565b9d9c50505050505050505050505050565b60006133ba6133cb565b90506133c68282613603565b919050565b6000604051905090565b600067ffffffffffffffff8211156133f0576133ef6136b6565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006134d3826135a2565b91506134de836135a2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561351357613512613687565b5b828201905092915050565b6000613529826135a2565b9150613534836135a2565b92508282101561354757613546613687565b5b828203905092915050565b600061355d82613582565b9050919050565b60008115159050919050565b600061357b82613552565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006135b7826135be565b9050919050565b60006135c982613582565b9050919050565b60005b838110156135ee5780820151818401526020810190506135d3565b838111156135fd576000848401525b50505050565b61360c826136e5565b810181811067ffffffffffffffff8211171561362b5761362a6136b6565b5b80604052505050565b600061363f826135a2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561367257613671613687565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f656e67696e652f696e76616c69642d63726166742d6974656d2d616d6f756e7460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f73746f726167652f726563697069656e742d73616d652d61732d73656e646572600082015250565b61381b81613552565b811461382657600080fd5b50565b61383281613564565b811461383d57600080fd5b50565b61384981613570565b811461385457600080fd5b50565b613860816135a2565b811461386b57600080fd5b5056fea2646970667358221220d441e5e873b5126ce8eed3ea0e038b1c6513be6e98959c52c7e7ca4b671252ee64736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
