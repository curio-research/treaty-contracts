/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_addPlayerStakePoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeEnergy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeTopLevelStrengthAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "_encodePos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAttackDamage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_craftItemId",
        type: "uint256",
      },
    ],
    name: "_getCraftItemAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getHealth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemById",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getMineItemIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "_getStakePointsByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTileData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "topLevelStrength",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopLevelStrengthAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_towerId",
        type: "string",
      },
    ],
    name: "_getTower",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rewardPerEpoch",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct GameTypes.Tower",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "_initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "_blocks",
        type: "uint256[]",
      },
    ],
    name: "_setBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldHeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startPlayerEnergy",
        type: "uint256",
      },
    ],
    name: "_setConstants",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_i",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "_item",
        type: "tuple",
      },
    ],
    name: "_setItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setPlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_setPlayerStakedPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_strength",
        type: "uint256",
      },
    ],
    name: "_setTopLevelStrengthAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_towerId",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "rewardPerEpoch",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct GameTypes.Tower",
        name: "_tower",
        type: "tuple",
      },
    ],
    name: "_setTower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_towerId",
        type: "string",
      },
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_setTowerOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_subtractPlayerStakePoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_towerId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_subtractTowerStakePoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
      {
        internalType: "contract Epoch",
        name: "epochController",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Epoch",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setEpochController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506153dd806100206000396000f3fe608060405234801561001057600080fd5b50600436106103785760003560e01c806391ba2053116101d3578063c439ec7e11610104578063e7104c1f116100a2578063f09c4b261161007c578063f09c4b2614610afe578063f0bfd52b14610b2e578063f17dd70714610b5e578063fad86c3c14610b7a57610378565b8063e7104c1f14610a82578063e876ffa714610ab2578063f095277c14610ace57610378565b8063d25c3af2116100de578063d25c3af214610a12578063d817884714610a2e578063dc8afb6314610a4a578063dd597d2714610a6657610378565b8063c439ec7e14610996578063c537e3e5146109b2578063d00ed1f0146109e257610378565b8063b0b49ba511610171578063b8c07c9f1161014b578063b8c07c9f14610910578063be5659401461092c578063bfc525a21461095c578063c3b33fe41461098c57610378565b8063b0b49ba514610894578063b62b7130146108c4578063b7c361d0146108e057610378565b80639889c321116101ad5780639889c321146107fa578063a1088b6b1461082a578063a3c5333814610848578063ae19b4621461087857610378565b806391ba2053146107a657806392375340146107c2578063957e9b88146107de57610378565b80635de24e18116102ad578063801b83db1161024b57806386e68be31161022557806386e68be31461070c57806387fc5549146107285780638bce7fab14610758578063908b9f171461077657610378565b8063801b83db1461069857806384258cae146106c857806386b714e2146106e457610378565b80636b7af8cb116102875780636b7af8cb14610612578063776f13a614610642578063777e12f014610660578063795646881461067c57610378565b80635de24e18146105825780635f5647bf146105b257806367ae0634146105e257610378565b8063487d20801161031a5780634e0879f7116102f45780634e0879f7146104d657806350607fee1461050657806354480bca146105365780635a9c06441461056657610378565b8063487d20801461045a57806348c5a716146104765780634a4e51b3146104a657610378565b806325b88e021161035657806325b88e02146103e55780632c190c621461040157806334f0bba0146104205780633f261e071461043c57610378565b80630a37f5671461037d5780631ccd4c1514610399578063201549ac146103c9575b600080fd5b610397600480360381019061039291906142f5565b610baa565b005b6103b360048036038101906103ae9190613fe9565b610c3c565b6040516103c09190614ded565b60405180910390f35b6103e360048036038101906103de9190614229565b610c9a565b005b6103ff60048036038101906103fa9190614252565b610fa9565b005b61040961104b565b604051610417929190614e08565b60405180910390f35b61043a600480360381019061043591906143d2565b611061565b005b610444611156565b6040516104519190614bf2565b60405180910390f35b610474600480360381019061046f9190614074565b6111e8565b005b610490600480360381019061048b9190613f71565b6112c1565b60405161049d9190614c58565b60405180910390f35b6104c060048036038101906104bb91906142a6565b611309565b6040516104cd9190614c58565b60405180910390f35b6104f060048036038101906104eb9190613f48565b6113a9565b6040516104fd9190614c58565b60405180910390f35b610520600480360381019061051b9190614229565b611405565b60405161052d9190614c14565b60405180910390f35b610550600480360381019061054b9190613f48565b6116f7565b60405161055d9190614ded565b60405180910390f35b610580600480360381019061057b91906140c3565b611743565b005b61059c60048036038101906105979190614229565b61178b565b6040516105a99190614c73565b60405180910390f35b6105cc60048036038101906105c79190613fe9565b6117be565b6040516105d99190614ded565b60405180910390f35b6105fc60048036038101906105f79190614229565b61181c565b6040516106099190614b92565b60405180910390f35b61062c60048036038101906106279190614229565b6118ce565b6040516106399190614db0565b60405180910390f35b61064a611a26565b6040516106579190614ded565b60405180910390f35b61067a60048036038101906106759190614025565b611a33565b005b61069660048036038101906106919190614074565b611c49565b005b6106b260048036038101906106ad9190614380565b611cc5565b6040516106bf9190614d35565b60405180910390f35b6106e260048036038101906106dd9190614025565b611e6e565b005b6106ec611f37565b6040516107039b9a99989796959493929190614e31565b60405180910390f35b61072660048036038101906107219190613fad565b611fd5565b005b610742600480360381019061073d9190613fad565b6120a1565b60405161074f9190614c58565b60405180910390f35b610760612145565b60405161076d9190614ded565b60405180910390f35b610790600480360381019061078b9190613f48565b612152565b60405161079d9190614d57565b60405180910390f35b6107c060048036038101906107bb9190614181565b612270565b005b6107dc60048036038101906107d791906141d5565b612309565b005b6107f860048036038101906107f39190613fe9565b61234e565b005b610814600480360381019061080f9190614380565b6123ac565b6040516108219190614c58565b60405180910390f35b6108326123dc565b60405161083f9190614ded565b60405180910390f35b610862600480360381019061085d91906140ec565b612486565b60405161086f9190614dd2565b60405180910390f35b610892600480360381019061088d9190613fe9565b612540565b005b6108ae60048036038101906108a991906142f5565b61259e565b6040516108bb9190614ded565b60405180910390f35b6108de60048036038101906108d99190613fad565b612741565b005b6108fa60048036038101906108f59190614380565b6127a3565b6040516109079190614c36565b60405180910390f35b61092a60048036038101906109259190614229565b612815565b005b61094660048036038101906109419190613f48565b6129cc565b6040516109539190614d73565b60405180910390f35b61097660048036038101906109719190614229565b612a40565b6040516109839190614ded565b60405180910390f35b610994612ad2565b005b6109b060048036038101906109ab919061412d565b612af2565b005b6109cc60048036038101906109c79190614229565b612b5a565b6040516109d99190614c58565b60405180910390f35b6109fc60048036038101906109f79190613f48565b612c47565b604051610a099190614ded565b60405180910390f35b610a2c6004803603810190610a279190614426565b612c96565b005b610a486004803603810190610a4391906142f5565b612cf5565b005b610a646004803603810190610a5f9190614074565b612eb1565b005b610a806004803603810190610a7b9190614331565b61302b565b005b610a9c6004803603810190610a979190614380565b613181565b604051610aa99190614d35565b60405180910390f35b610acc6004803603810190610ac79190613fe9565b61332a565b005b610ae86004803603810190610ae39190613f48565b613388565b604051610af59190614d8e565b60405180910390f35b610b186004803603810190610b139190614229565b61363f565b604051610b259190614ded565b60405180910390f35b610b486004803603810190610b439190614229565b6136d4565b604051610b559190614ded565b60405180910390f35b610b786004803603810190610b739190614025565b6137c2565b005b610b946004803603810190610b8f9190614380565b61388b565b604051610ba19190614d73565b60405180910390f35b806000600201836000015160648110610bec577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610c2d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101819055505050565b60008061753d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6000600201816000015160648110610cdb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201816020015160648110610d1c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480610d59577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590556000610d7a8261363f565b90506000811115610f1657600080600201836000015160648110610dc7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610e08577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002016001610e1a8561363f565b610e249190615097565b81548110610e5b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490506000617534016000828152602001908152602001600020600101546000600201846000015160648110610ec4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110610f05577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018190555050610fa5565b600080600201836000015160648110610f58577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610f99577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101819055505b5050565b806000600201836000015160648110610feb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020183602001516064811061102c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020190805190602001906110469291906139e4565b505050565b6000806000800154600060010154915091509091565b80600061753401600084815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff021916908315150217905550606082015181600101556080820151816002015560a0820151816003015560c08201518160040190805190602001906111139291906139e4565b5060e08201518160050190805190602001906111309291906139e4565b5061010082015181600601908051906020019061114e9291906139e4565b509050505050565b6060600061753b018054806020026020016040519081016040528092919081815260200182805480156111de57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611194575b5050505050905090565b80600061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600082825461124c9190615097565b9250508190555060008061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205414156112bc576112bb83836000611a33565b5b505050565b6000806112cd846129cc565b905060006112da846129cc565b90506112ed828260006175360154611309565b6112fc57600092505050611303565b6001925050505b92915050565b60008083600001518560000151101561133557846000015184600001516113309190615097565b61134a565b836000015185600001516113499190615097565b5b9050600084602001518660200151101561137757856020015185602001516113729190615097565b61138c565b8460200151866020015161138b9190615097565b5b905083821115801561139e5750838111155b925050509392505050565b60008061753c0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b60606000606467ffffffffffffffff81111561144a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561148357816020015b611470613a31565b8152602001906001900390816114685790505b509050600080846000015190505b600a85600001516114a29190615041565b8110156116ec576000856020015190505b600a86602001516114c49190615041565b8110156116d857604051806080016040528060006002018460648110611513577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611550577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600060020184606481106115d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836064811061160d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020180548060200260200160405190810160405280929190818152602001828054801561165e57602002820191906000526020600020905b81548152602001906001019080831161164a575b50505050508152602001838152602001828152508484815181106116ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001836116c39190615041565b925080806116d0906151bc565b9150506114b3565b5080806116e4906151bc565b915050611491565b508192505050919050565b6000806175420160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8060006175400160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060816000015182602001516040516020016117a8929190614b66565b6040516020818303038152906040529050919050565b60008061753d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60008060020182600001516064811061185e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020182602001516064811061189f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6118d6613a6f565b6000600201826000015160648110611917577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611958577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020018280548015611a1657602002820191906000526020600020905b815481526020019060010190808311611a02575b5050505050815250509050919050565b6000806175370154905090565b60008060005b600061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611b2f5784600061753f0160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611b03577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001541415611b1c57809250600191505b8080611b27906151bc565b915050611a39565b5082611bca578015611bc557600061753f0160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611bb6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b611c42565b8215611c415780611c4057600061753f0160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b5050505050565b611c5583836001611a33565b80600061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254611cb99190615041565b92505081905550505050565b611ccd613aa6565b6000617534016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015611dae57602002820191906000526020600020905b815481526020019060010190808311611d9a575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611e0657602002820191906000526020600020905b815481526020019060010190808311611df2575b5050505050815260200160068201805480602002602001604051908101604052809291908181526020018280548015611e5e57602002820191906000526020600020905b815481526020019060010190808311611e4a575b5050505050815250509050919050565b80611ed45781600061753c0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000828254611ec99190615097565b925050819055611f31565b81600061753c0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000828254611f2a9190615041565b9250508190555b50505050565b6000806000015490806001015490806175320160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175320160149054906101000a900460ff169080617535015490806175360154908061753701549080617538015490806175390154908061753a015490806175400160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508b565b816000600201826000015160648110612017577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110612058577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000806120ad846129cc565b90506000806000015484600001511080156120d057506000600101548460200151105b80156120e157506000846000015110155b80156120f257506000846020015110155b9050806121045760009250505061213f565b61211084836001611309565b61211f5760009250505061213f565b61212884612b5a565b156121385760009250505061213f565b6001925050505b92915050565b6000806175350154905090565b61215a613af8565b600061753c0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b80600061754101836040516122859190614b4f565b90815260200160405180910390206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050565b600080617541018360405161231e9190614b4f565b90815260200160405180910390209050818160020160008282546123429190615097565b92505081905550505050565b8060006175420160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546123a19190615097565b925050819055505050565b60008061753301600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b6000806175400160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663900cf0cf6040518163ffffffff1660e01b815260040160206040518083038186803b15801561244957600080fd5b505afa15801561245d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061248191906143a9565b905090565b61248e613b53565b600061754101826040516124a29190614b4f565b90815260200160405180910390206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b8060006175420160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546125939190615041565b925050819055505050565b6000806002018360000151606481106125e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110612621577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020180549050821061266d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161266490614cf5565b60405180910390fd5b60006002018360000151606481106126ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360200151606481106126ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201828154811061272e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b80600061753c0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160008201518160000155602082015181600101559050505050565b6060600061753401600083815260200190815260200160002060040180548060200260200160405190810160405280929190818152602001828054801561280957602002820191906000526020600020905b8154815260200190600101908083116127f5575b50505050509050919050565b6040518060e001604052806001151581526020014281526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600061753901548152602001600061753a015481526020016006815260200182815250600061753c0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160008201518160000155602082015181600101555050905050600061753b01339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6129d4613b98565b600061753c0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601604051806040016040529081600082015481526020016001820154815250509050919050565b600080600201826000015160648110612a82577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110612ac3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101549050919050565b60016000617535016000828254612ae99190615041565b92505081905550565b8060006175410183604051612b079190614b4f565b908152602001604051809103902060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff16612b7c8361181c565b73ffffffffffffffffffffffffffffffffffffffff1614612ba05760019050612c42565b600080600201836000015160648110612be2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110612c23577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490501115612c3d5760019050612c42565b600090505b919050565b60008061753c0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050919050565b86600080018190555085600060010181905550600160006175350181905550846000617536018190555083600061753701819055508260006175380181905550816000617539018190555080600061753a018190555050505050505050565b600080600201836000015160648110612d37577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110612d78577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020190506001818054905010612ddb578181600081548110612dc8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550612e04565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b6000617534016000838152602001908152602001600020600101546000600201846000015160648110612e60577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110612ea1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010181905550505050565b6000612ebc336129cc565b90506000612ec9856129cc565b90508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415612f3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f3190614d15565b60405180910390fd5b612f4682826005611309565b612f85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f7c90614c95565b60405180910390fd5b82612f903386610c3c565b1015612fd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fc890614cb5565b60405180910390fd5b612fdc3385856111e8565b612fe7858585611c49565b7f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc443386868660405161301c9493929190614bad565b60405180910390a15050505050565b60011515811515146130db57816000600201846000015160648110613079577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460200151606481106130ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010160008282546130d09190615097565b92505081905561317b565b81600060020184600001516064811061311d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020184602001516064811061315e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010160008282546131749190615041565b9250508190555b50505050565b613189613aa6565b6000617534016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561326a57602002820191906000526020600020905b815481526020019060010190808311613256575b50505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156132c257602002820191906000526020600020905b8154815260200190600101908083116132ae575b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561331a57602002820191906000526020600020905b815481526020019060010190808311613306575b5050505050815250509050919050565b8060006175420160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461337d9190615041565b925050819055505050565b613390613bb2565b60008061753f0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff81111561341c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561344a5781602001602082028036833780820191505090505b50905060005b8281101561358f5760008061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106134d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600061753d0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008281526020019081526020016000205483838151811061356f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050508080613587906151bc565b915050613450565b506040518060400160405280600061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561362857602002820191906000526020600020905b815481526020019060010190808311613614575b505050505081526020018281525092505050919050565b600080600201826000015160648110613681577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260200151606481106136c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490509050919050565b6000806136e08361363f565b90506000600201836000015160648110613723577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110613764577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002016001826137789190615097565b815481106137af577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154915050919050565b806138285781600061753c0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461381d9190615097565b925050819055613885565b81600061753c0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461387e9190615041565b9250508190555b50505050565b613893613b98565b6000806138a58460006001015461392a565b915091506000806138bb86600060010154613987565b915091508315806138ca575081155b1561390a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161390190614cd5565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b60008060008314156139425760008091509150613980565b600183858161397a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b600080600083141561399f57600080915091506139dd565b60018385816139d7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b828054828255906000526020600020908101928215613a20579160200282015b82811115613a1f578251825591602001919060010190613a04565b5b509050613a2d9190613bcc565b5090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b6040518060e0016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001613b4d613b98565b81525090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b5b80821115613be5576000816000905550600101613bcd565b5090565b6000613bfc613bf784614f01565b614edc565b90508083825260208201905082856020860282011115613c1b57600080fd5b60005b85811015613c4b5781613c318882613f1e565b845260208401935060208301925050600181019050613c1e565b5050509392505050565b6000613c68613c6384614f2d565b614edc565b905082815260208101848484011115613c8057600080fd5b613c8b848285615149565b509392505050565b600081359050613ca28161534b565b92915050565b600082601f830112613cb957600080fd5b8135613cc9848260208601613be9565b91505092915050565b600081359050613ce181615362565b92915050565b600081359050613cf681615379565b92915050565b600082601f830112613d0d57600080fd5b8135613d1d848260208601613c55565b91505092915050565b60006101208284031215613d3957600080fd5b613d44610120614edc565b90506000613d5484828501613cd2565b6000830152506020613d6884828501613cd2565b6020830152506040613d7c84828501613cd2565b6040830152506060613d9084828501613f1e565b6060830152506080613da484828501613f1e565b60808301525060a0613db884828501613f1e565b60a08301525060c082013567ffffffffffffffff811115613dd857600080fd5b613de484828501613ca8565b60c08301525060e082013567ffffffffffffffff811115613e0457600080fd5b613e1084828501613ca8565b60e08301525061010082013567ffffffffffffffff811115613e3157600080fd5b613e3d84828501613ca8565b6101008301525092915050565b600060408284031215613e5c57600080fd5b613e666040614edc565b90506000613e7684828501613f1e565b6000830152506020613e8a84828501613f1e565b60208301525092915050565b600060a08284031215613ea857600080fd5b613eb260a0614edc565b90506000613ec284828501613f1e565b6000830152506020613ed684828501613f1e565b6020830152506040613eea84828501613f1e565b6040830152506060613efe84828501613f1e565b6060830152506080613f1284828501613c93565b60808301525092915050565b600081359050613f2d81615390565b92915050565b600081519050613f4281615390565b92915050565b600060208284031215613f5a57600080fd5b6000613f6884828501613c93565b91505092915050565b60008060408385031215613f8457600080fd5b6000613f9285828601613c93565b9250506020613fa385828601613c93565b9150509250929050565b60008060608385031215613fc057600080fd5b6000613fce85828601613c93565b9250506020613fdf85828601613e4a565b9150509250929050565b60008060408385031215613ffc57600080fd5b600061400a85828601613c93565b925050602061401b85828601613f1e565b9150509250929050565b60008060006060848603121561403a57600080fd5b600061404886828701613c93565b935050602061405986828701613f1e565b925050604061406a86828701613cd2565b9150509250925092565b60008060006060848603121561408957600080fd5b600061409786828701613c93565b93505060206140a886828701613f1e565b92505060406140b986828701613f1e565b9150509250925092565b6000602082840312156140d557600080fd5b60006140e384828501613ce7565b91505092915050565b6000602082840312156140fe57600080fd5b600082013567ffffffffffffffff81111561411857600080fd5b61412484828501613cfc565b91505092915050565b6000806040838503121561414057600080fd5b600083013567ffffffffffffffff81111561415a57600080fd5b61416685828601613cfc565b925050602061417785828601613c93565b9150509250929050565b60008060c0838503121561419457600080fd5b600083013567ffffffffffffffff8111156141ae57600080fd5b6141ba85828601613cfc565b92505060206141cb85828601613e96565b9150509250929050565b600080604083850312156141e857600080fd5b600083013567ffffffffffffffff81111561420257600080fd5b61420e85828601613cfc565b925050602061421f85828601613f1e565b9150509250929050565b60006040828403121561423b57600080fd5b600061424984828501613e4a565b91505092915050565b6000806060838503121561426557600080fd5b600061427385828601613e4a565b925050604083013567ffffffffffffffff81111561429057600080fd5b61429c85828601613ca8565b9150509250929050565b600080600060a084860312156142bb57600080fd5b60006142c986828701613e4a565b93505060406142da86828701613e4a565b92505060806142eb86828701613f1e565b9150509250925092565b6000806060838503121561430857600080fd5b600061431685828601613e4a565b925050604061432785828601613f1e565b9150509250929050565b60008060006080848603121561434657600080fd5b600061435486828701613e4a565b935050604061436586828701613f1e565b925050606061437686828701613cd2565b9150509250925092565b60006020828403121561439257600080fd5b60006143a084828501613f1e565b91505092915050565b6000602082840312156143bb57600080fd5b60006143c984828501613f33565b91505092915050565b600080604083850312156143e557600080fd5b60006143f385828601613f1e565b925050602083013567ffffffffffffffff81111561441057600080fd5b61441c85828601613d26565b9150509250929050565b600080600080600080600060e0888a03121561444157600080fd5b600061444f8a828b01613f1e565b97505060206144608a828b01613f1e565b96505060406144718a828b01613f1e565b95505060606144828a828b01613f1e565b94505060806144938a828b01613f1e565b93505060a06144a48a828b01613f1e565b92505060c06144b58a828b01613f1e565b91505092959891949750929550565b60006144d08383614508565b60208301905092915050565b60006144e883836149ff565b905092915050565b60006144fc8383614b1a565b60208301905092915050565b614511816150cb565b82525050565b614520816150cb565b82525050565b600061453182614f8e565b61453b8185614fe1565b935061454683614f5e565b8060005b8381101561457757815161455e88826144c4565b975061456983614fba565b92505060018101905061454a565b5085935050505092915050565b600061458f82614f99565b6145998185614ff2565b9350836020820285016145ab85614f6e565b8060005b858110156145e757848403895281516145c885826144dc565b94506145d383614fc7565b925060208a019950506001810190506145af565b50829750879550505050505092915050565b600061460482614fa4565b61460e8185615003565b935061461983614f7e565b8060005b8381101561464a57815161463188826144f0565b975061463c83614fd4565b92505060018101905061461d565b5085935050505092915050565b600061466282614fa4565b61466c8185615014565b935061467783614f7e565b8060005b838110156146a857815161468f88826144f0565b975061469a83614fd4565b92505060018101905061467b565b5085935050505092915050565b6146be816150dd565b82525050565b6146cd816150dd565b82525050565b6146dc81615125565b82525050565b60006146ed82614faf565b6146f78185615025565b9350614707818560208601615158565b6147108161526d565b840191505092915050565b600061472682614faf565b6147308185615036565b9350614740818560208601615158565b80840191505092915050565b6000614759601483615025565b91506147648261527e565b602082019050919050565b600061477c601a83615025565b9150614787826152a7565b602082019050919050565b600061479f601983615025565b91506147aa826152d0565b602082019050919050565b60006147c2601683615025565b91506147cd826152f9565b602082019050919050565b60006147e5602083615025565b91506147f082615322565b602082019050919050565b60006101208301600083015161481460008601826146b5565b50602083015161482760208601826146b5565b50604083015161483a60408601826146b5565b50606083015161484d6060860182614b1a565b5060808301516148606080860182614b1a565b5060a083015161487360a0860182614b1a565b5060c083015184820360c086015261488b82826145f9565b91505060e083015184820360e08601526148a582826145f9565b9150506101008301518482036101008601526148c182826145f9565b9150508091505092915050565b610100820160008201516148e560008501826146b5565b5060208201516148f86020850182614b1a565b50604082015161490b6040850182614508565b50606082015161491e6060850182614b1a565b5060808201516149316080850182614b1a565b5060a082015161494460a0850182614b1a565b5060c082015161495760c085018261495d565b50505050565b6040820160008201516149736000850182614b1a565b5060208201516149866020850182614b1a565b50505050565b6040820160008201516149a26000850182614b1a565b5060208201516149b56020850182614b1a565b50505050565b600060408301600083015184820360008601526149d882826145f9565b915050602083015184820360208601526149f282826145f9565b9150508091505092915050565b6000608083016000830151614a176000860182614508565b5060208301518482036020860152614a2f82826145f9565b9150506040830151614a446040860182614b1a565b506060830151614a576060860182614b1a565b508091505092915050565b6000606083016000830151614a7a6000860182614508565b506020830151614a8d6020860182614b1a565b5060408301518482036040860152614aa582826145f9565b9150508091505092915050565b60a082016000820151614ac86000850182614b1a565b506020820151614adb6020850182614b1a565b506040820151614aee6040850182614b1a565b506060820151614b016060850182614b1a565b506080820151614b146080850182614508565b50505050565b614b238161511b565b82525050565b614b328161511b565b82525050565b614b49614b448261511b565b615205565b82525050565b6000614b5b828461471b565b915081905092915050565b6000614b728285614b38565b602082019150614b828284614b38565b6020820191508190509392505050565b6000602082019050614ba76000830184614517565b92915050565b6000608082019050614bc26000830187614517565b614bcf6020830186614517565b614bdc6040830185614b29565b614be96060830184614b29565b95945050505050565b60006020820190508181036000830152614c0c8184614526565b905092915050565b60006020820190508181036000830152614c2e8184614584565b905092915050565b60006020820190508181036000830152614c508184614657565b905092915050565b6000602082019050614c6d60008301846146c4565b92915050565b60006020820190508181036000830152614c8d81846146e2565b905092915050565b60006020820190508181036000830152614cae8161474c565b9050919050565b60006020820190508181036000830152614cce8161476f565b9050919050565b60006020820190508181036000830152614cee81614792565b9050919050565b60006020820190508181036000830152614d0e816147b5565b9050919050565b60006020820190508181036000830152614d2e816147d8565b9050919050565b60006020820190508181036000830152614d4f81846147fb565b905092915050565b600061010082019050614d6d60008301846148ce565b92915050565b6000604082019050614d88600083018461498c565b92915050565b60006020820190508181036000830152614da881846149bb565b905092915050565b60006020820190508181036000830152614dca8184614a62565b905092915050565b600060a082019050614de76000830184614ab2565b92915050565b6000602082019050614e026000830184614b29565b92915050565b6000604082019050614e1d6000830185614b29565b614e2a6020830184614b29565b9392505050565b600061016082019050614e47600083018e614b29565b614e54602083018d614b29565b614e61604083018c614517565b614e6e606083018b6146c4565b614e7b608083018a614b29565b614e8860a0830189614b29565b614e9560c0830188614b29565b614ea260e0830187614b29565b614eb0610100830186614b29565b614ebe610120830185614b29565b614ecc6101408301846146d3565b9c9b505050505050505050505050565b6000614ee6614ef7565b9050614ef2828261518b565b919050565b6000604051905090565b600067ffffffffffffffff821115614f1c57614f1b61523e565b5b602082029050602081019050919050565b600067ffffffffffffffff821115614f4857614f4761523e565b5b614f518261526d565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061504c8261511b565b91506150578361511b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561508c5761508b61520f565b5b828201905092915050565b60006150a28261511b565b91506150ad8361511b565b9250828210156150c0576150bf61520f565b5b828203905092915050565b60006150d6826150fb565b9050919050565b60008115159050919050565b60006150f4826150cb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061513082615137565b9050919050565b6000615142826150fb565b9050919050565b82818337600083830152505050565b60005b8381101561517657808201518184015260208101905061515b565b83811115615185576000848401525b50505050565b6151948261526d565b810181811067ffffffffffffffff821117156151b3576151b261523e565b5b80604052505050565b60006151c78261511b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156151fa576151f961520f565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f73746f726167652f726563697069656e742d73616d652d61732d73656e646572600082015250565b615354816150cb565b811461535f57600080fd5b50565b61536b816150dd565b811461537657600080fd5b50565b615382816150e9565b811461538d57600080fd5b50565b6153998161511b565b81146153a457600080fd5b5056fea2646970667358221220bc413d479d898d10e97f0d0824bd01bd7d7d34b0552ee13dd88d64887280519a64736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
