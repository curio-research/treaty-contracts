/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_towerId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_towerId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "StakeTower",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_towerId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "UnstakeTower",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
    ],
    name: "_decreaseTopLevelStrengthAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "_encodePos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getTopLevelStrengthAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "contract Epoch",
        name: "epochController",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "moveRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Epoch",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setEpochController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613881806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80638bce7fab1161011a578063ad7c6cdc116100ad578063decd589c1161007c578063decd589c14610650578063e4c451e914610680578063f095277c146106b0578063f17dd707146106e0578063fad86c3c146106fc576101fb565b8063ad7c6cdc146105a4578063be565940146105d4578063be947ce014610604578063dc8afb6314610634576101fb565b8063a54b6e99116100e9578063a54b6e9914610520578063a93edcf914610550578063aae1eeac1461056c578063ac70cc7914610588576101fb565b80638bce7fab14610472578063908b9f17146104905780639889c321146104c05780639bb1e204146104f0576101fb565b80635923b9a4116101925780635de24e18116101615780635de24e18146103cd57806379564688146103fd578063801b83db1461041957806386b714e214610449576101fb565b80635923b9a4146103355780635a9c0644146103655780635d2f8585146103815780635d7d8041146103b1576101fb565b80633f4105fc116101ce5780633f4105fc14610289578063487d2080146102b957806348c5a716146102d55780634a4e51b314610305576101fb565b806306ae3d02146102005780631ccd4c151461021c5780632c190c621461024c5780633f261e071461026b575b600080fd5b61021a60048036038101906102159190612b81565b61072c565b005b61023660048036038101906102319190612965565b6108d9565b604051610243919061330a565b60405180910390f35b610254610937565b604051610262929190613325565b60405180910390f35b61027361094d565b604051610280919061316e565b60405180910390f35b6102a3600480360381019061029e9190612b45565b6109df565b6040516102b0919061330a565b60405180910390f35b6102d360048036038101906102ce91906129f0565b610a6d565b005b6102ef60048036038101906102ea9190612929565b610b45565b6040516102fc91906131b2565b60405180910390f35b61031f600480360381019061031a9190612a91565b610b8d565b60405161032c91906131b2565b60405180910390f35b61034f600480360381019061034a9190612b45565b610c2d565b60405161035c919061330a565b60405180910390f35b61037f600480360381019061037a9190612a3f565b610d15565b005b61039b60048036038101906103969190612b45565b610d5d565b6040516103a89190613190565b60405180910390f35b6103cb60048036038101906103c69190612b45565b611040565b005b6103e760048036038101906103e29190612a68565b611332565b6040516103f491906131cd565b60405180910390f35b610417600480360381019061041291906129f0565b611365565b005b610433600480360381019061042e9190612ae0565b6113e0565b604051610440919061328f565b60405180910390f35b610451611589565b6040516104699c9b9a9998979695949392919061334e565b60405180910390f35b61047a61162e565b604051610487919061330a565b60405180910390f35b6104aa60048036038101906104a59190612900565b61163b565b6040516104b791906132b1565b60405180910390f35b6104da60048036038101906104d59190612ae0565b611775565b6040516104e791906131b2565b60405180910390f35b61050a60048036038101906105059190612b45565b6117a5565b604051610517919061330a565b60405180910390f35b61053a600480360381019061053591906129f0565b611830565b60405161054791906131b2565b60405180910390f35b61056a600480360381019061056591906129f0565b6118e7565b005b61058660048036038101906105819190612b09565b611988565b005b6105a2600480360381019061059d91906129f0565b611b9d565b005b6105be60048036038101906105b99190612b45565b611c62565b6040516105cb9190613153565b60405180910390f35b6105ee60048036038101906105e99190612900565b611d0d565b6040516105fb91906132cd565b60405180910390f35b61061e60048036038101906106199190612b81565b611d81565b60405161062b919061330a565b60405180910390f35b61064e600480360381019061064991906129f0565b611f15565b005b61066a60048036038101906106659190612b81565b612052565b604051610677919061330a565b60405180910390f35b61069a60048036038101906106959190612b45565b612177565b6040516106a791906131b2565b60405180910390f35b6106ca60048036038101906106c59190612900565b61225e565b6040516106d791906132e8565b60405180910390f35b6106fa60048036038101906106f591906129a1565b612515565b005b61071660048036038101906107119190612ae0565b6125de565b60405161072391906132cd565b60405180910390f35b600080600201846064811061076a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020183606481106107a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001019050600181805490501061080a5781816000815481106107f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550610833565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b6000617535016000838152602001908152602001600020600101546000600201856064811061088b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020184606481106108c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018190555050505050565b60008061753f0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6000806000800154600060010154915091509091565b6060600061753d018054806020026020016040519081016040528092919081815260200182805480156109d557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161098b575b5050505050905090565b6000806002018360648110610a1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260648110610a5a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010180549050905092915050565b80600061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610ad1919061354a565b9250508190555060008061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541415610b4057610b3f826000611988565b5b505050565b600080610b5184611d0d565b90506000610b5e84611d0d565b9050610b71828260006175380154610b8d565b610b8057600092505050610b87565b6001925050505b92915050565b600080836000015185600001511015610bb95784600001518460000151610bb4919061354a565b610bce565b83600001518560000151610bcd919061354a565b5b90506000846020015186602001511015610bfb5785602001518560200151610bf6919061354a565b610c10565b84602001518660200151610c0f919061354a565b5b9050838211158015610c225750838111155b925050509392505050565b600080610c3a84846109df565b905060006002018460648110610c79577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610cb6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101600182610cca919061354a565b81548110610d01577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015491505092915050565b8060006175330160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000606467ffffffffffffffff811115610da2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610ddb57816020015b610dc8612737565b815260200190600190039081610dc05790505b5090506000808590505b600a86610df291906134f4565b8110156110345760008590505b600a86610e0c91906134f4565b81101561102057604051806080016040528060006002018460648110610e5b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610e98577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160006002018460648110610f18577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610f55577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101805480602002602001604051908101604052809291908181526020018280548015610fa657602002820191906000526020600020905b815481526020019060010190808311610f92575b5050505050815260200183815260200182815250848481518110610ff3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018361100b91906134f4565b9250808061101890613660565b915050610dff565b50808061102c90613660565b915050610de5565b50819250505092915050565b6000600201826064811061107d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020181606481106110ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018054806110f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60019003818190600052602060002001600090559055600061111983836109df565b905060008111156112a6576000806002018460648110611162577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836064811061119f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010160016111b286866109df565b6111bc919061354a565b815481106111f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905060006175350160008281526020019081526020016000206001015460006002018560648110611258577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460648110611295577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201819055505061132d565b60008060020184606481106112e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611321577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201819055505b505050565b60608160000151826020015160405160200161134f929190613127565b6040516020818303038152906040529050919050565b611370826001611988565b80600061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546113d491906134f4565b92505081905550505050565b6113e8612775565b6000617535016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482018054806020026020016040519081016040528092919081815260200182805480156114c957602002820191906000526020600020905b8154815260200190600101908083116114b5575b505050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561152157602002820191906000526020600020905b81548152602001906001019080831161150d575b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561157957602002820191906000526020600020905b815481526020019060010190808311611565575b5050505050815250509050919050565b6000806000015490806001015490806175320160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175320160149054906101000a900460ff1690806175330160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175360154908061753701549080617538015490806175390154908061753a0154908061753b0154908061753c015490508c565b6000806175360154905090565b6116436127c7565b600061753e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b60008061753401600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b60008060020183606481106117e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260648110611820577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020154905092915050565b60008061183c85611d0d565b90506000806000015485108015611857575060006001015484105b8015611864575060008510155b8015611871575060008410155b905080611883576000925050506118e0565b600060405180604001604052808781526020018681525090506118ad818460006175370154610b8d565b6118bd57600093505050506118e0565b6118c78686612177565b156118d857600093505050506118e0565b600193505050505b9392505050565b81600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006016000018190555080600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160010181905550505050565b60008060005b60006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611a84578460006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611a58577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001541415611a7157809250600191505b8080611a7c90613660565b91505061198e565b5082611b1f578015611b1a5760006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611b0b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b611b97565b8215611b965780611b955760006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b8260006002018360648110611bdb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260648110611c18577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000806002018360648110611ca0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260648110611cdd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b611d1561282c565b600061753e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601604051806040016040529081600082015481526020016001820154815250509050919050565b6000806002018460648110611dbf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611dfc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101805490508210611e48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e3f9061324f565b60405180910390fd5b60006002018460648110611e85577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611ec2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018281548110611f01577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490509392505050565b6000611f2033611d0d565b90506000611f2d85611d0d565b90508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611f9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f959061326f565b60405180910390fd5b611faa82826005610b8d565b611fe9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fe0906131ef565b60405180910390fd5b82611ff433866108d9565b1015612035576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161202c9061320f565b60405180910390fd5b612040338585610a6d565b61204b858585611365565b5050505050565b60008160006002018560648110612092577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020184606481106120cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020160008282546120e5919061354a565b9250508190555060006002018460648110612129577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110612166577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002015490509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff1661219a8484611c62565b73ffffffffffffffffffffffffffffffffffffffff16146121be5760019050612258565b60008060020184606481106121fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110612239577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018054905011156122535760019050612258565b600090505b92915050565b612266612846565b6000806175410160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff8111156122f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156123205781602001602082028036833780820191505090505b50905060005b82811015612465576000806175410160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106123aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002054838381518110612445577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505050808061245d90613660565b915050612326565b50604051806040016040528060006175410160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156124fe57602002820191906000526020600020905b8154815260200190600101908083116124ea575b505050505081526020018281525092505050919050565b8061257b5781600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254612570919061354a565b9250508190556125d8565b81600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546125d191906134f4565b9250508190555b50505050565b6125e661282c565b6000806125f88460006001015461267d565b9150915060008061260e866000600101546126da565b9150915083158061261d575081155b1561265d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126549061322f565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b600080600083141561269557600080915091506126d3565b60018385816126cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b60008060008314156126f25760008091509150612730565b600183858161272a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b60405180610100016040528060001515815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200161282661282c565b81525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b60008135905061286f816137ef565b92915050565b60008135905061288481613806565b92915050565b6000813590506128998161381d565b92915050565b6000604082840312156128b157600080fd5b6128bb6040613408565b905060006128cb848285016128eb565b60008301525060206128df848285016128eb565b60208301525092915050565b6000813590506128fa81613834565b92915050565b60006020828403121561291257600080fd5b600061292084828501612860565b91505092915050565b6000806040838503121561293c57600080fd5b600061294a85828601612860565b925050602061295b85828601612860565b9150509250929050565b6000806040838503121561297857600080fd5b600061298685828601612860565b9250506020612997858286016128eb565b9150509250929050565b6000806000606084860312156129b657600080fd5b60006129c486828701612860565b93505060206129d5868287016128eb565b92505060406129e686828701612875565b9150509250925092565b600080600060608486031215612a0557600080fd5b6000612a1386828701612860565b9350506020612a24868287016128eb565b9250506040612a35868287016128eb565b9150509250925092565b600060208284031215612a5157600080fd5b6000612a5f8482850161288a565b91505092915050565b600060408284031215612a7a57600080fd5b6000612a888482850161289f565b91505092915050565b600080600060a08486031215612aa657600080fd5b6000612ab48682870161289f565b9350506040612ac58682870161289f565b9250506080612ad6868287016128eb565b9150509250925092565b600060208284031215612af257600080fd5b6000612b00848285016128eb565b91505092915050565b60008060408385031215612b1c57600080fd5b6000612b2a858286016128eb565b9250506020612b3b85828601612875565b9150509250929050565b60008060408385031215612b5857600080fd5b6000612b66858286016128eb565b9250506020612b77858286016128eb565b9150509250929050565b600080600060608486031215612b9657600080fd5b6000612ba4868287016128eb565b9350506020612bb5868287016128eb565b9250506040612bc6868287016128eb565b9150509250925092565b6000612bdc8383612c14565b60208301905092915050565b6000612bf4838361308f565b905092915050565b6000612c0883836130f2565b60208301905092915050565b612c1d8161357e565b82525050565b612c2c8161357e565b82525050565b6000612c3d8261345d565b612c4781856134b0565b9350612c528361342d565b8060005b83811015612c83578151612c6a8882612bd0565b9750612c7583613489565b925050600181019050612c56565b5085935050505092915050565b6000612c9b82613468565b612ca581856134c1565b935083602082028501612cb78561343d565b8060005b85811015612cf35784840389528151612cd48582612be8565b9450612cdf83613496565b925060208a01995050600181019050612cbb565b50829750879550505050505092915050565b6000612d1082613473565b612d1a81856134d2565b9350612d258361344d565b8060005b83811015612d56578151612d3d8882612bfc565b9750612d48836134a3565b925050600181019050612d29565b5085935050505092915050565b612d6c81613590565b82525050565b612d7b81613590565b82525050565b612d8a816135d8565b82525050565b6000612d9b8261347e565b612da581856134e3565b9350612db58185602086016135fc565b612dbe81613711565b840191505092915050565b6000612dd66014836134e3565b9150612de182613722565b602082019050919050565b6000612df9601a836134e3565b9150612e048261374b565b602082019050919050565b6000612e1c6019836134e3565b9150612e2782613774565b602082019050919050565b6000612e3f6016836134e3565b9150612e4a8261379d565b602082019050919050565b6000612e626020836134e3565b9150612e6d826137c6565b602082019050919050565b600061012083016000830151612e916000860182612d63565b506020830151612ea46020860182612d63565b506040830151612eb76040860182612d63565b506060830151612eca60608601826130f2565b506080830151612edd60808601826130f2565b5060a0830151612ef060a08601826130f2565b5060c083015184820360c0860152612f088282612d05565b91505060e083015184820360e0860152612f228282612d05565b915050610100830151848203610100860152612f3e8282612d05565b9150508091505092915050565b61012082016000820151612f626000850182612d63565b506020820151612f756020850182612d63565b506040820151612f8860408501826130f2565b506060820151612f9b6060850182612c14565b506080820151612fae60808501826130f2565b5060a0820151612fc160a08501826130f2565b5060c0820151612fd460c08501826130f2565b5060e0820151612fe760e0850182612fed565b50505050565b60408201600082015161300360008501826130f2565b50602082015161301660208501826130f2565b50505050565b60408201600082015161303260008501826130f2565b50602082015161304560208501826130f2565b50505050565b600060408301600083015184820360008601526130688282612d05565b915050602083015184820360208601526130828282612d05565b9150508091505092915050565b60006080830160008301516130a76000860182612c14565b50602083015184820360208601526130bf8282612d05565b91505060408301516130d460408601826130f2565b5060608301516130e760608601826130f2565b508091505092915050565b6130fb816135ce565b82525050565b61310a816135ce565b82525050565b61312161311c826135ce565b6136a9565b82525050565b60006131338285613110565b6020820191506131438284613110565b6020820191508190509392505050565b60006020820190506131686000830184612c23565b92915050565b600060208201905081810360008301526131888184612c32565b905092915050565b600060208201905081810360008301526131aa8184612c90565b905092915050565b60006020820190506131c76000830184612d72565b92915050565b600060208201905081810360008301526131e78184612d90565b905092915050565b6000602082019050818103600083015261320881612dc9565b9050919050565b6000602082019050818103600083015261322881612dec565b9050919050565b6000602082019050818103600083015261324881612e0f565b9050919050565b6000602082019050818103600083015261326881612e32565b9050919050565b6000602082019050818103600083015261328881612e55565b9050919050565b600060208201905081810360008301526132a98184612e78565b905092915050565b6000610120820190506132c76000830184612f4b565b92915050565b60006040820190506132e2600083018461301c565b92915050565b60006020820190508181036000830152613302818461304b565b905092915050565b600060208201905061331f6000830184613101565b92915050565b600060408201905061333a6000830185613101565b6133476020830184613101565b9392505050565b600061018082019050613364600083018f613101565b613371602083018e613101565b61337e604083018d612c23565b61338b606083018c612d72565b613398608083018b612d81565b6133a560a083018a613101565b6133b260c0830189613101565b6133bf60e0830188613101565b6133cd610100830187613101565b6133db610120830186613101565b6133e9610140830185613101565b6133f7610160830184613101565b9d9c50505050505050505050505050565b6000613412613423565b905061341e828261362f565b919050565b6000604051905090565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006134ff826135ce565b915061350a836135ce565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561353f5761353e6136b3565b5b828201905092915050565b6000613555826135ce565b9150613560836135ce565b925082821015613573576135726136b3565b5b828203905092915050565b6000613589826135ae565b9050919050565b60008115159050919050565b60006135a78261357e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006135e3826135ea565b9050919050565b60006135f5826135ae565b9050919050565b60005b8381101561361a5780820151818401526020810190506135ff565b83811115613629576000848401525b50505050565b61363882613711565b810181811067ffffffffffffffff82111715613657576136566136e2565b5b80604052505050565b600061366b826135ce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561369e5761369d6136b3565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f73746f726167652f726563697069656e742d73616d652d61732d73656e646572600082015250565b6137f88161357e565b811461380357600080fd5b50565b61380f81613590565b811461381a57600080fd5b50565b6138268161359c565b811461383157600080fd5b50565b61383d816135ce565b811461384857600080fd5b5056fea2646970667358221220b6e5f52b265eba94490c779f3aed76d2c29deca11443cfa5a0fa947e545348e864736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
