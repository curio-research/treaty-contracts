/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_materialIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "_addItemMaterialAndAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_blockAtLocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_checkLevel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseEnergy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_die",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "a",
            type: "address",
          },
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isInitialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getBlockAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "materialIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "materialAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseEnergy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_mineBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_placeBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_playerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_removeItemMaterialAndAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setOccupierAtLocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "WORLD_WIDTH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "WORLD_HEIGHT",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "moveRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612506806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638cf4e61a11610104578063a24ce62f116100a2578063b8afe4be11610071578063b8afe4be14610564578063dc8afb6314610594578063e4c451e9146105b0578063f321da3b146105e0576101cf565b8063a24ce62f146104b8578063a54b6e99146104e8578063a93edcf914610518578063ad7c6cdc14610534576101cf565b80639667b4c3116100de5780639667b4c3146104345780639889c321146104505780639b6d903a146104805780639cdc08d81461049c576101cf565b80638cf4e61a146103b8578063908b9f17146103e857806395c8929e14610418576101cf565b806348c5a716116101715780637dfe27c61161014b5780637dfe27c61461032a578063801b83db1461034657806386b714e2146103765780638bce7fab1461039a576101cf565b806348c5a716146102c257806367f98b59146102f2578063795646881461030e576101cf565b80633f261e07116101ad5780633f261e0714610250578063425261751461026e578063485a53091461028a578063487d2080146102a6576101cf565b806302e8af84146101d45780631e9eb73b146101f0578063267b52c714610220575b600080fd5b6101ee60048036038101906101e99190611b40565b6105fc565b005b61020a60048036038101906102059190611b40565b61065e565b6040516102179190612083565b60405180910390f35b61023a60048036038101906102359190611b40565b6106ca565b6040516102479190612137565b60405180910390f35b610258610729565b6040516102659190612061565b60405180910390f35b61028860048036038101906102839190611b40565b6107bc565b005b6102a4600480360381019061029f9190611b40565b61081e565b005b6102c060048036038101906102bb9190611b7c565b610880565b005b6102dc60048036038101906102d79190611b04565b6108f1565b6040516102e99190612083565b60405180910390f35b61030c60048036038101906103079190611bf4565b6109b5565b005b61032860048036038101906103239190611b7c565b610ada565b005b610344600480360381019061033f9190611caf565b610b4b565b005b610360600480360381019061035b9190611bcb565b610be9565b60405161036d91906120de565b60405180910390f35b61037e610e15565b6040516103919796959493929190612152565b60405180910390f35b6103a2610e7c565b6040516103af9190612137565b60405180910390f35b6103d260048036038101906103cd9190611adb565b610e8a565b6040516103df919061211c565b60405180910390f35b61040260048036038101906103fd9190611adb565b610eff565b60405161040f9190612100565b60405180910390f35b610432600480360381019061042d9190611caf565b61103a565b005b61044e60048036038101906104499190611adb565b6110d9565b005b61046a60048036038101906104659190611bcb565b61126f565b6040516104779190612083565b60405180910390f35b61049a60048036038101906104959190611b7c565b6112a0565b005b6104b660048036038101906104b19190611b40565b611367565b005b6104d260048036038101906104cd9190611cfe565b6113c9565b6040516104df9190612083565b60405180910390f35b61050260048036038101906104fd9190611b7c565b611441565b60405161050f9190612083565b60405180910390f35b610532600480360381019061052d9190611b7c565b6114e7565b005b61054e60048036038101906105499190611c73565b61158a565b60405161055b9190612046565b60405180910390f35b61057e60048036038101906105799190611caf565b611637565b60405161058b9190612137565b60405180910390f35b6105ae60048036038101906105a99190611b7c565b6116d6565b005b6105ca60048036038101906105c59190611c73565b6117b6565b6040516105d79190612083565b60405180910390f35b6105fa60048036038101906105f59190611bcb565b611809565b005b806000621e848d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825461065391906122eb565b925050819055505050565b600080621e8486016000838152602001908152602001600020546000621e848d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601541015905092915050565b600080621e848e0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60606000621e848a018054806020026020016040519081016040528092919081815260200182805480156107b257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610768575b5050505050905090565b806000621e848d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160008282546108139190612295565b925050819055505050565b806000621e848d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501600082825461087591906122eb565b925050819055505050565b806000621e848e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546108e591906122eb565b92505081905550505050565b6000806108fd84610e8a565b9050600061090a84610e8a565b9050600080621e84900160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506005814261096291906122eb565b1161097357600093505050506109af565b61099783600001518460200151846000015185602001516000621e848901546113c9565b6109a757600093505050506109af565b600193505050505b92915050565b816000621e848401600085815260200190815260200160002090805190602001906109e19291906118f7565b5060005b8251811015610ab5576000838281518110610a29577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050828281518110610a6c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516000621e8485016000878152602001908152602001600020600083815260200190815260200160002081905550508080610aad90612398565b9150506109e5565b5060016000621e8487016000828254610ace9190612295565b92505081905550505050565b806000621e848e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610b3f9190612295565b92505081905550505050565b600080600201846103e88110610b8a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201836103e88110610bc8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101600083815260200190815260200160002081905550505050565b610bf1611944565b600080621e848401600084815260200190815260200160002080549050905060008167ffffffffffffffff811115610c52577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610c805781602001602082028036833780820191505090505b50905060005b6000621e848401600086815260200190815260200160002080549050811015610d8a57600080621e84840160008781526020019081526020016000208281548110610cfa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490506000621e8485016000878152602001908152602001600020600082815260200190815260200160002054838381518110610d6a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050508080610d8290612398565b915050610c86565b50600060405180604001604052806000621e8484016000888152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610dfa57602002820191906000526020600020905b815481526020019060010190808311610de6575b50505050508152602001838152509050809350505050919050565b600080600001549080600101549080621e84820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080621e84820160149054906101000a900460ff169080621e848701549080621e848801549080621e84890154905087565b600080621e84870154905090565b610e9261195e565b6000621e848d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201604051806040016040529081600082015481526020016001820154815250509050919050565b610f07611978565b6000621e848d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff161515151581526020016000820160159054906101000a900460ff16151515158152602001600182015481526020016002820160405180604001604052908160008201548152602001600182015481525050815260200160048201548152602001600582015481526020016006820154815250509050919050565b806000600201846103e88110611079577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201836103e881106110b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160010160006001815260200190815260200160002081905550505050565b600080621e848d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff021916908315150217905550600080621e848d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160405180604001604052908160008201548152602001600182015481525050905060008060020182600001516103e881106111e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d0020182602001516103e88110611226577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600080621e848301600083815260200190815260200160002060000160009054906101000a900460ff169050919050565b826000600201836103e881106112df577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201826103e8811061131d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b806000621e848d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008282546113be9190612295565b925050819055505050565b600080848710156113e55786856113e091906122eb565b6113f2565b84876113f191906122eb565b5b905060008487101561140f57868561140a91906122eb565b61141c565b848761141b91906122eb565b5b905060008483111580156114305750848211155b905080935050505095945050505050565b60008061144d85610e8a565b90506000806000015485108015611468575060006001015484105b8015611475575060008510155b8015611482575060008410155b905080611494576000925050506114e0565b6114b08585846000015185602001516000621e848801546113c9565b6114bf576000925050506114e0565b6114c985856117b6565b156114d9576000925050506114e0565b6001925050505b9392505050565b816000621e848d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160000181905550806000621e848d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160010181905550505050565b600080600201836103e881106115c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201826103e88110611607577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600080600201846103e88110611676577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201836103e881106116b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160010160008381526020019081526020016000205490509392505050565b60006116e133610e8a565b905060006116ee85610e8a565b905061170e826000015183602001518360000151846020015160056113c9565b61174d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117449061209e565b60405180910390fd5b8261175833866106ca565b1015611799576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611790906120be565b60405180910390fd5b6117a4338585610880565b6117af858585610ada565b5050505050565b60008073ffffffffffffffffffffffffffffffffffffffff166117d9848461158a565b73ffffffffffffffffffffffffffffffffffffffff1614156117fe5760009050611803565b600190505b92915050565b60005b6000621e8484016000838152602001908152602001600020805490508110156118cf57600080621e84840160008481526020019081526020016000208281548110611880577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600080621e84850160008581526020019081526020016000206000838152602001908152602001600020819055505080806118c790612398565b91505061180c565b506000621e848401600082815260200190815260200160002060006118f491906119dd565b50565b828054828255906000526020600020908101928215611933579160200282015b82811115611932578251825591602001919060010190611917565b5b50905061194091906119fe565b5090565b604051806040016040528060608152602001606081525090565b604051806040016040528060008152602001600081525090565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600015158152602001600081526020016119c261195e565b81526020016000815260200160008152602001600081525090565b50805460008255906000526020600020908101906119fb91906119fe565b50565b5b80821115611a175760008160009055506001016119ff565b5090565b6000611a2e611a29846121e6565b6121c1565b90508083825260208201905082856020860282011115611a4d57600080fd5b60005b85811015611a7d5781611a638882611ac6565b845260208401935060208301925050600181019050611a50565b5050509392505050565b600081359050611a96816124a2565b92915050565b600082601f830112611aad57600080fd5b8135611abd848260208601611a1b565b91505092915050565b600081359050611ad5816124b9565b92915050565b600060208284031215611aed57600080fd5b6000611afb84828501611a87565b91505092915050565b60008060408385031215611b1757600080fd5b6000611b2585828601611a87565b9250506020611b3685828601611a87565b9150509250929050565b60008060408385031215611b5357600080fd5b6000611b6185828601611a87565b9250506020611b7285828601611ac6565b9150509250929050565b600080600060608486031215611b9157600080fd5b6000611b9f86828701611a87565b9350506020611bb086828701611ac6565b9250506040611bc186828701611ac6565b9150509250925092565b600060208284031215611bdd57600080fd5b6000611beb84828501611ac6565b91505092915050565b600080600060608486031215611c0957600080fd5b6000611c1786828701611ac6565b935050602084013567ffffffffffffffff811115611c3457600080fd5b611c4086828701611a9c565b925050604084013567ffffffffffffffff811115611c5d57600080fd5b611c6986828701611a9c565b9150509250925092565b60008060408385031215611c8657600080fd5b6000611c9485828601611ac6565b9250506020611ca585828601611ac6565b9150509250929050565b600080600060608486031215611cc457600080fd5b6000611cd286828701611ac6565b9350506020611ce386828701611ac6565b9250506040611cf486828701611ac6565b9150509250925092565b600080600080600060a08688031215611d1657600080fd5b6000611d2488828901611ac6565b9550506020611d3588828901611ac6565b9450506040611d4688828901611ac6565b9350506060611d5788828901611ac6565b9250506080611d6888828901611ac6565b9150509295509295909350565b6000611d818383611da5565b60208301905092915050565b6000611d998383612028565b60208301905092915050565b611dae8161231f565b82525050565b611dbd8161231f565b82525050565b6000611dce82612232565b611dd88185612262565b9350611de383612212565b8060005b83811015611e14578151611dfb8882611d75565b9750611e0683612248565b925050600181019050611de7565b5085935050505092915050565b6000611e2c8261223d565b611e368185612273565b9350611e4183612222565b8060005b83811015611e72578151611e598882611d8d565b9750611e6483612255565b925050600181019050611e45565b5085935050505092915050565b611e8881612331565b82525050565b611e9781612331565b82525050565b6000611eaa601483612284565b9150611eb582612450565b602082019050919050565b6000611ecd601a83612284565b9150611ed882612479565b602082019050919050565b60006040830160008301518482036000860152611f008282611e21565b91505060208301518482036020860152611f1a8282611e21565b9150508091505092915050565b61012082016000820151611f3e6000850182611da5565b506020820151611f516020850182611e7f565b506040820151611f646040850182611e7f565b506060820151611f776060850182612028565b506080820151611f8a6080850182611fca565b5060a0820151611f9d60c0850182612028565b5060c0820151611fb060e0850182612028565b5060e0820151611fc4610100850182612028565b50505050565b604082016000820151611fe06000850182612028565b506020820151611ff36020850182612028565b50505050565b60408201600082015161200f6000850182612028565b5060208201516120226020850182612028565b50505050565b6120318161235d565b82525050565b6120408161235d565b82525050565b600060208201905061205b6000830184611db4565b92915050565b6000602082019050818103600083015261207b8184611dc3565b905092915050565b60006020820190506120986000830184611e8e565b92915050565b600060208201905081810360008301526120b781611e9d565b9050919050565b600060208201905081810360008301526120d781611ec0565b9050919050565b600060208201905081810360008301526120f88184611ee3565b905092915050565b6000610120820190506121166000830184611f27565b92915050565b60006040820190506121316000830184611ff9565b92915050565b600060208201905061214c6000830184612037565b92915050565b600060e082019050612167600083018a612037565b6121746020830189612037565b6121816040830188611db4565b61218e6060830187611e8e565b61219b6080830186612037565b6121a860a0830185612037565b6121b560c0830184612037565b98975050505050505050565b60006121cb6121dc565b90506121d78282612367565b919050565b6000604051905090565b600067ffffffffffffffff82111561220157612200612410565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006122a08261235d565b91506122ab8361235d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156122e0576122df6123e1565b5b828201905092915050565b60006122f68261235d565b91506123018361235d565b925082821015612314576123136123e1565b5b828203905092915050565b600061232a8261233d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6123708261243f565b810181811067ffffffffffffffff8211171561238f5761238e612410565b5b80604052505050565b60006123a38261235d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156123d6576123d56123e1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b6124ab8161231f565b81146124b657600080fd5b50565b6124c28161235d565b81146124cd57600080fd5b5056fea2646970667358221220babd37c58af2d6ec324a53f135c8da7c1f9f88f480e5800d38558ba578ed270a64736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
