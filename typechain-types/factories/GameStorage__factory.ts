/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_craftItemIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_craftItemAmounts",
        type: "uint256[]",
      },
    ],
    name: "_addCraftItemAndAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseEnergy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_die",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseEnergy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_removeCraftItemAndAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "moveRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506136cd806100206000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c80638bce7fab11610125578063ac70cc79116100ad578063dc8afb631161007c578063dc8afb6314610675578063e4c451e914610691578063e9cf5173146106c1578063f095277c146106dd578063fad86c3c1461070d57610211565b8063ac70cc79146105c9578063ad7c6cdc146105e5578063be56594014610615578063be947ce01461064557610211565b80639cdc08d8116100f45780639cdc08d814610515578063a24ce62f14610531578063a54b6e9914610561578063a93edcf914610591578063aae1eeac146105ad57610211565b80638bce7fab1461047b578063908b9f17146104995780639667b4c3146104c95780639889c321146104e557610211565b8063485a5309116101a85780635d2f8585116101775780635d2f8585146103bb5780635d7d8041146103eb5780637956468814610407578063801b83db1461042357806386b714e21461045357610211565b8063485a530914610323578063487d20801461033f57806348c5a7161461035b5780635923b9a41461038b57610211565b80632c190c62116101e45780632c190c621461029a5780633f261e07146102b95780633f4105fc146102d7578063425261751461030757610211565b806302e8af841461021657806306ae3d021461023257806316e1cc671461024e5780631ccd4c151461026a575b600080fd5b610230600480360381019061022b91906128a9565b61073d565b005b61024c60048036038101906102479190612a54565b61079e565b005b6102686004803603810190610263919061295d565b6108aa565b005b610284600480360381019061027f91906128a9565b6109a2565b60405161029191906131a8565b60405180910390f35b6102a2610a00565b6040516102b09291906131c3565b60405180910390f35b6102c1610a16565b6040516102ce919061302e565b60405180910390f35b6102f160048036038101906102ec9190612a18565b610aa8565b6040516102fe91906131a8565b60405180910390f35b610321600480360381019061031c91906128a9565b610b35565b005b61033d600480360381019061033891906128a9565b610b96565b005b610359600480360381019061035491906128e5565b610bf7565b005b6103756004803603810190610370919061286d565b610ccf565b6040516103829190613072565b60405180910390f35b6103a560048036038101906103a09190612a18565b610d96565b6040516103b291906131a8565b60405180910390f35b6103d560048036038101906103d09190612a18565b610e7d565b6040516103e29190613050565b60405180910390f35b61040560048036038101906104009190612a18565b61115e565b005b610421600480360381019061041c91906128e5565b61122e565b005b61043d60048036038101906104389190612934565b6112a9565b60405161044a919061312d565b60405180910390f35b61045b611452565b6040516104729b9a999897969594939291906131ec565b60405180910390f35b6104836114d0565b60405161049091906131a8565b60405180910390f35b6104b360048036038101906104ae9190612844565b6114dd565b6040516104c0919061314f565b60405180910390f35b6104e360048036038101906104de9190612844565b611617565b005b6104ff60048036038101906104fa9190612934565b61178c565b60405161050c9190613072565b60405180910390f35b61052f600480360381019061052a91906128a9565b6117bc565b005b61054b60048036038101906105469190612aa3565b61181d565b6040516105589190613072565b60405180910390f35b61057b600480360381019061057691906128e5565b611895565b6040516105889190613072565b60405180910390f35b6105ab60048036038101906105a691906128e5565b61193a565b005b6105c760048036038101906105c291906129dc565b6119db565b005b6105e360048036038101906105de91906128e5565b611bf0565b005b6105ff60048036038101906105fa9190612a18565b611cb4565b60405161060c9190613013565b60405180910390f35b61062f600480360381019061062a9190612844565b611d5e565b60405161063c919061316b565b60405180910390f35b61065f600480360381019061065a9190612a54565b611dd2565b60405161066c91906131a8565b60405180910390f35b61068f600480360381019061068a91906128e5565b611f64565b005b6106ab60048036038101906106a69190612a18565b612044565b6040516106b89190613072565b60405180910390f35b6106db60048036038101906106d69190612934565b61212a565b005b6106f760048036038101906106f29190612844565b6121ab565b6040516107049190613186565b60405180910390f35b61072760048036038101906107229190612934565b612462565b604051610734919061316b565b60405180910390f35b806000614e2d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601600082825461079391906133fa565b925050819055505050565b60008060020184606481106107dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018360648110610818577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600202016001019050600181805490501061087b578181600081548110610868577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001819055506108a4565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b50505050565b80518251146108ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e59061310d565b60405180910390fd5b60016000614e2401600085815260200190815260200160002060030160006101000a81548160ff021916908315150217905550816000614e24016000858152602001908152602001600020600401908051906020019061094f9291906125bb565b50806000614e24016000858152602001908152602001600020600501908051906020019061097e9291906125bb565b5060016000614e2501600082825461099691906133a4565b92505081905550505050565b600080614e2e0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6000806000800154600060010154915091509091565b60606000614e2c01805480602002602001604051908101604052809291908181526020018280548015610a9e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a54575b5050505050905090565b6000806002018360648110610ae6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018260648110610b22577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160010180549050905092915050565b806000614e2d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005016000828254610b8b91906133a4565b925050819055505050565b806000614e2d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005016000828254610bec91906133fa565b925050819055505050565b806000614e2e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610c5b91906133fa565b92505081905550600080614e2e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541415610cca57610cc98260006119db565b5b505050565b600080610cdb84611d5e565b90506000610ce884611d5e565b9050600080614e300160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000614e2901548142610d4491906133fa565b11610d555760009350505050610d90565b610d7883600001518460200151846000015185602001516000614e27015461181d565b610d885760009350505050610d90565b600193505050505b92915050565b600080610da38484610aa8565b905060006002018460648110610de2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018360648110610e1e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101600182610e3291906133fa565b81548110610e69577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015491505092915050565b60606000606467ffffffffffffffff811115610ec2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610efb57816020015b610ee8612608565b815260200190600190039081610ee05790505b5090506000808590505b600a86610f1291906133a4565b8110156111525760008590505b600a86610f2c91906133a4565b81101561113e57604051806080016040528060006002018460648110610f7b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018360648110610fb7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160006002018460648110611037577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018360648110611073577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600202016001018054806020026020016040519081016040528092919081815260200182805480156110c457602002820191906000526020600020905b8154815260200190600101908083116110b0575b5050505050815260200183815260200182815250848481518110611111577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018361112991906133a4565b92508080611136906134a7565b915050610f1f565b50808061114a906134a7565b915050610f05565b50819250505092915050565b6000600201826064811061119b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c8020181606481106111d7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101805480611214577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590555050565b6112398260016119db565b806000614e2e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600082825461129d91906133a4565b92505081905550505050565b6112b1612646565b6000614e24016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016001820180548060200260200160405190810160405280929190818152602001828054801561133e57602002820191906000526020600020905b81548152602001906001019080831161132a575b50505050508152602001600282015481526020016003820160009054906101000a900460ff16151515158152602001600482018054806020026020016040519081016040528092919081815260200182805480156113bb57602002820191906000526020600020905b8154815260200190600101908083116113a7575b505050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561141357602002820191906000526020600020905b8154815260200190600101908083116113ff575b505050505081526020016006820160009054906101000a900460ff16151515158152602001600782015481526020016008820154815250509050919050565b600080600001549080600101549080614e220160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080614e220160149054906101000a900460ff169080614e2501549080614e2601549080614e2701549080614e2801549080614e2901549080614e2a01549080614e2b015490508b565b600080614e250154905090565b6114e5612698565b6000614e2d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff161515151581526020016003820160405180604001604052908160008201548152602001600182015481525050815260200160058201548152602001600682015481526020016007820154815250509050919050565b600080614e2d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160146101000a81548160ff021916908315150217905550600080614e2d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301604051806040016040529081600082015481526020016001820154815250509050600060020181600001516064811061171e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c8020181602001516064811061175e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600080614e2301600083815260200190815260200160002060010160149054906101000a900460ff169050919050565b806000614e2d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601600082825461181291906133a4565b925050819055505050565b6000808487101561183957868561183491906133fa565b611846565b848761184591906133fa565b5b905060008487101561186357868561185e91906133fa565b611870565b848761186f91906133fa565b5b905060008483111580156118845750848211155b905080935050505095945050505050565b6000806118a185611d5e565b905060008060000154851080156118bc575060006001015484105b80156118c9575060008510155b80156118d6575060008410155b9050806118e857600092505050611933565b6119038585846000015185602001516000614e26015461181d565b61191257600092505050611933565b61191c8585612044565b1561192c57600092505050611933565b6001925050505b9392505050565b816000614e2d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160000181905550806000614e2d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160010181905550505050565b60008060005b6000614e310160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611ad757846000614e310160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611aab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001541415611ac457809250600191505b8080611acf906134a7565b9150506119e1565b5082611b72578015611b6d576000614e310160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611b5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b611bea565b8215611be95780611be8576000614e310160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b8260006002018360648110611c2e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018260648110611c6a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000806002018360648110611cf2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018260648110611d2e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b611d666126fd565b6000614e2d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301604051806040016040529081600082015481526020016001820154815250509050919050565b6000806002018460648110611e10577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018360648110611e4c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101805490508210611e98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e8f906130ed565b60405180910390fd5b60006002018460648110611ed5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018360648110611f11577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600202016001018281548110611f50577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490509392505050565b6000611f6f33611d5e565b90506000611f7c85611d5e565b9050611f9c8260000151836020015183600001518460200151600561181d565b611fdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd29061308d565b60405180910390fd5b82611fe633866109a2565b1015612027576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161201e906130ad565b60405180910390fd5b612032338585610bf7565b61203d85858561122e565b5050505050565b60008073ffffffffffffffffffffffffffffffffffffffff166120678484611cb4565b73ffffffffffffffffffffffffffffffffffffffff161461208b5760019050612124565b60008060020184606481106120c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60c802018360648110612105577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160010180549050111561211f5760019050612124565b600090505b92915050565b600080614e2401600083815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506000614e2401600082815260200190815260200160002060040160006121829190612717565b6000614e2401600082815260200190815260200160002060050160006121a89190612717565b50565b6121b3612738565b600080614e310160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff81111561223f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561226d5781602001602082028036833780820191505090505b50905060005b828110156123b257600080614e310160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106122f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490506000614e2e0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002054838381518110612392577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505080806123aa906134a7565b915050612273565b5060405180604001604052806000614e310160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561244b57602002820191906000526020600020905b815481526020019060010190808311612437575b505050505081526020018281525092505050919050565b61246a6126fd565b60008061247c84600060010154612501565b915091506000806124928660006001015461255e565b915091508315806124a1575081155b156124e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124d8906130cd565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b60008060008314156125195760008091509150612557565b6001838581612551577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b600080600083141561257657600080915091506125b4565b60018385816125ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b8280548282559060005260206000209081019282156125f7579160200282015b828111156125f65782518255916020019190600101906125db565b5b5090506126049190612752565b5090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518061012001604052806000151581526020016060815260200160008152602001600015158152602001606081526020016060815260200160001515815260200160008152602001600081525090565b60405180610100016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016126e26126fd565b81526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b50805460008255906000526020600020908101906127359190612752565b50565b604051806040016040528060608152602001606081525090565b5b8082111561276b576000816000905550600101612753565b5090565b600061278261277d846132bc565b613297565b905080838252602082019050828560208602820111156127a157600080fd5b60005b858110156127d157816127b7888261282f565b8452602084019350602083019250506001810190506127a4565b5050509392505050565b6000813590506127ea81613652565b92915050565b600082601f83011261280157600080fd5b813561281184826020860161276f565b91505092915050565b60008135905061282981613669565b92915050565b60008135905061283e81613680565b92915050565b60006020828403121561285657600080fd5b6000612864848285016127db565b91505092915050565b6000806040838503121561288057600080fd5b600061288e858286016127db565b925050602061289f858286016127db565b9150509250929050565b600080604083850312156128bc57600080fd5b60006128ca858286016127db565b92505060206128db8582860161282f565b9150509250929050565b6000806000606084860312156128fa57600080fd5b6000612908868287016127db565b93505060206129198682870161282f565b925050604061292a8682870161282f565b9150509250925092565b60006020828403121561294657600080fd5b60006129548482850161282f565b91505092915050565b60008060006060848603121561297257600080fd5b60006129808682870161282f565b935050602084013567ffffffffffffffff81111561299d57600080fd5b6129a9868287016127f0565b925050604084013567ffffffffffffffff8111156129c657600080fd5b6129d2868287016127f0565b9150509250925092565b600080604083850312156129ef57600080fd5b60006129fd8582860161282f565b9250506020612a0e8582860161281a565b9150509250929050565b60008060408385031215612a2b57600080fd5b6000612a398582860161282f565b9250506020612a4a8582860161282f565b9150509250929050565b600080600060608486031215612a6957600080fd5b6000612a778682870161282f565b9350506020612a888682870161282f565b9250506040612a998682870161282f565b9150509250925092565b600080600080600060a08688031215612abb57600080fd5b6000612ac98882890161282f565b9550506020612ada8882890161282f565b9450506040612aeb8882890161282f565b9350506060612afc8882890161282f565b9250506080612b0d8882890161282f565b9150509295509295909350565b6000612b268383612b5e565b60208301905092915050565b6000612b3e8383612f92565b905092915050565b6000612b528383612ff5565b60208301905092915050565b612b678161342e565b82525050565b612b768161342e565b82525050565b6000612b8782613318565b612b918185613360565b9350612b9c836132e8565b8060005b83811015612bcd578151612bb48882612b1a565b9750612bbf83613339565b925050600181019050612ba0565b5085935050505092915050565b6000612be582613323565b612bef8185613371565b935083602082028501612c01856132f8565b8060005b85811015612c3d5784840389528151612c1e8582612b32565b9450612c2983613346565b925060208a01995050600181019050612c05565b50829750879550505050505092915050565b6000612c5a8261332e565b612c648185613382565b9350612c6f83613308565b8060005b83811015612ca0578151612c878882612b46565b9750612c9283613353565b925050600181019050612c73565b5085935050505092915050565b612cb681613440565b82525050565b612cc581613440565b82525050565b6000612cd8601483613393565b9150612ce38261355f565b602082019050919050565b6000612cfb601a83613393565b9150612d0682613588565b602082019050919050565b6000612d1e601983613393565b9150612d29826135b1565b602082019050919050565b6000612d41601683613393565b9150612d4c826135da565b602082019050919050565b6000612d64602183613393565b9150612d6f82613603565b604082019050919050565b600061012083016000830151612d936000860182612cad565b5060208301518482036020860152612dab8282612c4f565b9150506040830151612dc06040860182612ff5565b506060830151612dd36060860182612cad565b5060808301518482036080860152612deb8282612c4f565b91505060a083015184820360a0860152612e058282612c4f565b91505060c0830151612e1a60c0860182612cad565b5060e0830151612e2d60e0860182612ff5565b50610100830151612e42610100860182612ff5565b508091505092915050565b61012082016000820151612e646000850182612cad565b506020820151612e776020850182612ff5565b506040820151612e8a6040850182612b5e565b506060820151612e9d6060850182612cad565b506080820151612eb06080850182612ef0565b5060a0820151612ec360c0850182612ff5565b5060c0820151612ed660e0850182612ff5565b5060e0820151612eea610100850182612ff5565b50505050565b604082016000820151612f066000850182612ff5565b506020820151612f196020850182612ff5565b50505050565b604082016000820151612f356000850182612ff5565b506020820151612f486020850182612ff5565b50505050565b60006040830160008301518482036000860152612f6b8282612c4f565b91505060208301518482036020860152612f858282612c4f565b9150508091505092915050565b6000608083016000830151612faa6000860182612b5e565b5060208301518482036020860152612fc28282612c4f565b9150506040830151612fd76040860182612ff5565b506060830151612fea6060860182612ff5565b508091505092915050565b612ffe8161346c565b82525050565b61300d8161346c565b82525050565b60006020820190506130286000830184612b6d565b92915050565b600060208201905081810360008301526130488184612b7c565b905092915050565b6000602082019050818103600083015261306a8184612bda565b905092915050565b60006020820190506130876000830184612cbc565b92915050565b600060208201905081810360008301526130a681612ccb565b9050919050565b600060208201905081810360008301526130c681612cee565b9050919050565b600060208201905081810360008301526130e681612d11565b9050919050565b6000602082019050818103600083015261310681612d34565b9050919050565b6000602082019050818103600083015261312681612d57565b9050919050565b600060208201905081810360008301526131478184612d7a565b905092915050565b6000610120820190506131656000830184612e4d565b92915050565b60006040820190506131806000830184612f1f565b92915050565b600060208201905081810360008301526131a08184612f4e565b905092915050565b60006020820190506131bd6000830184613004565b92915050565b60006040820190506131d86000830185613004565b6131e56020830184613004565b9392505050565b600061016082019050613202600083018e613004565b61320f602083018d613004565b61321c604083018c612b6d565b613229606083018b612cbc565b613236608083018a613004565b61324360a0830189613004565b61325060c0830188613004565b61325d60e0830187613004565b61326b610100830186613004565b613279610120830185613004565b613287610140830184613004565b9c9b505050505050505050505050565b60006132a16132b2565b90506132ad8282613476565b919050565b6000604051905090565b600067ffffffffffffffff8211156132d7576132d661351f565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006133af8261346c565b91506133ba8361346c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156133ef576133ee6134f0565b5b828201905092915050565b60006134058261346c565b91506134108361346c565b925082821015613423576134226134f0565b5b828203905092915050565b60006134398261344c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61347f8261354e565b810181811067ffffffffffffffff8211171561349e5761349d61351f565b5b80604052505050565b60006134b28261346c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156134e5576134e46134f0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f656e67696e652f696e76616c69642d63726166742d6974656d2d616d6f756e7460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b61365b8161342e565b811461366657600080fd5b50565b61367281613440565b811461367d57600080fd5b50565b6136898161346c565b811461369457600080fd5b5056fea2646970667358221220253aa98eaf5c058bbc72c207d4b902337bb5f4d79948cf7d686b4a12ef3e2a9864736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
