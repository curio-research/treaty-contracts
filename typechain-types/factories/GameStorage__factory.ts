/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeTopLevelStrengthAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "_encodePos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopLevelStrengthAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "contract Epoch",
        name: "epochController",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Epoch",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setEpochController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061392c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80638bce7fab1161011a578063c537e3e5116100ad578063f095277c1161007c578063f095277c1461063b578063f09c4b261461066b578063f0bfd52b1461069b578063f17dd707146106cb578063fad86c3c146106e7576101fb565b8063c537e3e5146105b7578063d8178847146105e7578063dc8afb6314610603578063dd597d271461061f576101fb565b8063b0b49ba5116100e9578063b0b49ba51461050b578063b62b71301461053b578063be56594014610557578063bfc525a214610587576101fb565b80638bce7fab14610471578063908b9f171461048f5780639889c321146104bf578063aae1eeac146104ef576101fb565b80635a9c064411610192578063801b83db11610161578063801b83db146103cd57806386b714e2146103fd57806386e68be31461042557806387fc554914610441576101fb565b80635a9c0644146103355780635de24e181461035157806367ae06341461038157806379564688146103b1576101fb565b8063487d2080116101ce578063487d20801461028957806348c5a716146102a55780634a4e51b3146102d557806350607fee14610305576101fb565b80631ccd4c1514610200578063201549ac146102305780632c190c621461024c5780633f261e071461026b575b600080fd5b61021a600480360381019061021591906129ed565b610717565b60405161022791906133c4565b60405180910390f35b61024a60048036038101906102459190612af0565b610775565b005b610254610a84565b6040516102629291906133df565b60405180910390f35b610273610a9a565b6040516102809190613228565b60405180910390f35b6102a3600480360381019061029e9190612a78565b610b2c565b005b6102bf60048036038101906102ba9190612975565b610c04565b6040516102cc919061326c565b60405180910390f35b6102ef60048036038101906102ea9190612b19565b610c4c565b6040516102fc919061326c565b60405180910390f35b61031f600480360381019061031a9190612af0565b610cec565b60405161032c919061324a565b60405180910390f35b61034f600480360381019061034a9190612ac7565b610fde565b005b61036b60048036038101906103669190612af0565b611026565b6040516103789190613287565b60405180910390f35b61039b60048036038101906103969190612af0565b611059565b6040516103a891906131c8565b60405180910390f35b6103cb60048036038101906103c69190612a78565b61110b565b005b6103e760048036038101906103e29190612bf3565b611186565b6040516103f49190613349565b60405180910390f35b61040561132f565b60405161041c9b9a99989796959493929190613408565b60405180910390f35b61043f600480360381019061043a91906129b1565b6113cd565b005b61045b600480360381019061045691906129b1565b611499565b604051610468919061326c565b60405180910390f35b61047961153d565b60405161048691906133c4565b60405180910390f35b6104a960048036038101906104a4919061294c565b61154a565b6040516104b6919061336b565b60405180910390f35b6104d960048036038101906104d49190612bf3565b611668565b6040516104e6919061326c565b60405180910390f35b61050960048036038101906105049190612c1c565b611698565b005b61052560048036038101906105209190612b68565b6118ad565b60405161053291906133c4565b60405180910390f35b610555600480360381019061055091906129b1565b611a50565b005b610571600480360381019061056c919061294c565b611ab2565b60405161057e9190613387565b60405180910390f35b6105a1600480360381019061059c9190612af0565b611b26565b6040516105ae91906133c4565b60405180910390f35b6105d160048036038101906105cc9190612af0565b611bb8565b6040516105de919061326c565b60405180910390f35b61060160048036038101906105fc9190612b68565b611ca5565b005b61061d60048036038101906106189190612a78565b611e61565b005b61063960048036038101906106349190612ba4565b611fdb565b005b6106556004803603810190610650919061294c565b612131565b60405161066291906133a2565b60405180910390f35b61068560048036038101906106809190612af0565b6123e8565b60405161069291906133c4565b60405180910390f35b6106b560048036038101906106b09190612af0565b61247d565b6040516106c291906133c4565b60405180910390f35b6106e560048036038101906106e09190612a29565b61256b565b005b61070160048036038101906106fc9190612bf3565b612634565b60405161070e9190613387565b60405180910390f35b60008061753e0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60006002018160000151606481106107b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018160200151606481106107f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480610834577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590556000610855826123e8565b905060008111156109f1576000806002018360000151606481106108a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360200151606481106108e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020160016108f5856123e8565b6108ff91906135f5565b81548110610936577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600061753501600082815260200190815260200160002060010154600060020184600001516064811061099f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460200151606481106109e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018190555050610a80565b600080600201836000015160648110610a33577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610a74577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101819055505b5050565b6000806000800154600060010154915091509091565b6060600061753c01805480602002602001604051908101604052809291908181526020018280548015610b2257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ad8575b5050505050905090565b80600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610b9091906135f5565b9250508190555060008061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541415610bff57610bfe826000611698565b5b505050565b600080610c1084611ab2565b90506000610c1d84611ab2565b9050610c30828260006175370154610c4c565b610c3f57600092505050610c46565b6001925050505b92915050565b600080836000015185600001511015610c785784600001518460000151610c7391906135f5565b610c8d565b83600001518560000151610c8c91906135f5565b5b90506000846020015186602001511015610cba5785602001518560200151610cb591906135f5565b610ccf565b84602001518660200151610cce91906135f5565b5b9050838211158015610ce15750838111155b925050509392505050565b60606000606467ffffffffffffffff811115610d31577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610d6a57816020015b610d5761278d565b815260200190600190039081610d4f5790505b509050600080846000015190505b600a8560000151610d89919061359f565b811015610fd3576000856020015190505b600a8660200151610dab919061359f565b811015610fbf57604051806080016040528060006002018460648110610dfa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610e37577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160006002018460648110610eb7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610ef4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480602002602001604051908101604052809291908181526020018280548015610f4557602002820191906000526020600020905b815481526020019060010190808311610f31575b5050505050815260200183815260200182815250848481518110610f92577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600183610faa919061359f565b92508080610fb79061370b565b915050610d9a565b508080610fcb9061370b565b915050610d78565b508192505050919050565b8060006175330160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60608160000151826020015160405160200161104392919061319c565b6040516020818303038152906040529050919050565b60008060020182600001516064811061109b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260200151606481106110dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b611116826001611698565b80600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600082825461117a919061359f565b92505081905550505050565b61118e6127cb565b6000617535016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561126f57602002820191906000526020600020905b81548152602001906001019080831161125b575b50505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156112c757602002820191906000526020600020905b8154815260200190600101908083116112b3575b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561131f57602002820191906000526020600020905b81548152602001906001019080831161130b575b5050505050815250509050919050565b6000806000015490806001015490806175320160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175320160149054906101000a900460ff1690806175330160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175360154908061753701549080617538015490806175390154908061753a0154908061753b015490508b565b81600060020182600001516064811061140f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611450577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000806114a584611ab2565b90506000806000015484600001511080156114c857506000600101548460200151105b80156114d957506000846000015110155b80156114ea57506000846020015110155b9050806114fc57600092505050611537565b61150884836001610c4c565b61151757600092505050611537565b61152084611bb8565b1561153057600092505050611537565b6001925050505b92915050565b6000806175360154905090565b61155261281d565b600061753d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b60008061753401600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b60008060005b60006175400160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611794578460006175400160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611768577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154141561178157809250600191505b808061178c9061370b565b91505061169e565b508261182f57801561182a5760006175400160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061181b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b6118a7565b82156118a657806118a55760006175400160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b6000806002018360000151606481106118ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611930577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020180549050821061197c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197390613309565b60405180910390fd5b60006002018360000151606481106119bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360200151606481106119fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018281548110611a3d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b80600061753d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160008201518160000155602082015181600101559050505050565b611aba612878565b600061753d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601604051806040016040529081600082015481526020016001820154815250509050919050565b600080600201826000015160648110611b68577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611ba9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16611bda83611059565b73ffffffffffffffffffffffffffffffffffffffff1614611bfe5760019050611ca0565b600080600201836000015160648110611c40577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611c81577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490501115611c9b5760019050611ca0565b600090505b919050565b600080600201836000015160648110611ce7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611d28577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020190506001818054905010611d8b578181600081548110611d78577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550611db4565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b6000617535016000838152602001908152602001600020600101546000600201846000015160648110611e10577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110611e51577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010181905550505050565b6000611e6c33611ab2565b90506000611e7985611ab2565b90508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611eea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ee190613329565b60405180910390fd5b611ef682826005610c4c565b611f35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2c906132a9565b60405180910390fd5b82611f403386610717565b1015611f81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f78906132c9565b60405180910390fd5b611f8c338585610b2c565b611f9785858561110b565b7f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc4433868686604051611fcc94939291906131e3565b60405180910390a15050505050565b600115158115151461208b57816000600201846000015160648110612029577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020184602001516064811061206a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101600082825461208091906135f5565b92505081905561212b565b8160006002018460000151606481106120cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020184602001516064811061210e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001016000828254612124919061359f565b9250508190555b50505050565b612139612892565b6000806175400160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff8111156121c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156121f35781602001602082028036833780820191505090505b50905060005b82811015612338576000806175400160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061227d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600061753e0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002054838381518110612318577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505080806123309061370b565b9150506121f9565b50604051806040016040528060006175400160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156123d157602002820191906000526020600020905b8154815260200190600101908083116123bd575b505050505081526020018281525092505050919050565b60008060020182600001516064811061242a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020182602001516064811061246b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490509050919050565b600080612489836123e8565b905060006002018360000151606481106124cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020183602001516064811061250d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020160018261252191906135f5565b81548110612558577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154915050919050565b806125d15781600061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546125c691906135f5565b92505081905561262e565b81600061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254612627919061359f565b9250508190555b50505050565b61263c612878565b60008061264e846000600101546126d3565b9150915060008061266486600060010154612730565b91509150831580612673575081155b156126b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126aa906132e9565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b60008060008314156126eb5760008091509150612729565b6001838581612723577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b60008060008314156127485760008091509150612786565b6001838581612780577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b6040518060e0016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001612872612878565b81525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b6000813590506128bb8161389a565b92915050565b6000813590506128d0816138b1565b92915050565b6000813590506128e5816138c8565b92915050565b6000604082840312156128fd57600080fd5b61290760406134b3565b9050600061291784828501612937565b600083015250602061292b84828501612937565b60208301525092915050565b600081359050612946816138df565b92915050565b60006020828403121561295e57600080fd5b600061296c848285016128ac565b91505092915050565b6000806040838503121561298857600080fd5b6000612996858286016128ac565b92505060206129a7858286016128ac565b9150509250929050565b600080606083850312156129c457600080fd5b60006129d2858286016128ac565b92505060206129e3858286016128eb565b9150509250929050565b60008060408385031215612a0057600080fd5b6000612a0e858286016128ac565b9250506020612a1f85828601612937565b9150509250929050565b600080600060608486031215612a3e57600080fd5b6000612a4c868287016128ac565b9350506020612a5d86828701612937565b9250506040612a6e868287016128c1565b9150509250925092565b600080600060608486031215612a8d57600080fd5b6000612a9b868287016128ac565b9350506020612aac86828701612937565b9250506040612abd86828701612937565b9150509250925092565b600060208284031215612ad957600080fd5b6000612ae7848285016128d6565b91505092915050565b600060408284031215612b0257600080fd5b6000612b10848285016128eb565b91505092915050565b600080600060a08486031215612b2e57600080fd5b6000612b3c868287016128eb565b9350506040612b4d868287016128eb565b9250506080612b5e86828701612937565b9150509250925092565b60008060608385031215612b7b57600080fd5b6000612b89858286016128eb565b9250506040612b9a85828601612937565b9150509250929050565b600080600060808486031215612bb957600080fd5b6000612bc7868287016128eb565b9350506040612bd886828701612937565b9250506060612be9868287016128c1565b9150509250925092565b600060208284031215612c0557600080fd5b6000612c1384828501612937565b91505092915050565b60008060408385031215612c2f57600080fd5b6000612c3d85828601612937565b9250506020612c4e858286016128c1565b9150509250929050565b6000612c648383612c9c565b60208301905092915050565b6000612c7c8383613104565b905092915050565b6000612c908383613167565b60208301905092915050565b612ca581613629565b82525050565b612cb481613629565b82525050565b6000612cc582613508565b612ccf818561355b565b9350612cda836134d8565b8060005b83811015612d0b578151612cf28882612c58565b9750612cfd83613534565b925050600181019050612cde565b5085935050505092915050565b6000612d2382613513565b612d2d818561356c565b935083602082028501612d3f856134e8565b8060005b85811015612d7b5784840389528151612d5c8582612c70565b9450612d6783613541565b925060208a01995050600181019050612d43565b50829750879550505050505092915050565b6000612d988261351e565b612da2818561357d565b9350612dad836134f8565b8060005b83811015612dde578151612dc58882612c84565b9750612dd08361354e565b925050600181019050612db1565b5085935050505092915050565b612df48161363b565b82525050565b612e038161363b565b82525050565b612e1281613683565b82525050565b6000612e2382613529565b612e2d818561358e565b9350612e3d8185602086016136a7565b612e46816137bc565b840191505092915050565b6000612e5e60148361358e565b9150612e69826137cd565b602082019050919050565b6000612e81601a8361358e565b9150612e8c826137f6565b602082019050919050565b6000612ea460198361358e565b9150612eaf8261381f565b602082019050919050565b6000612ec760168361358e565b9150612ed282613848565b602082019050919050565b6000612eea60208361358e565b9150612ef582613871565b602082019050919050565b600061012083016000830151612f196000860182612deb565b506020830151612f2c6020860182612deb565b506040830151612f3f6040860182612deb565b506060830151612f526060860182613167565b506080830151612f656080860182613167565b5060a0830151612f7860a0860182613167565b5060c083015184820360c0860152612f908282612d8d565b91505060e083015184820360e0860152612faa8282612d8d565b915050610100830151848203610100860152612fc68282612d8d565b9150508091505092915050565b61010082016000820151612fea6000850182612deb565b506020820151612ffd6020850182613167565b5060408201516130106040850182612c9c565b5060608201516130236060850182613167565b5060808201516130366080850182613167565b5060a082015161304960a0850182613167565b5060c082015161305c60c0850182613062565b50505050565b6040820160008201516130786000850182613167565b50602082015161308b6020850182613167565b50505050565b6040820160008201516130a76000850182613167565b5060208201516130ba6020850182613167565b50505050565b600060408301600083015184820360008601526130dd8282612d8d565b915050602083015184820360208601526130f78282612d8d565b9150508091505092915050565b600060808301600083015161311c6000860182612c9c565b50602083015184820360208601526131348282612d8d565b91505060408301516131496040860182613167565b50606083015161315c6060860182613167565b508091505092915050565b61317081613679565b82525050565b61317f81613679565b82525050565b61319661319182613679565b613754565b82525050565b60006131a88285613185565b6020820191506131b88284613185565b6020820191508190509392505050565b60006020820190506131dd6000830184612cab565b92915050565b60006080820190506131f86000830187612cab565b6132056020830186612cab565b6132126040830185613176565b61321f6060830184613176565b95945050505050565b600060208201905081810360008301526132428184612cba565b905092915050565b600060208201905081810360008301526132648184612d18565b905092915050565b60006020820190506132816000830184612dfa565b92915050565b600060208201905081810360008301526132a18184612e18565b905092915050565b600060208201905081810360008301526132c281612e51565b9050919050565b600060208201905081810360008301526132e281612e74565b9050919050565b6000602082019050818103600083015261330281612e97565b9050919050565b6000602082019050818103600083015261332281612eba565b9050919050565b6000602082019050818103600083015261334281612edd565b9050919050565b600060208201905081810360008301526133638184612f00565b905092915050565b6000610100820190506133816000830184612fd3565b92915050565b600060408201905061339c6000830184613091565b92915050565b600060208201905081810360008301526133bc81846130c0565b905092915050565b60006020820190506133d96000830184613176565b92915050565b60006040820190506133f46000830185613176565b6134016020830184613176565b9392505050565b60006101608201905061341e600083018e613176565b61342b602083018d613176565b613438604083018c612cab565b613445606083018b612dfa565b613452608083018a612e09565b61345f60a0830189613176565b61346c60c0830188613176565b61347960e0830187613176565b613487610100830186613176565b613495610120830185613176565b6134a3610140830184613176565b9c9b505050505050505050505050565b60006134bd6134ce565b90506134c982826136da565b919050565b6000604051905090565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006135aa82613679565b91506135b583613679565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156135ea576135e961375e565b5b828201905092915050565b600061360082613679565b915061360b83613679565b92508282101561361e5761361d61375e565b5b828203905092915050565b600061363482613659565b9050919050565b60008115159050919050565b600061365282613629565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061368e82613695565b9050919050565b60006136a082613659565b9050919050565b60005b838110156136c55780820151818401526020810190506136aa565b838111156136d4576000848401525b50505050565b6136e3826137bc565b810181811067ffffffffffffffff821117156137025761370161378d565b5b80604052505050565b600061371682613679565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156137495761374861375e565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f73746f726167652f726563697069656e742d73616d652d61732d73656e646572600082015250565b6138a381613629565b81146138ae57600080fd5b50565b6138ba8161363b565b81146138c557600080fd5b50565b6138d181613647565b81146138dc57600080fd5b50565b6138e881613679565b81146138f357600080fd5b5056fea2646970667358221220c07382862e11d2d85a2b54e73e09042dcdfb3d98b6a3692edee01268ba4f02e364736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
