/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_craftItemIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_craftItemAmounts",
        type: "uint256[]",
      },
    ],
    name: "_addCraftItemAndAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseEnergy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_die",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Tile[1000][1000]",
        name: "allTiles",
        type: "tuple[1000][1000]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseEnergy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_removeCraftItemAndAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "moveRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506136a3806100206000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c80638bce7fab11610125578063ac70cc79116100ad578063dc8afb631161007c578063dc8afb6314610663578063e4c451e91461067f578063e9cf5173146106af578063f095277c146106cb578063fad86c3c146106fb57610211565b8063ac70cc79146105b7578063ad7c6cdc146105d3578063be56594014610603578063be947ce01461063357610211565b80639cdc08d8116100f45780639cdc08d814610503578063a24ce62f1461051f578063a54b6e991461054f578063a93edcf91461057f578063aae1eeac1461059b57610211565b80638bce7fab14610469578063908b9f17146104875780639667b4c3146104b75780639889c321146104d357610211565b8063485a5309116101a85780635d7d8041116101775780635d7d8041146103bb57806379564688146103d75780637ee407e0146103f3578063801b83db1461041157806386b714e21461044157610211565b8063485a530914610323578063487d20801461033f57806348c5a7161461035b5780635923b9a41461038b57610211565b80632c190c62116101e45780632c190c621461029a5780633f261e07146102b95780633f4105fc146102d7578063425261751461030757610211565b806302e8af841461021657806306ae3d021461023257806316e1cc671461024e5780631ccd4c151461026a575b600080fd5b610230600480360381019061022b9190612774565b61072b565b005b61024c6004803603810190610247919061291f565b61078d565b005b61026860048036038101906102639190612828565b61083c565b005b610284600480360381019061027f9190612774565b610938565b604051610291919061311d565b60405180910390f35b6102a2610997565b6040516102b0929190613138565b60405180910390f35b6102c16109eb565b6040516102ce9190612f81565b60405180910390f35b6102f160048036038101906102ec91906128e3565b610a7e565b6040516102fe919061311d565b60405180910390f35b610321600480360381019061031c9190612774565b610b0e565b005b61033d60048036038101906103389190612774565b610b70565b005b610359600480360381019061035491906127b0565b610bd2565b005b61037560048036038101906103709190612738565b610c4e565b6040516103829190612fc5565b60405180910390f35b6103a560048036038101906103a091906128e3565b610d18565b6040516103b2919061311d565b60405180910390f35b6103d560048036038101906103d091906128e3565b610e02565b005b6103f160048036038101906103ec91906127b0565b610ed5565b005b6103fb610f51565b6040516104089190612fa3565b60405180910390f35b61042b600480360381019061042691906127ff565b61108f565b60405161043891906130a2565b60405180910390f35b610449611239565b6040516104609b9a99989796959493929190613161565b60405180910390f35b6104716112c0565b60405161047e919061311d565b60405180910390f35b6104a1600480360381019061049c919061270f565b6112ce565b6040516104ae91906130c4565b60405180910390f35b6104d160048036038101906104cc919061270f565b6113fe565b005b6104ed60048036038101906104e891906127ff565b611578565b6040516104fa9190612fc5565b60405180910390f35b61051d60048036038101906105189190612774565b6115a9565b005b6105396004803603810190610534919061296e565b61160b565b6040516105469190612fc5565b60405180910390f35b610569600480360381019061056491906127b0565b611683565b6040516105769190612fc5565b60405180910390f35b610599600480360381019061059491906127b0565b611729565b005b6105b560048036038101906105b091906128a7565b6117cc565b005b6105d160048036038101906105cc91906127b0565b6119e5565b005b6105ed60048036038101906105e891906128e3565b611aac565b6040516105fa9190612f66565b60405180910390f35b61061d6004803603810190610618919061270f565b611b59565b60405161062a91906130e0565b60405180910390f35b61064d6004803603810190610648919061291f565b611bce565b60405161065a919061311d565b60405180910390f35b61067d600480360381019061067891906127b0565b611d66565b005b610699600480360381019061069491906128e3565b611e46565b6040516106a69190612fc5565b60405180910390f35b6106c960048036038101906106c491906127ff565b611ee4565b005b6106e560048036038101906106e0919061270f565b611f68565b6040516106f291906130fb565b60405180910390f35b610715600480360381019061071091906127ff565b612223565b60405161072291906130e0565b60405180910390f35b806000621e848d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006016000828254610782919061339d565b925050819055505050565b6000600201836103e881106107cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201826103e88110610809577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101819080600181540180825580915050600190039060005260206000200160009091909190915055505050565b8051825114610880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087790613082565b60405180910390fd5b60016000621e848401600085815260200190815260200160002060030160006101000a81548160ff021916908315150217905550816000621e848401600085815260200190815260200160002060040190805190602001906108e392919061243e565b50806000621e8484016000858152602001908152602001600020600501908051906020019061091392919061243e565b5060016000621e848501600082825461092c9190613347565b92505081905550505050565b600080621e848e0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6000806109d86040518060400160405280601181526020017f696e205f676574576f726c6453697a65210000000000000000000000000000008152506122c2565b6000800154600060010154915091509091565b60606000621e848c01805480602002602001604051908101604052809291908181526020018280548015610a7457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a2a575b5050505050905090565b600080600201836103e88110610abd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201826103e88110610afb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160010180549050905092915050565b806000621e848d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005016000828254610b659190613347565b925050819055505050565b806000621e848d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005016000828254610bc7919061339d565b925050819055505050565b610bdd8260006117cc565b806000621e848e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610c42919061339d565b92505081905550505050565b600080610c5a84611b59565b90506000610c6784611b59565b9050600080621e84900160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000621e848901548142610cc5919061339d565b11610cd65760009350505050610d12565b610cfa83600001518460200151846000015185602001516000621e8487015461160b565b610d0a5760009350505050610d12565b600193505050505b92915050565b600080610d258484610a7e565b90506000600201846103e88110610d65577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201836103e88110610da3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101600182610db7919061339d565b81548110610dee577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015491505092915050565b6000600201826103e88110610e40577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201816103e88110610e7e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101805480610ebb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590555050565b610ee08260016117cc565b806000621e848e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610f459190613347565b92505081905550505050565b610f5961248b565b60006002016103e880602002604051908101604052809291906000905b828210156110865783826107d002016103e880602002604051908101604052809291906000905b82821015611073578382600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180548060200260200160405190810160405280929190818152602001828054801561105b57602002820191906000526020600020905b815481526020019060010190808311611047575b50505050508152505081526020019060010190610f9d565b5050505081526020019060010190610f76565b50505050905090565b6110976124ba565b6000621e8484016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016001820180548060200260200160405190810160405280929190818152602001828054801561112557602002820191906000526020600020905b815481526020019060010190808311611111575b50505050508152602001600282015481526020016003820160009054906101000a900460ff16151515158152602001600482018054806020026020016040519081016040528092919081815260200182805480156111a257602002820191906000526020600020905b81548152602001906001019080831161118e575b50505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156111fa57602002820191906000526020600020905b8154815260200190600101908083116111e6575b505050505081526020016006820160009054906101000a900460ff16151515158152602001600782015481526020016008820154815250509050919050565b600080600001549080600101549080621e84820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080621e84820160149054906101000a900460ff169080621e848501549080621e848601549080621e848701549080621e848801549080621e848901549080621e848a01549080621e848b015490508b565b600080621e84850154905090565b6112d661250c565b6000621e848d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1615151515815260200160038201604051806040016040529081600082015481526020016001820154815250508152602001600582015481526020016006820154815250509050919050565b600080621e848d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160146101000a81548160ff021916908315150217905550600080621e848d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301604051806040016040529081600082015481526020016001820154815250509050600060020181600001516103e88110611508577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d0020181602001516103e8811061154a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050565b600080621e848301600083815260200190815260200160002060010160149054906101000a900460ff169050919050565b806000621e848d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160008282546116009190613347565b925050819055505050565b60008084871015611627578685611622919061339d565b611634565b8487611633919061339d565b5b905060008487101561165157868561164c919061339d565b61165e565b848761165d919061339d565b5b905060008483111580156116725750848211155b905080935050505095945050505050565b60008061168f85611b59565b905060008060000154851080156116aa575060006001015484105b80156116b7575060008510155b80156116c4575060008410155b9050806116d657600092505050611722565b6116f28585846000015185602001516000621e8486015461160b565b61170157600092505050611722565b61170b8585611e46565b1561171b57600092505050611722565b6001925050505b9392505050565b816000621e848d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160000181905550806000621e848d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160010181905550505050565b60008060005b6000621e84910160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156118ca57846000621e84910160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061189e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015414156118b757809250600191505b80806118c29061347d565b9150506117d2565b5082611966578015611961576000621e84910160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611952577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b6119df565b82156119de57806119dd576000621e84910160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b826000600201836103e88110611a24577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201826103e88110611a62577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600080600201836103e88110611aeb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201826103e88110611b29577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b611b61612569565b6000621e848d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301604051806040016040529081600082015481526020016001820154815250509050919050565b600080600201846103e88110611c0d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201836103e88110611c4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60020201600101805490508210611c97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8e90613062565b60405180910390fd5b6000600201846103e88110611cd5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6107d00201836103e88110611d13577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600202016001018281548110611d52577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490509392505050565b6000611d7133611b59565b90506000611d7e85611b59565b9050611d9e8260000151836020015183600001518460200151600561160b565b611ddd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd490613002565b60405180910390fd5b82611de83386610938565b1015611e29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2090613022565b60405180910390fd5b611e34338585610bd2565b611e3f858585610ed5565b5050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16611e698484611aac565b73ffffffffffffffffffffffffffffffffffffffff1614611e8d5760019050611ede565b6000611e998484610d18565b9050600080621e848401600083815260200190815260200160002060060160009054906101000a900460ff16905080611ed757600192505050611ede565b6000925050505b92915050565b600080621e848401600083815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506000621e84840160008281526020019081526020016000206004016000611f3e9190612583565b6000621e84840160008281526020019081526020016000206005016000611f659190612583565b50565b611f706125a4565b600080621e84910160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff811115611ffd577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561202b5781602001602082028036833780820191505090505b50905060005b8281101561217257600080621e84910160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106120b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490506000621e848e0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002054838381518110612152577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505050808061216a9061347d565b915050612031565b5060405180604001604052806000621e84910160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561220c57602002820191906000526020600020905b8154815260200190600101908083116121f8575b505050505081526020018281525092505050919050565b61222b612569565b60008061223d8460006001015461235b565b91509150600080612253866000600101546123b8565b91509150831580612262575081155b156122a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161229990613042565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b612358816040516024016122d69190612fe0565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612415565b50565b600080600083141561237357600080915091506123b1565b60018385816123ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b60008060008314156123d0576000809150915061240e565b6001838581612408577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805482825590600052602060002090810192821561247a579160200282015b8281111561247957825182559160200191906001019061245e565b5b50905061248791906125be565b5090565b60405180617d0001604052806103e8905b6124a46125db565b81526020019060019003908161249c5790505090565b6040518061012001604052806000151581526020016060815260200160008152602001600015158152602001606081526020016060815260200160001515815260200160008152602001600081525090565b6040518060e0016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001612555612569565b815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b50805460008255906000526020600020908101906125a191906125be565b50565b604051806040016040528060608152602001606081525090565b5b808211156125d75760008160009055506001016125bf565b5090565b60405180617d0001604052806103e8905b6125f461260a565b8152602001906001900390816125ec5790505090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600061264d61264884613231565b61320c565b9050808382526020820190508285602086028201111561266c57600080fd5b60005b8581101561269c578161268288826126fa565b84526020840193506020830192505060018101905061266f565b5050509392505050565b6000813590506126b581613628565b92915050565b600082601f8301126126cc57600080fd5b81356126dc84826020860161263a565b91505092915050565b6000813590506126f48161363f565b92915050565b60008135905061270981613656565b92915050565b60006020828403121561272157600080fd5b600061272f848285016126a6565b91505092915050565b6000806040838503121561274b57600080fd5b6000612759858286016126a6565b925050602061276a858286016126a6565b9150509250929050565b6000806040838503121561278757600080fd5b6000612795858286016126a6565b92505060206127a6858286016126fa565b9150509250929050565b6000806000606084860312156127c557600080fd5b60006127d3868287016126a6565b93505060206127e4868287016126fa565b92505060406127f5868287016126fa565b9150509250925092565b60006020828403121561281157600080fd5b600061281f848285016126fa565b91505092915050565b60008060006060848603121561283d57600080fd5b600061284b868287016126fa565b935050602084013567ffffffffffffffff81111561286857600080fd5b612874868287016126bb565b925050604084013567ffffffffffffffff81111561289157600080fd5b61289d868287016126bb565b9150509250925092565b600080604083850312156128ba57600080fd5b60006128c8858286016126fa565b92505060206128d9858286016126e5565b9150509250929050565b600080604083850312156128f657600080fd5b6000612904858286016126fa565b9250506020612915858286016126fa565b9150509250929050565b60008060006060848603121561293457600080fd5b6000612942868287016126fa565b9350506020612953868287016126fa565b9250506040612964868287016126fa565b9150509250925092565b600080600080600060a0868803121561298657600080fd5b6000612994888289016126fa565b95505060206129a5888289016126fa565b94505060406129b6888289016126fa565b93505060606129c7888289016126fa565b92505060806129d8888289016126fa565b9150509295509295909350565b60006129f18383612a3d565b60208301905092915050565b6000612a098383612b2e565b905092915050565b6000612a1d8383612f0b565b905092915050565b6000612a318383612f48565b60208301905092915050565b612a46816133d1565b82525050565b612a55816133d1565b82525050565b6000612a6682613291565b612a7081856132fe565b9350612a7b8361325d565b8060005b83811015612aac578151612a9388826129e5565b9750612a9e836132ca565b925050600181019050612a7f565b5085935050505092915050565b6000612ac48261329c565b612ace818561330f565b935083602082028501612ae08561326d565b8060005b85811015612b1c5784840389528151612afd85826129fd565b9450612b08836132d7565b925060208a01995050600181019050612ae4565b50829750879550505050505092915050565b6000612b39826132a8565b612b43818561331a565b935083602082028501612b5585613277565b8060005b85811015612b915784840389528151612b728582612a11565b9450612b7d836132e4565b925060208a01995050600181019050612b59565b50829750879550505050505092915050565b6000612bae826132b4565b612bb88185613325565b9350612bc383613281565b8060005b83811015612bf4578151612bdb8882612a25565b9750612be6836132f1565b925050600181019050612bc7565b5085935050505092915050565b612c0a816133e3565b82525050565b612c19816133e3565b82525050565b6000612c2a826132bf565b612c348185613336565b9350612c44818560208601613419565b612c4d81613524565b840191505092915050565b6000612c65601483613336565b9150612c7082613535565b602082019050919050565b6000612c88601a83613336565b9150612c938261355e565b602082019050919050565b6000612cab601983613336565b9150612cb682613587565b602082019050919050565b6000612cce601683613336565b9150612cd9826135b0565b602082019050919050565b6000612cf1602183613336565b9150612cfc826135d9565b604082019050919050565b600061012083016000830151612d206000860182612c01565b5060208301518482036020860152612d388282612ba3565b9150506040830151612d4d6040860182612f48565b506060830151612d606060860182612c01565b5060808301518482036080860152612d788282612ba3565b91505060a083015184820360a0860152612d928282612ba3565b91505060c0830151612da760c0860182612c01565b5060e0830151612dba60e0860182612f48565b50610100830151612dcf610100860182612f48565b508091505092915050565b61010082016000820151612df16000850182612c01565b506020820151612e046020850182612f48565b506040820151612e176040850182612a3d565b506060820151612e2a6060850182612c01565b506080820151612e3d6080850182612e69565b5060a0820151612e5060c0850182612f48565b5060c0820151612e6360e0850182612f48565b50505050565b604082016000820151612e7f6000850182612f48565b506020820151612e926020850182612f48565b50505050565b604082016000820151612eae6000850182612f48565b506020820151612ec16020850182612f48565b50505050565b60006040830160008301518482036000860152612ee48282612ba3565b91505060208301518482036020860152612efe8282612ba3565b9150508091505092915050565b6000604083016000830151612f236000860182612a3d565b5060208301518482036020860152612f3b8282612ba3565b9150508091505092915050565b612f518161340f565b82525050565b612f608161340f565b82525050565b6000602082019050612f7b6000830184612a4c565b92915050565b60006020820190508181036000830152612f9b8184612a5b565b905092915050565b60006020820190508181036000830152612fbd8184612ab9565b905092915050565b6000602082019050612fda6000830184612c10565b92915050565b60006020820190508181036000830152612ffa8184612c1f565b905092915050565b6000602082019050818103600083015261301b81612c58565b9050919050565b6000602082019050818103600083015261303b81612c7b565b9050919050565b6000602082019050818103600083015261305b81612c9e565b9050919050565b6000602082019050818103600083015261307b81612cc1565b9050919050565b6000602082019050818103600083015261309b81612ce4565b9050919050565b600060208201905081810360008301526130bc8184612d07565b905092915050565b6000610100820190506130da6000830184612dda565b92915050565b60006040820190506130f56000830184612e98565b92915050565b600060208201905081810360008301526131158184612ec7565b905092915050565b60006020820190506131326000830184612f57565b92915050565b600060408201905061314d6000830185612f57565b61315a6020830184612f57565b9392505050565b600061016082019050613177600083018e612f57565b613184602083018d612f57565b613191604083018c612a4c565b61319e606083018b612c10565b6131ab608083018a612f57565b6131b860a0830189612f57565b6131c560c0830188612f57565b6131d260e0830187612f57565b6131e0610100830186612f57565b6131ee610120830185612f57565b6131fc610140830184612f57565b9c9b505050505050505050505050565b6000613216613227565b9050613222828261344c565b919050565b6000604051905090565b600067ffffffffffffffff82111561324c5761324b6134f5565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050919050565b6000819050919050565b6000819050602082019050919050565b600081519050919050565b60006103e89050919050565b60006103e89050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006133528261340f565b915061335d8361340f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613392576133916134c6565b5b828201905092915050565b60006133a88261340f565b91506133b38361340f565b9250828210156133c6576133c56134c6565b5b828203905092915050565b60006133dc826133ef565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561343757808201518184015260208101905061341c565b83811115613446576000848401525b50505050565b61345582613524565b810181811067ffffffffffffffff82111715613474576134736134f5565b5b80604052505050565b60006134888261340f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156134bb576134ba6134c6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f656e67696e652f696e76616c69642d63726166742d6974656d2d616d6f756e7460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b613631816133d1565b811461363c57600080fd5b50565b613648816133e3565b811461365357600080fd5b50565b61365f8161340f565b811461366a57600080fd5b5056fea2646970667358221220de01bd507b65ee1149f9422e73d575ddad251ddd08c78141631f1d5c4087f1af64736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
