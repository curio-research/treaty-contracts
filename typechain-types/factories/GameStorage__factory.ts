/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_towerId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_towerId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "StakeTower",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_towerId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "UnstakeTower",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeTopLevelStrengthAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "_encodePos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getTopLevelStrengthAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "contract Epoch",
        name: "epochController",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "moveRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Epoch",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setEpochController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506138f2806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80638bce7fab1161011a578063ad7c6cdc116100ad578063dc8afb631161007c578063dc8afb6314610650578063e4c451e91461066c578063f095277c1461069c578063f17dd707146106cc578063fad86c3c146106e8576101fb565b8063ad7c6cdc146105a4578063be565940146105d4578063be947ce014610604578063d0e600dc14610634576101fb565b8063a54b6e99116100e9578063a54b6e9914610520578063a93edcf914610550578063aae1eeac1461056c578063ac70cc7914610588576101fb565b80638bce7fab14610472578063908b9f17146104905780639889c321146104c05780639bb1e204146104f0576101fb565b80635923b9a4116101925780635de24e18116101615780635de24e18146103cd57806379564688146103fd578063801b83db1461041957806386b714e214610449576101fb565b80635923b9a4146103355780635a9c0644146103655780635d2f8585146103815780635d7d8041146103b1576101fb565b80633f4105fc116101ce5780633f4105fc14610289578063487d2080146102b957806348c5a716146102d55780634a4e51b314610305576101fb565b806306ae3d02146102005780631ccd4c151461021c5780632c190c621461024c5780633f261e071461026b575b600080fd5b61021a60048036038101906102159190612b8f565b610718565b005b61023660048036038101906102319190612973565b6108c5565b604051610243919061337b565b60405180910390f35b610254610923565b604051610262929190613396565b60405180910390f35b610273610939565b60405161028091906131df565b60405180910390f35b6102a3600480360381019061029e9190612b53565b6109cb565b6040516102b0919061337b565b60405180910390f35b6102d360048036038101906102ce91906129fe565b610a59565b005b6102ef60048036038101906102ea9190612937565b610b31565b6040516102fc9190613223565b60405180910390f35b61031f600480360381019061031a9190612a9f565b610b79565b60405161032c9190613223565b60405180910390f35b61034f600480360381019061034a9190612b53565b610c19565b60405161035c919061337b565b60405180910390f35b61037f600480360381019061037a9190612a4d565b610d01565b005b61039b60048036038101906103969190612b53565b610d49565b6040516103a89190613201565b60405180910390f35b6103cb60048036038101906103c69190612b53565b61102c565b005b6103e760048036038101906103e29190612a76565b61131e565b6040516103f4919061323e565b60405180910390f35b610417600480360381019061041291906129fe565b611351565b005b610433600480360381019061042e9190612aee565b6113cc565b6040516104409190613300565b60405180910390f35b610451611575565b6040516104699c9b9a999897969594939291906133bf565b60405180910390f35b61047a61161a565b604051610487919061337b565b60405180910390f35b6104aa60048036038101906104a5919061290e565b611627565b6040516104b79190613322565b60405180910390f35b6104da60048036038101906104d59190612aee565b611761565b6040516104e79190613223565b60405180910390f35b61050a60048036038101906105059190612b53565b611791565b604051610517919061337b565b60405180910390f35b61053a600480360381019061053591906129fe565b61181c565b6040516105479190613223565b60405180910390f35b61056a600480360381019061056591906129fe565b6118d3565b005b61058660048036038101906105819190612b17565b611974565b005b6105a2600480360381019061059d91906129fe565b611b89565b005b6105be60048036038101906105b99190612b53565b611c4e565b6040516105cb91906131c4565b60405180910390f35b6105ee60048036038101906105e9919061290e565b611cf9565b6040516105fb919061333e565b60405180910390f35b61061e60048036038101906106199190612b8f565b611d6d565b60405161062b919061337b565b60405180910390f35b61064e60048036038101906106499190612bde565b611f01565b005b61066a600480360381019061066591906129fe565b612048565b005b61068660048036038101906106819190612b53565b612185565b6040516106939190613223565b60405180910390f35b6106b660048036038101906106b1919061290e565b61226c565b6040516106c39190613359565b60405180910390f35b6106e660048036038101906106e191906129af565b612523565b005b61070260048036038101906106fd9190612aee565b6125ec565b60405161070f919061333e565b60405180910390f35b6000806002018460648110610756577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610793577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201905060018180549050106107f65781816000815481106107e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020018190555061081f565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b60006175350160008381526020019081526020016000206001015460006002018560648110610877577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020184606481106108b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018190555050505050565b60008061753f0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6000806000800154600060010154915091509091565b6060600061753d018054806020026020016040519081016040528092919081815260200182805480156109c157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610977575b5050505050905090565b6000806002018360648110610a09577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260648110610a46577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020180549050905092915050565b80600061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610abd91906135bb565b9250508190555060008061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541415610b2c57610b2b826000611974565b5b505050565b600080610b3d84611cf9565b90506000610b4a84611cf9565b9050610b5d828260006175380154610b79565b610b6c57600092505050610b73565b6001925050505b92915050565b600080836000015185600001511015610ba55784600001518460000151610ba091906135bb565b610bba565b83600001518560000151610bb991906135bb565b5b90506000846020015186602001511015610be75785602001518560200151610be291906135bb565b610bfc565b84602001518660200151610bfb91906135bb565b5b9050838211158015610c0e5750838111155b925050509392505050565b600080610c2684846109cb565b905060006002018460648110610c65577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610ca2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201600182610cb691906135bb565b81548110610ced577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015491505092915050565b8060006175330160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000606467ffffffffffffffff811115610d8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610dc757816020015b610db4612745565b815260200190600190039081610dac5790505b5090506000808590505b600a86610dde9190613565565b8110156110205760008590505b600a86610df89190613565565b81101561100c57604051806080016040528060006002018460648110610e47577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610e84577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160006002018460648110610f04577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610f41577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480602002602001604051908101604052809291908181526020018280548015610f9257602002820191906000526020600020905b815481526020019060010190808311610f7e575b5050505050815260200183815260200182815250848481518110610fdf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600183610ff79190613565565b92508080611004906136d1565b915050610deb565b508080611018906136d1565b915050610dd1565b50819250505092915050565b60006002018260648110611069577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020181606481106110a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018054806110e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60019003818190600052602060002001600090559055600061110583836109cb565b9050600081111561129257600080600201846064811061114e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836064811061118b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201600161119e86866109cb565b6111a891906135bb565b815481106111df577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905060006175350160008281526020019081526020016000206001015460006002018560648110611244577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460648110611281577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018190555050611319565b60008060020184606481106112d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836064811061130d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101819055505b505050565b60608160000151826020015160405160200161133b929190613198565b6040516020818303038152906040529050919050565b61135c826001611974565b80600061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546113c09190613565565b92505081905550505050565b6113d4612783565b6000617535016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482018054806020026020016040519081016040528092919081815260200182805480156114b557602002820191906000526020600020905b8154815260200190600101908083116114a1575b505050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561150d57602002820191906000526020600020905b8154815260200190600101908083116114f9575b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561156557602002820191906000526020600020905b815481526020019060010190808311611551575b5050505050815250509050919050565b6000806000015490806001015490806175320160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175320160149054906101000a900460ff1690806175330160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175360154908061753701549080617538015490806175390154908061753a0154908061753b0154908061753c015490508c565b6000806175360154905090565b61162f6127d5565b600061753e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b60008061753401600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b60008060020183606481106117cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826064811061180c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010154905092915050565b60008061182885611cf9565b90506000806000015485108015611843575060006001015484105b8015611850575060008510155b801561185d575060008410155b90508061186f576000925050506118cc565b60006040518060400160405280878152602001868152509050611899818460006175370154610b79565b6118a957600093505050506118cc565b6118b38686612185565b156118c457600093505050506118cc565b600193505050505b9392505050565b81600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006016000018190555080600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160010181905550505050565b60008060005b60006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611a70578460006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611a44577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001541415611a5d57809250600191505b8080611a68906136d1565b91505061197a565b5082611b0b578015611b065760006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611af7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b611b83565b8215611b825780611b815760006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b8260006002018360648110611bc7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260648110611c04577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000806002018360648110611c8c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260648110611cc9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b611d0161283a565b600061753e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601604051806040016040529081600082015481526020016001820154815250509050919050565b6000806002018460648110611dab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611de8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490508210611e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2b906132c0565b60405180910390fd5b60006002018460648110611e71577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611eae577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018281548110611eed577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490509392505050565b6001151581151514611fa9578160006002018560648110611f4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460648110611f88577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001016000828254611f9e91906135bb565b925050819055612041565b8160006002018560648110611fe7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460648110612024577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101600082825461203a9190613565565b9250508190555b5050505050565b600061205333611cf9565b9050600061206085611cf9565b90508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156120d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c8906132e0565b60405180910390fd5b6120dd82826005610b79565b61211c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161211390613260565b60405180910390fd5b8261212733866108c5565b1015612168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215f90613280565b60405180910390fd5b612173338585610a59565b61217e858585611351565b5050505050565b60008073ffffffffffffffffffffffffffffffffffffffff166121a88484611c4e565b73ffffffffffffffffffffffffffffffffffffffff16146121cc5760019050612266565b600080600201846064811061220a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110612247577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018054905011156122615760019050612266565b600090505b92915050565b612274612854565b6000806175410160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff811115612300577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561232e5781602001602082028036833780820191505090505b50905060005b82811015612473576000806175410160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106123b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002054838381518110612453577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505050808061246b906136d1565b915050612334565b50604051806040016040528060006175410160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561250c57602002820191906000526020600020905b8154815260200190600101908083116124f8575b505050505081526020018281525092505050919050565b806125895781600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461257e91906135bb565b9250508190556125e6565b81600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546125df9190613565565b9250508190555b50505050565b6125f461283a565b6000806126068460006001015461268b565b9150915060008061261c866000600101546126e8565b9150915083158061262b575081155b1561266b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612662906132a0565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b60008060008314156126a357600080915091506126e1565b60018385816126db577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b6000806000831415612700576000809150915061273e565b6001838581612738577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b60405180610100016040528060001515815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200161283461283a565b81525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b60008135905061287d81613860565b92915050565b60008135905061289281613877565b92915050565b6000813590506128a78161388e565b92915050565b6000604082840312156128bf57600080fd5b6128c96040613479565b905060006128d9848285016128f9565b60008301525060206128ed848285016128f9565b60208301525092915050565b600081359050612908816138a5565b92915050565b60006020828403121561292057600080fd5b600061292e8482850161286e565b91505092915050565b6000806040838503121561294a57600080fd5b60006129588582860161286e565b92505060206129698582860161286e565b9150509250929050565b6000806040838503121561298657600080fd5b60006129948582860161286e565b92505060206129a5858286016128f9565b9150509250929050565b6000806000606084860312156129c457600080fd5b60006129d28682870161286e565b93505060206129e3868287016128f9565b92505060406129f486828701612883565b9150509250925092565b600080600060608486031215612a1357600080fd5b6000612a218682870161286e565b9350506020612a32868287016128f9565b9250506040612a43868287016128f9565b9150509250925092565b600060208284031215612a5f57600080fd5b6000612a6d84828501612898565b91505092915050565b600060408284031215612a8857600080fd5b6000612a96848285016128ad565b91505092915050565b600080600060a08486031215612ab457600080fd5b6000612ac2868287016128ad565b9350506040612ad3868287016128ad565b9250506080612ae4868287016128f9565b9150509250925092565b600060208284031215612b0057600080fd5b6000612b0e848285016128f9565b91505092915050565b60008060408385031215612b2a57600080fd5b6000612b38858286016128f9565b9250506020612b4985828601612883565b9150509250929050565b60008060408385031215612b6657600080fd5b6000612b74858286016128f9565b9250506020612b85858286016128f9565b9150509250929050565b600080600060608486031215612ba457600080fd5b6000612bb2868287016128f9565b9350506020612bc3868287016128f9565b9250506040612bd4868287016128f9565b9150509250925092565b60008060008060808587031215612bf457600080fd5b6000612c02878288016128f9565b9450506020612c13878288016128f9565b9350506040612c24878288016128f9565b9250506060612c3587828801612883565b91505092959194509250565b6000612c4d8383612c85565b60208301905092915050565b6000612c658383613100565b905092915050565b6000612c798383613163565b60208301905092915050565b612c8e816135ef565b82525050565b612c9d816135ef565b82525050565b6000612cae826134ce565b612cb88185613521565b9350612cc38361349e565b8060005b83811015612cf4578151612cdb8882612c41565b9750612ce6836134fa565b925050600181019050612cc7565b5085935050505092915050565b6000612d0c826134d9565b612d168185613532565b935083602082028501612d28856134ae565b8060005b85811015612d645784840389528151612d458582612c59565b9450612d5083613507565b925060208a01995050600181019050612d2c565b50829750879550505050505092915050565b6000612d81826134e4565b612d8b8185613543565b9350612d96836134be565b8060005b83811015612dc7578151612dae8882612c6d565b9750612db983613514565b925050600181019050612d9a565b5085935050505092915050565b612ddd81613601565b82525050565b612dec81613601565b82525050565b612dfb81613649565b82525050565b6000612e0c826134ef565b612e168185613554565b9350612e2681856020860161366d565b612e2f81613782565b840191505092915050565b6000612e47601483613554565b9150612e5282613793565b602082019050919050565b6000612e6a601a83613554565b9150612e75826137bc565b602082019050919050565b6000612e8d601983613554565b9150612e98826137e5565b602082019050919050565b6000612eb0601683613554565b9150612ebb8261380e565b602082019050919050565b6000612ed3602083613554565b9150612ede82613837565b602082019050919050565b600061012083016000830151612f026000860182612dd4565b506020830151612f156020860182612dd4565b506040830151612f286040860182612dd4565b506060830151612f3b6060860182613163565b506080830151612f4e6080860182613163565b5060a0830151612f6160a0860182613163565b5060c083015184820360c0860152612f798282612d76565b91505060e083015184820360e0860152612f938282612d76565b915050610100830151848203610100860152612faf8282612d76565b9150508091505092915050565b61012082016000820151612fd36000850182612dd4565b506020820151612fe66020850182612dd4565b506040820151612ff96040850182613163565b50606082015161300c6060850182612c85565b50608082015161301f6080850182613163565b5060a082015161303260a0850182613163565b5060c082015161304560c0850182613163565b5060e082015161305860e085018261305e565b50505050565b6040820160008201516130746000850182613163565b5060208201516130876020850182613163565b50505050565b6040820160008201516130a36000850182613163565b5060208201516130b66020850182613163565b50505050565b600060408301600083015184820360008601526130d98282612d76565b915050602083015184820360208601526130f38282612d76565b9150508091505092915050565b60006080830160008301516131186000860182612c85565b50602083015184820360208601526131308282612d76565b91505060408301516131456040860182613163565b5060608301516131586060860182613163565b508091505092915050565b61316c8161363f565b82525050565b61317b8161363f565b82525050565b61319261318d8261363f565b61371a565b82525050565b60006131a48285613181565b6020820191506131b48284613181565b6020820191508190509392505050565b60006020820190506131d96000830184612c94565b92915050565b600060208201905081810360008301526131f98184612ca3565b905092915050565b6000602082019050818103600083015261321b8184612d01565b905092915050565b60006020820190506132386000830184612de3565b92915050565b600060208201905081810360008301526132588184612e01565b905092915050565b6000602082019050818103600083015261327981612e3a565b9050919050565b6000602082019050818103600083015261329981612e5d565b9050919050565b600060208201905081810360008301526132b981612e80565b9050919050565b600060208201905081810360008301526132d981612ea3565b9050919050565b600060208201905081810360008301526132f981612ec6565b9050919050565b6000602082019050818103600083015261331a8184612ee9565b905092915050565b6000610120820190506133386000830184612fbc565b92915050565b6000604082019050613353600083018461308d565b92915050565b6000602082019050818103600083015261337381846130bc565b905092915050565b60006020820190506133906000830184613172565b92915050565b60006040820190506133ab6000830185613172565b6133b86020830184613172565b9392505050565b6000610180820190506133d5600083018f613172565b6133e2602083018e613172565b6133ef604083018d612c94565b6133fc606083018c612de3565b613409608083018b612df2565b61341660a083018a613172565b61342360c0830189613172565b61343060e0830188613172565b61343e610100830187613172565b61344c610120830186613172565b61345a610140830185613172565b613468610160830184613172565b9d9c50505050505050505050505050565b6000613483613494565b905061348f82826136a0565b919050565b6000604051905090565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006135708261363f565b915061357b8361363f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156135b0576135af613724565b5b828201905092915050565b60006135c68261363f565b91506135d18361363f565b9250828210156135e4576135e3613724565b5b828203905092915050565b60006135fa8261361f565b9050919050565b60008115159050919050565b6000613618826135ef565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006136548261365b565b9050919050565b60006136668261361f565b9050919050565b60005b8381101561368b578082015181840152602081019050613670565b8381111561369a576000848401525b50505050565b6136a982613782565b810181811067ffffffffffffffff821117156136c8576136c7613753565b5b80604052505050565b60006136dc8261363f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561370f5761370e613724565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f73746f726167652f726563697069656e742d73616d652d61732d73656e646572600082015250565b613869816135ef565b811461387457600080fd5b50565b61388081613601565b811461388b57600080fd5b50565b6138978161360d565b81146138a257600080fd5b50565b6138ae8161363f565b81146138b957600080fd5b5056fea2646970667358221220ea10abac3fa7db12965b26bdd51dd1408cbb821cb5f4fa504910e9b4e51de60564736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
