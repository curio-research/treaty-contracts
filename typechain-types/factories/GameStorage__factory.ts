/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeTopLevelStrengthAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "_encodePos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_getTopLevelStrengthAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "contract Epoch",
        name: "epochController",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "moveRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Epoch",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setEpochController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613974806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80638bce7fab1161011a578063ad7c6cdc116100ad578063dc8afb631161007c578063dc8afb6314610650578063e4c451e91461066c578063f095277c1461069c578063f17dd707146106cc578063fad86c3c146106e8576101fb565b8063ad7c6cdc146105a4578063be565940146105d4578063be947ce014610604578063d0e600dc14610634576101fb565b8063a54b6e99116100e9578063a54b6e9914610520578063a93edcf914610550578063aae1eeac1461056c578063ac70cc7914610588576101fb565b80638bce7fab14610472578063908b9f17146104905780639889c321146104c05780639bb1e204146104f0576101fb565b80635923b9a4116101925780635de24e18116101615780635de24e18146103cd57806379564688146103fd578063801b83db1461041957806386b714e214610449576101fb565b80635923b9a4146103355780635a9c0644146103655780635d2f8585146103815780635d7d8041146103b1576101fb565b80633f4105fc116101ce5780633f4105fc14610289578063487d2080146102b957806348c5a716146102d55780634a4e51b314610305576101fb565b806306ae3d02146102005780631ccd4c151461021c5780632c190c621461024c5780633f261e071461026b575b600080fd5b61021a60048036038101906102159190612bcc565b610718565b005b610236600480360381019061023191906129b0565b6108c5565b60405161024391906133fd565b60405180910390f35b610254610923565b604051610262929190613418565b60405180910390f35b610273610939565b6040516102809190613261565b60405180910390f35b6102a3600480360381019061029e9190612b90565b6109cb565b6040516102b091906133fd565b60405180910390f35b6102d360048036038101906102ce9190612a3b565b610a59565b005b6102ef60048036038101906102ea9190612974565b610b31565b6040516102fc91906132a5565b60405180910390f35b61031f600480360381019061031a9190612adc565b610b79565b60405161032c91906132a5565b60405180910390f35b61034f600480360381019061034a9190612b90565b610c19565b60405161035c91906133fd565b60405180910390f35b61037f600480360381019061037a9190612a8a565b610d01565b005b61039b60048036038101906103969190612b90565b610d49565b6040516103a89190613283565b60405180910390f35b6103cb60048036038101906103c69190612b90565b61102c565b005b6103e760048036038101906103e29190612ab3565b61131e565b6040516103f491906132c0565b60405180910390f35b61041760048036038101906104129190612a3b565b611351565b005b610433600480360381019061042e9190612b2b565b6113cc565b6040516104409190613382565b60405180910390f35b610451611575565b6040516104699c9b9a99989796959493929190613441565b60405180910390f35b61047a61161a565b60405161048791906133fd565b60405180910390f35b6104aa60048036038101906104a5919061294b565b611627565b6040516104b791906133a4565b60405180910390f35b6104da60048036038101906104d59190612b2b565b611761565b6040516104e791906132a5565b60405180910390f35b61050a60048036038101906105059190612b90565b611791565b60405161051791906133fd565b60405180910390f35b61053a60048036038101906105359190612a3b565b61181c565b60405161054791906132a5565b60405180910390f35b61056a60048036038101906105659190612a3b565b6118d3565b005b61058660048036038101906105819190612b54565b611974565b005b6105a2600480360381019061059d9190612a3b565b611b89565b005b6105be60048036038101906105b99190612b90565b611c4e565b6040516105cb9190613201565b60405180910390f35b6105ee60048036038101906105e9919061294b565b611cf9565b6040516105fb91906133c0565b60405180910390f35b61061e60048036038101906106199190612bcc565b611d6d565b60405161062b91906133fd565b60405180910390f35b61064e60048036038101906106499190612c1b565b611f01565b005b61066a60048036038101906106659190612a3b565b612048565b005b61068660048036038101906106819190612b90565b6121c2565b60405161069391906132a5565b60405180910390f35b6106b660048036038101906106b1919061294b565b6122a9565b6040516106c391906133db565b60405180910390f35b6106e660048036038101906106e191906129ec565b612560565b005b61070260048036038101906106fd9190612b2b565b612629565b60405161070f91906133c0565b60405180910390f35b6000806002018460648110610756577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610793577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201905060018180549050106107f65781816000815481106107e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020018190555061081f565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b60006175350160008381526020019081526020016000206001015460006002018560648110610877577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020184606481106108b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018190555050505050565b60008061753f0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6000806000800154600060010154915091509091565b6060600061753d018054806020026020016040519081016040528092919081815260200182805480156109c157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610977575b5050505050905090565b6000806002018360648110610a09577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260648110610a46577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020180549050905092915050565b80600061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610abd919061363d565b9250508190555060008061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541415610b2c57610b2b826000611974565b5b505050565b600080610b3d84611cf9565b90506000610b4a84611cf9565b9050610b5d828260006175380154610b79565b610b6c57600092505050610b73565b6001925050505b92915050565b600080836000015185600001511015610ba55784600001518460000151610ba0919061363d565b610bba565b83600001518560000151610bb9919061363d565b5b90506000846020015186602001511015610be75785602001518560200151610be2919061363d565b610bfc565b84602001518660200151610bfb919061363d565b5b9050838211158015610c0e5750838111155b925050509392505050565b600080610c2684846109cb565b905060006002018460648110610c65577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610ca2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201600182610cb6919061363d565b81548110610ced577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015491505092915050565b8060006175330160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000606467ffffffffffffffff811115610d8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610dc757816020015b610db4612782565b815260200190600190039081610dac5790505b5090506000808590505b600a86610dde91906135e7565b8110156110205760008590505b600a86610df891906135e7565b81101561100c57604051806080016040528060006002018460648110610e47577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610e84577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160006002018460648110610f04577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610f41577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480602002602001604051908101604052809291908181526020018280548015610f9257602002820191906000526020600020905b815481526020019060010190808311610f7e575b5050505050815260200183815260200182815250848481518110610fdf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600183610ff791906135e7565b9250808061100490613753565b915050610deb565b50808061101890613753565b915050610dd1565b50819250505092915050565b60006002018260648110611069577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020181606481106110a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018054806110e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60019003818190600052602060002001600090559055600061110583836109cb565b9050600081111561129257600080600201846064811061114e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836064811061118b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201600161119e86866109cb565b6111a8919061363d565b815481106111df577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905060006175350160008281526020019081526020016000206001015460006002018560648110611244577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460648110611281577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018190555050611319565b60008060020184606481106112d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836064811061130d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101819055505b505050565b60608160000151826020015160405160200161133b9291906131d5565b6040516020818303038152906040529050919050565b61135c826001611974565b80600061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546113c091906135e7565b92505081905550505050565b6113d46127c0565b6000617535016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482018054806020026020016040519081016040528092919081815260200182805480156114b557602002820191906000526020600020905b8154815260200190600101908083116114a1575b505050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561150d57602002820191906000526020600020905b8154815260200190600101908083116114f9575b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561156557602002820191906000526020600020905b815481526020019060010190808311611551575b5050505050815250509050919050565b6000806000015490806001015490806175320160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175320160149054906101000a900460ff1690806175330160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175360154908061753701549080617538015490806175390154908061753a0154908061753b0154908061753c015490508c565b6000806175360154905090565b61162f612812565b600061753e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b60008061753401600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b60008060020183606481106117cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826064811061180c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010154905092915050565b60008061182885611cf9565b90506000806000015485108015611843575060006001015484105b8015611850575060008510155b801561185d575060008410155b90508061186f576000925050506118cc565b60006040518060400160405280878152602001868152509050611899818460006175370154610b79565b6118a957600093505050506118cc565b6118b386866121c2565b156118c457600093505050506118cc565b600193505050505b9392505050565b81600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006016000018190555080600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160010181905550505050565b60008060005b60006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611a70578460006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611a44577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001541415611a5d57809250600191505b8080611a6890613753565b91505061197a565b5082611b0b578015611b065760006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611af7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b611b83565b8215611b825780611b815760006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b8260006002018360648110611bc7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260648110611c04577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000806002018360648110611c8c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260648110611cc9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b611d01612877565b600061753e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601604051806040016040529081600082015481526020016001820154815250509050919050565b6000806002018460648110611dab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611de8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490508210611e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2b90613342565b60405180910390fd5b60006002018460648110611e71577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611eae577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018281548110611eed577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490509392505050565b6001151581151514611fa9578160006002018560648110611f4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460648110611f88577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001016000828254611f9e919061363d565b925050819055612041565b8160006002018560648110611fe7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460648110612024577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101600082825461203a91906135e7565b9250508190555b5050505050565b600061205333611cf9565b9050600061206085611cf9565b90508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156120d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c890613362565b60405180910390fd5b6120dd82826005610b79565b61211c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612113906132e2565b60405180910390fd5b8261212733866108c5565b1015612168576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161215f90613302565b60405180910390fd5b612173338585610a59565b61217e858585611351565b7f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44338686866040516121b3949392919061321c565b60405180910390a15050505050565b60008073ffffffffffffffffffffffffffffffffffffffff166121e58484611c4e565b73ffffffffffffffffffffffffffffffffffffffff161461220957600190506122a3565b6000806002018460648110612247577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110612284577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020180549050111561229e57600190506122a3565b600090505b92915050565b6122b1612891565b6000806175410160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff81111561233d577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561236b5781602001602082028036833780820191505090505b50905060005b828110156124b0576000806175410160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106123f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002054838381518110612490577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505080806124a890613753565b915050612371565b50604051806040016040528060006175410160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561254957602002820191906000526020600020905b815481526020019060010190808311612535575b505050505081526020018281525092505050919050565b806125c65781600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546125bb919061363d565b925050819055612623565b81600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461261c91906135e7565b9250508190555b50505050565b612631612877565b600080612643846000600101546126c8565b9150915060008061265986600060010154612725565b91509150831580612668575081155b156126a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161269f90613322565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b60008060008314156126e0576000809150915061271e565b6001838581612718577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b600080600083141561273d576000809150915061277b565b6001838581612775577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b60405180610100016040528060001515815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001612871612877565b81525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b6000813590506128ba816138e2565b92915050565b6000813590506128cf816138f9565b92915050565b6000813590506128e481613910565b92915050565b6000604082840312156128fc57600080fd5b61290660406134fb565b9050600061291684828501612936565b600083015250602061292a84828501612936565b60208301525092915050565b60008135905061294581613927565b92915050565b60006020828403121561295d57600080fd5b600061296b848285016128ab565b91505092915050565b6000806040838503121561298757600080fd5b6000612995858286016128ab565b92505060206129a6858286016128ab565b9150509250929050565b600080604083850312156129c357600080fd5b60006129d1858286016128ab565b92505060206129e285828601612936565b9150509250929050565b600080600060608486031215612a0157600080fd5b6000612a0f868287016128ab565b9350506020612a2086828701612936565b9250506040612a31868287016128c0565b9150509250925092565b600080600060608486031215612a5057600080fd5b6000612a5e868287016128ab565b9350506020612a6f86828701612936565b9250506040612a8086828701612936565b9150509250925092565b600060208284031215612a9c57600080fd5b6000612aaa848285016128d5565b91505092915050565b600060408284031215612ac557600080fd5b6000612ad3848285016128ea565b91505092915050565b600080600060a08486031215612af157600080fd5b6000612aff868287016128ea565b9350506040612b10868287016128ea565b9250506080612b2186828701612936565b9150509250925092565b600060208284031215612b3d57600080fd5b6000612b4b84828501612936565b91505092915050565b60008060408385031215612b6757600080fd5b6000612b7585828601612936565b9250506020612b86858286016128c0565b9150509250929050565b60008060408385031215612ba357600080fd5b6000612bb185828601612936565b9250506020612bc285828601612936565b9150509250929050565b600080600060608486031215612be157600080fd5b6000612bef86828701612936565b9350506020612c0086828701612936565b9250506040612c1186828701612936565b9150509250925092565b60008060008060808587031215612c3157600080fd5b6000612c3f87828801612936565b9450506020612c5087828801612936565b9350506040612c6187828801612936565b9250506060612c72878288016128c0565b91505092959194509250565b6000612c8a8383612cc2565b60208301905092915050565b6000612ca2838361313d565b905092915050565b6000612cb683836131a0565b60208301905092915050565b612ccb81613671565b82525050565b612cda81613671565b82525050565b6000612ceb82613550565b612cf581856135a3565b9350612d0083613520565b8060005b83811015612d31578151612d188882612c7e565b9750612d238361357c565b925050600181019050612d04565b5085935050505092915050565b6000612d498261355b565b612d5381856135b4565b935083602082028501612d6585613530565b8060005b85811015612da15784840389528151612d828582612c96565b9450612d8d83613589565b925060208a01995050600181019050612d69565b50829750879550505050505092915050565b6000612dbe82613566565b612dc881856135c5565b9350612dd383613540565b8060005b83811015612e04578151612deb8882612caa565b9750612df683613596565b925050600181019050612dd7565b5085935050505092915050565b612e1a81613683565b82525050565b612e2981613683565b82525050565b612e38816136cb565b82525050565b6000612e4982613571565b612e5381856135d6565b9350612e638185602086016136ef565b612e6c81613804565b840191505092915050565b6000612e846014836135d6565b9150612e8f82613815565b602082019050919050565b6000612ea7601a836135d6565b9150612eb28261383e565b602082019050919050565b6000612eca6019836135d6565b9150612ed582613867565b602082019050919050565b6000612eed6016836135d6565b9150612ef882613890565b602082019050919050565b6000612f106020836135d6565b9150612f1b826138b9565b602082019050919050565b600061012083016000830151612f3f6000860182612e11565b506020830151612f526020860182612e11565b506040830151612f656040860182612e11565b506060830151612f7860608601826131a0565b506080830151612f8b60808601826131a0565b5060a0830151612f9e60a08601826131a0565b5060c083015184820360c0860152612fb68282612db3565b91505060e083015184820360e0860152612fd08282612db3565b915050610100830151848203610100860152612fec8282612db3565b9150508091505092915050565b610120820160008201516130106000850182612e11565b5060208201516130236020850182612e11565b50604082015161303660408501826131a0565b5060608201516130496060850182612cc2565b50608082015161305c60808501826131a0565b5060a082015161306f60a08501826131a0565b5060c082015161308260c08501826131a0565b5060e082015161309560e085018261309b565b50505050565b6040820160008201516130b160008501826131a0565b5060208201516130c460208501826131a0565b50505050565b6040820160008201516130e060008501826131a0565b5060208201516130f360208501826131a0565b50505050565b600060408301600083015184820360008601526131168282612db3565b915050602083015184820360208601526131308282612db3565b9150508091505092915050565b60006080830160008301516131556000860182612cc2565b506020830151848203602086015261316d8282612db3565b915050604083015161318260408601826131a0565b50606083015161319560608601826131a0565b508091505092915050565b6131a9816136c1565b82525050565b6131b8816136c1565b82525050565b6131cf6131ca826136c1565b61379c565b82525050565b60006131e182856131be565b6020820191506131f182846131be565b6020820191508190509392505050565b60006020820190506132166000830184612cd1565b92915050565b60006080820190506132316000830187612cd1565b61323e6020830186612cd1565b61324b60408301856131af565b61325860608301846131af565b95945050505050565b6000602082019050818103600083015261327b8184612ce0565b905092915050565b6000602082019050818103600083015261329d8184612d3e565b905092915050565b60006020820190506132ba6000830184612e20565b92915050565b600060208201905081810360008301526132da8184612e3e565b905092915050565b600060208201905081810360008301526132fb81612e77565b9050919050565b6000602082019050818103600083015261331b81612e9a565b9050919050565b6000602082019050818103600083015261333b81612ebd565b9050919050565b6000602082019050818103600083015261335b81612ee0565b9050919050565b6000602082019050818103600083015261337b81612f03565b9050919050565b6000602082019050818103600083015261339c8184612f26565b905092915050565b6000610120820190506133ba6000830184612ff9565b92915050565b60006040820190506133d560008301846130ca565b92915050565b600060208201905081810360008301526133f581846130f9565b905092915050565b600060208201905061341260008301846131af565b92915050565b600060408201905061342d60008301856131af565b61343a60208301846131af565b9392505050565b600061018082019050613457600083018f6131af565b613464602083018e6131af565b613471604083018d612cd1565b61347e606083018c612e20565b61348b608083018b612e2f565b61349860a083018a6131af565b6134a560c08301896131af565b6134b260e08301886131af565b6134c06101008301876131af565b6134ce6101208301866131af565b6134dc6101408301856131af565b6134ea6101608301846131af565b9d9c50505050505050505050505050565b6000613505613516565b90506135118282613722565b919050565b6000604051905090565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006135f2826136c1565b91506135fd836136c1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613632576136316137a6565b5b828201905092915050565b6000613648826136c1565b9150613653836136c1565b925082821015613666576136656137a6565b5b828203905092915050565b600061367c826136a1565b9050919050565b60008115159050919050565b600061369a82613671565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006136d6826136dd565b9050919050565b60006136e8826136a1565b9050919050565b60005b8381101561370d5780820151818401526020810190506136f2565b8381111561371c576000848401525b50505050565b61372b82613804565b810181811067ffffffffffffffff8211171561374a576137496137d5565b5b80604052505050565b600061375e826136c1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613791576137906137a6565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f73746f726167652f726563697069656e742d73616d652d61732d73656e646572600082015250565b6138eb81613671565b81146138f657600080fd5b50565b61390281613683565b811461390d57600080fd5b50565b6139198161368f565b811461392457600080fd5b50565b613930816136c1565b811461393b57600080fd5b5056fea26469706673582212200aa06cab70079150beab7e9f63d431c62bb582ba0b3549f5ebf72f077ea3f86964736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
