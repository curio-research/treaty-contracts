/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GameStorage, GameStorageInterface } from "../GameStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeTopLevelStrengthAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "_encodePos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTileData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "topLevelStrength",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopLevelStrengthAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
      {
        internalType: "contract Epoch",
        name: "epochController",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Epoch",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setEpochController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613b68806100206000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80638bce7fab1161011a578063c537e3e5116100ad578063f095277c1161007c578063f095277c14610676578063f09c4b26146106a6578063f0bfd52b146106d6578063f17dd70714610706578063fad86c3c1461072257610206565b8063c537e3e5146105f2578063d817884714610622578063dc8afb631461063e578063dd597d271461065a57610206565b8063b0b49ba5116100e9578063b0b49ba514610546578063b62b713014610576578063be56594014610592578063bfc525a2146105c257610206565b80638bce7fab146104ac578063908b9f17146104ca5780639889c321146104fa578063aae1eeac1461052a57610206565b80635a9c06441161019d578063795646881161016c57806379564688146103ec578063801b83db1461040857806386b714e21461043857806386e68be31461046057806387fc55491461047c57610206565b80635a9c0644146103405780635de24e181461035c57806367ae06341461038c5780636b7af8cb146103bc57610206565b8063487d2080116101d9578063487d20801461029457806348c5a716146102b05780634a4e51b3146102e057806350607fee1461031057610206565b80631ccd4c151461020b578063201549ac1461023b5780632c190c62146102575780633f261e0714610276575b600080fd5b61022560048036038101906102209190612bb7565b610752565b6040516102329190613600565b60405180910390f35b61025560048036038101906102509190612cba565b6107b0565b005b61025f610abf565b60405161026d92919061361b565b60405180910390f35b61027e610ad5565b60405161028b9190613442565b60405180910390f35b6102ae60048036038101906102a99190612c42565b610b67565b005b6102ca60048036038101906102c59190612b3f565b610c3f565b6040516102d79190613486565b60405180910390f35b6102fa60048036038101906102f59190612ce3565b610c87565b6040516103079190613486565b60405180910390f35b61032a60048036038101906103259190612cba565b610d27565b6040516103379190613464565b60405180910390f35b61035a60048036038101906103559190612c91565b611019565b005b61037660048036038101906103719190612cba565b611061565b60405161038391906134a1565b60405180910390f35b6103a660048036038101906103a19190612cba565b611094565b6040516103b391906133e2565b60405180910390f35b6103d660048036038101906103d19190612cba565b611146565b6040516103e391906135de565b60405180910390f35b61040660048036038101906104019190612c42565b61129e565b005b610422600480360381019061041d9190612dbd565b611319565b60405161042f9190613563565b60405180910390f35b6104406114c2565b6040516104579b9a99989796959493929190613644565b60405180910390f35b61047a60048036038101906104759190612b7b565b611560565b005b61049660048036038101906104919190612b7b565b61162c565b6040516104a39190613486565b60405180910390f35b6104b46116d0565b6040516104c19190613600565b60405180910390f35b6104e460048036038101906104df9190612b16565b6116dd565b6040516104f19190613585565b60405180910390f35b610514600480360381019061050f9190612dbd565b6117fb565b6040516105219190613486565b60405180910390f35b610544600480360381019061053f9190612de6565b61182b565b005b610560600480360381019061055b9190612d32565b611a40565b60405161056d9190613600565b60405180910390f35b610590600480360381019061058b9190612b7b565b611be3565b005b6105ac60048036038101906105a79190612b16565b611c45565b6040516105b991906135a1565b60405180910390f35b6105dc60048036038101906105d79190612cba565b611cb9565b6040516105e99190613600565b60405180910390f35b61060c60048036038101906106079190612cba565b611d4b565b6040516106199190613486565b60405180910390f35b61063c60048036038101906106379190612d32565b611e38565b005b61065860048036038101906106539190612c42565b611ff4565b005b610674600480360381019061066f9190612d6e565b61216e565b005b610690600480360381019061068b9190612b16565b6122c4565b60405161069d91906135bc565b60405180910390f35b6106c060048036038101906106bb9190612cba565b61257b565b6040516106cd9190613600565b60405180910390f35b6106f060048036038101906106eb9190612cba565b612610565b6040516106fd9190613600565b60405180910390f35b610720600480360381019061071b9190612bf3565b6126fe565b005b61073c60048036038101906107379190612dbd565b6127c7565b60405161074991906135a1565b60405180910390f35b60008061753d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b60006002018160000151606481106107f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201816020015160648110610832577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020180548061086f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905560006108908261257b565b90506000811115610a2c576000806002018360000151606481106108dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020183602001516064811061091e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020160016109308561257b565b61093a9190613831565b81548110610971577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905060006175340160008281526020019081526020016000206001015460006002018460000151606481106109da577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110610a1b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018190555050610abb565b600080600201836000015160648110610a6e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610aaf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101819055505b5050565b6000806000800154600060010154915091509091565b6060600061753b01805480602002602001604051908101604052809291908181526020018280548015610b5d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b13575b5050505050905090565b80600061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254610bcb9190613831565b9250508190555060008061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541415610c3a57610c3982600061182b565b5b505050565b600080610c4b84611c45565b90506000610c5884611c45565b9050610c6b828260006175360154610c87565b610c7a57600092505050610c81565b6001925050505b92915050565b600080836000015185600001511015610cb35784600001518460000151610cae9190613831565b610cc8565b83600001518560000151610cc79190613831565b5b90506000846020015186602001511015610cf55785602001518560200151610cf09190613831565b610d0a565b84602001518660200151610d099190613831565b5b9050838211158015610d1c5750838111155b925050509392505050565b60606000606467ffffffffffffffff811115610d6c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610da557816020015b610d92612920565b815260200190600190039081610d8a5790505b509050600080846000015190505b600a8560000151610dc491906137db565b81101561100e576000856020015190505b600a8660200151610de691906137db565b811015610ffa57604051806080016040528060006002018460648110610e35577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610e72577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160006002018460648110610ef2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110610f2f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480602002602001604051908101604052809291908181526020018280548015610f8057602002820191906000526020600020905b815481526020019060010190808311610f6c575b5050505050815260200183815260200182815250848481518110610fcd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600183610fe591906137db565b92508080610ff290613947565b915050610dd5565b50808061100690613947565b915050610db3565b508192505050919050565b8060006175400160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60608160000151826020015160405160200161107e9291906133b6565b6040516020818303038152906040529050919050565b6000806002018260000151606481106110d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611117577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61114e61295e565b600060020182600001516064811061118f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260200151606481106111d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180548060200260200160405190810160405280929190818152602001828054801561128e57602002820191906000526020600020905b81548152602001906001019080831161127a575b5050505050815250509050919050565b6112a982600161182b565b80600061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600082825461130d91906137db565b92505081905550505050565b611321612995565b6000617534016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561140257602002820191906000526020600020905b8154815260200190600101908083116113ee575b505050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561145a57602002820191906000526020600020905b815481526020019060010190808311611446575b50505050508152602001600682018054806020026020016040519081016040528092919081815260200182805480156114b257602002820191906000526020600020905b81548152602001906001019080831161149e575b5050505050815250509050919050565b6000806000015490806001015490806175320160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175320160149054906101000a900460ff169080617535015490806175360154908061753701549080617538015490806175390154908061753a015490806175400160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508b565b8160006002018260000151606481106115a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260200151606481106115e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008061163884611c45565b905060008060000154846000015110801561165b57506000600101548460200151105b801561166c57506000846000015110155b801561167d57506000846020015110155b90508061168f576000925050506116ca565b61169b84836001610c87565b6116aa576000925050506116ca565b6116b384611d4b565b156116c3576000925050506116ca565b6001925050505b92915050565b6000806175350154905090565b6116e56129e7565b600061753c0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b60008061753301600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b60008060005b600061753f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156119275784600061753f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106118fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154141561191457809250600191505b808061191f90613947565b915050611831565b50826119c25780156119bd57600061753f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106119ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b611a3a565b8215611a395780611a3857600061753f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b600080600201836000015160648110611a82577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611ac3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490508210611b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0690613523565b60405180910390fd5b6000600201836000015160648110611b50577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611b91577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018281548110611bd0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b80600061753c0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160008201518160000155602082015181600101559050505050565b611c4d612a42565b600061753c0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601604051806040016040529081600082015481526020016001820154815250509050919050565b600080600201826000015160648110611cfb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611d3c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16611d6d83611094565b73ffffffffffffffffffffffffffffffffffffffff1614611d915760019050611e33565b600080600201836000015160648110611dd3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611e14577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490501115611e2e5760019050611e33565b600090505b919050565b600080600201836000015160648110611e7a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110611ebb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020190506001818054905010611f1e578181600081548110611f0b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550611f47565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b6000617534016000838152602001908152602001600020600101546000600201846000015160648110611fa3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110611fe4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010181905550505050565b6000611fff33611c45565b9050600061200c85611c45565b90508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561207d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207490613543565b60405180910390fd5b61208982826005610c87565b6120c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120bf906134c3565b60405180910390fd5b826120d33386610752565b1015612114576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210b906134e3565b60405180910390fd5b61211f338585610b67565b61212a85858561129e565b7f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc443386868660405161215f94939291906133fd565b60405180910390a15050505050565b600115158115151461221e578160006002018460000151606481106121bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460200151606481106121fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010160008282546122139190613831565b9250508190556122be565b816000600201846000015160648110612260577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460200151606481106122a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010160008282546122b791906137db565b9250508190555b50505050565b6122cc612a5c565b60008061753f0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff811115612358577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156123865781602001602082028036833780820191505090505b50905060005b828110156124cb5760008061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612410577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600061753d0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828152602001908152602001600020548383815181106124ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505080806124c390613947565b91505061238c565b506040518060400160405280600061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561256457602002820191906000526020600020905b815481526020019060010190808311612550575b505050505081526020018281525092505050919050565b6000806002018260000151606481106125bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260200151606481106125fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490509050919050565b60008061261c8361257b565b9050600060020183600001516064811061265f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360200151606481106126a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002016001826126b49190613831565b815481106126eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154915050919050565b806127645781600061753c0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546127599190613831565b9250508190556127c1565b81600061753c0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546127ba91906137db565b9250508190555b50505050565b6127cf612a42565b6000806127e184600060010154612866565b915091506000806127f7866000600101546128c3565b91509150831580612806575081155b15612846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161283d90613503565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b600080600083141561287e57600080915091506128bc565b60018385816128b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b60008060008314156128db5760008091509150612919565b6001838581612913577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b6040518060e0016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001612a3c612a42565b81525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b600081359050612a8581613ad6565b92915050565b600081359050612a9a81613aed565b92915050565b600081359050612aaf81613b04565b92915050565b600060408284031215612ac757600080fd5b612ad160406136ef565b90506000612ae184828501612b01565b6000830152506020612af584828501612b01565b60208301525092915050565b600081359050612b1081613b1b565b92915050565b600060208284031215612b2857600080fd5b6000612b3684828501612a76565b91505092915050565b60008060408385031215612b5257600080fd5b6000612b6085828601612a76565b9250506020612b7185828601612a76565b9150509250929050565b60008060608385031215612b8e57600080fd5b6000612b9c85828601612a76565b9250506020612bad85828601612ab5565b9150509250929050565b60008060408385031215612bca57600080fd5b6000612bd885828601612a76565b9250506020612be985828601612b01565b9150509250929050565b600080600060608486031215612c0857600080fd5b6000612c1686828701612a76565b9350506020612c2786828701612b01565b9250506040612c3886828701612a8b565b9150509250925092565b600080600060608486031215612c5757600080fd5b6000612c6586828701612a76565b9350506020612c7686828701612b01565b9250506040612c8786828701612b01565b9150509250925092565b600060208284031215612ca357600080fd5b6000612cb184828501612aa0565b91505092915050565b600060408284031215612ccc57600080fd5b6000612cda84828501612ab5565b91505092915050565b600080600060a08486031215612cf857600080fd5b6000612d0686828701612ab5565b9350506040612d1786828701612ab5565b9250506080612d2886828701612b01565b9150509250925092565b60008060608385031215612d4557600080fd5b6000612d5385828601612ab5565b9250506040612d6485828601612b01565b9150509250929050565b600080600060808486031215612d8357600080fd5b6000612d9186828701612ab5565b9350506040612da286828701612b01565b9250506060612db386828701612a8b565b9150509250925092565b600060208284031215612dcf57600080fd5b6000612ddd84828501612b01565b91505092915050565b60008060408385031215612df957600080fd5b6000612e0785828601612b01565b9250506020612e1885828601612a8b565b9150509250929050565b6000612e2e8383612e66565b60208301905092915050565b6000612e4683836132ce565b905092915050565b6000612e5a8383613381565b60208301905092915050565b612e6f81613865565b82525050565b612e7e81613865565b82525050565b6000612e8f82613744565b612e998185613797565b9350612ea483613714565b8060005b83811015612ed5578151612ebc8882612e22565b9750612ec783613770565b925050600181019050612ea8565b5085935050505092915050565b6000612eed8261374f565b612ef781856137a8565b935083602082028501612f0985613724565b8060005b85811015612f455784840389528151612f268582612e3a565b9450612f318361377d565b925060208a01995050600181019050612f0d565b50829750879550505050505092915050565b6000612f628261375a565b612f6c81856137b9565b9350612f7783613734565b8060005b83811015612fa8578151612f8f8882612e4e565b9750612f9a8361378a565b925050600181019050612f7b565b5085935050505092915050565b612fbe81613877565b82525050565b612fcd81613877565b82525050565b612fdc816138bf565b82525050565b6000612fed82613765565b612ff781856137ca565b93506130078185602086016138e3565b613010816139f8565b840191505092915050565b60006130286014836137ca565b915061303382613a09565b602082019050919050565b600061304b601a836137ca565b915061305682613a32565b602082019050919050565b600061306e6019836137ca565b915061307982613a5b565b602082019050919050565b60006130916016836137ca565b915061309c82613a84565b602082019050919050565b60006130b46020836137ca565b91506130bf82613aad565b602082019050919050565b6000610120830160008301516130e36000860182612fb5565b5060208301516130f66020860182612fb5565b5060408301516131096040860182612fb5565b50606083015161311c6060860182613381565b50608083015161312f6080860182613381565b5060a083015161314260a0860182613381565b5060c083015184820360c086015261315a8282612f57565b91505060e083015184820360e08601526131748282612f57565b9150506101008301518482036101008601526131908282612f57565b9150508091505092915050565b610100820160008201516131b46000850182612fb5565b5060208201516131c76020850182613381565b5060408201516131da6040850182612e66565b5060608201516131ed6060850182613381565b5060808201516132006080850182613381565b5060a082015161321360a0850182613381565b5060c082015161322660c085018261322c565b50505050565b6040820160008201516132426000850182613381565b5060208201516132556020850182613381565b50505050565b6040820160008201516132716000850182613381565b5060208201516132846020850182613381565b50505050565b600060408301600083015184820360008601526132a78282612f57565b915050602083015184820360208601526132c18282612f57565b9150508091505092915050565b60006080830160008301516132e66000860182612e66565b50602083015184820360208601526132fe8282612f57565b91505060408301516133136040860182613381565b5060608301516133266060860182613381565b508091505092915050565b60006060830160008301516133496000860182612e66565b50602083015161335c6020860182613381565b50604083015184820360408601526133748282612f57565b9150508091505092915050565b61338a816138b5565b82525050565b613399816138b5565b82525050565b6133b06133ab826138b5565b613990565b82525050565b60006133c2828561339f565b6020820191506133d2828461339f565b6020820191508190509392505050565b60006020820190506133f76000830184612e75565b92915050565b60006080820190506134126000830187612e75565b61341f6020830186612e75565b61342c6040830185613390565b6134396060830184613390565b95945050505050565b6000602082019050818103600083015261345c8184612e84565b905092915050565b6000602082019050818103600083015261347e8184612ee2565b905092915050565b600060208201905061349b6000830184612fc4565b92915050565b600060208201905081810360008301526134bb8184612fe2565b905092915050565b600060208201905081810360008301526134dc8161301b565b9050919050565b600060208201905081810360008301526134fc8161303e565b9050919050565b6000602082019050818103600083015261351c81613061565b9050919050565b6000602082019050818103600083015261353c81613084565b9050919050565b6000602082019050818103600083015261355c816130a7565b9050919050565b6000602082019050818103600083015261357d81846130ca565b905092915050565b60006101008201905061359b600083018461319d565b92915050565b60006040820190506135b6600083018461325b565b92915050565b600060208201905081810360008301526135d6818461328a565b905092915050565b600060208201905081810360008301526135f88184613331565b905092915050565b60006020820190506136156000830184613390565b92915050565b60006040820190506136306000830185613390565b61363d6020830184613390565b9392505050565b60006101608201905061365a600083018e613390565b613667602083018d613390565b613674604083018c612e75565b613681606083018b612fc4565b61368e608083018a613390565b61369b60a0830189613390565b6136a860c0830188613390565b6136b560e0830187613390565b6136c3610100830186613390565b6136d1610120830185613390565b6136df610140830184612fd3565b9c9b505050505050505050505050565b60006136f961370a565b90506137058282613916565b919050565b6000604051905090565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006137e6826138b5565b91506137f1836138b5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156138265761382561399a565b5b828201905092915050565b600061383c826138b5565b9150613847836138b5565b92508282101561385a5761385961399a565b5b828203905092915050565b600061387082613895565b9050919050565b60008115159050919050565b600061388e82613865565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006138ca826138d1565b9050919050565b60006138dc82613895565b9050919050565b60005b838110156139015780820151818401526020810190506138e6565b83811115613910576000848401525b50505050565b61391f826139f8565b810181811067ffffffffffffffff8211171561393e5761393d6139c9565b5b80604052505050565b6000613952826138b5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156139855761398461399a565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f73746f726167652f726563697069656e742d73616d652d61732d73656e646572600082015250565b613adf81613865565b8114613aea57600080fd5b50565b613af681613877565b8114613b0157600080fd5b50565b613b0d81613883565b8114613b1857600080fd5b50565b613b24816138b5565b8114613b2f57600080fd5b5056fea2646970667358221220c93b8533281cc93801941a84c1a74fc3fbbd89966c51d273521a3f0afda98cd764736f6c63430008040033";

type GameStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameStorage__factory extends ContractFactory {
  constructor(...args: GameStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GameStorage> {
    return super.deploy(overrides || {}) as Promise<GameStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GameStorage {
    return super.attach(address) as GameStorage;
  }
  connect(signer: Signer): GameStorage__factory {
    return super.connect(signer) as GameStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameStorageInterface {
    return new utils.Interface(_abi) as GameStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameStorage {
    return new Contract(address, _abi, signerOrProvider) as GameStorage;
  }
}
