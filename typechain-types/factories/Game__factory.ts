/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Game, GameInterface, ItemWithMetadataStruct } from "../Game";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldHeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startPlayerEnergy",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "_blocks",
        type: "uint256[][]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata[]",
        name: "_items",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_player2",
        type: "address",
      },
    ],
    name: "Attack",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_strength",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_zIndex",
        type: "uint256",
      },
    ],
    name: "AttackItem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_towerPos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "Craft",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "Death",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_zIndex",
        type: "uint256",
      },
    ],
    name: "MineItem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "Move",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "NewPlayer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "Place",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_towerPos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_playerPoints",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_towerPoints",
        type: "uint256",
      },
    ],
    name: "StakeTower",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_towerPos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_playerPoints",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_towerPoints",
        type: "uint256",
      },
    ],
    name: "UnstakeTower",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeTopLevelStrengthAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "_encodePos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "_getStakePointsByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTileData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "topLevelStrength",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopLevelStrengthAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "rewardPerEpoch",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct GameTypes.Tower",
        name: "_tower",
        type: "tuple",
      },
    ],
    name: "addTower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_playerAddr",
        type: "address",
      },
    ],
    name: "attackItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "craft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "getTowerById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rewardPerEpoch",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct GameTypes.Tower",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "initializePlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_playerAddr",
        type: "address",
      },
    ],
    name: "mineItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "move",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
      {
        internalType: "contract Epoch",
        name: "epochController",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Epoch",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setEpochController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162006cca38038062006cca833981810160405281019062000037919062000ad1565b88600080018190555087600060010181905550600160006175350181905550866000617536018190555085600061753701819055508460006175380181905550836000617539018190555082600061753a01819055506000888a6200009d919062000d49565b905060005b81811015620003b4576000620000be826200054160201b60201c565b9050848281518110620000fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600060020182600001516064811062000144577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020182602001516064811062000186577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002019080519060200190620001a2929190620006c0565b506000858381518110620001df577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101515111156200039d5760008583815181106200022b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160018785815181106200026f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101515162000284919062000daa565b81518110620002bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905084818151811062000300577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516060015160006002018360000151606481106200034e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020183602001516064811062000390577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010181905550505b508080620003ab9062000e31565b915050620000a2565b5060005b82518110156200053057828181518110620003fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600061753401600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff021916908315150217905550606082015181600101556080820151816002015560a0820151816003015560c0820151816004019080519060200190620004b7929190620006c0565b5060e0820151816005019080519060200190620004d6929190620006c0565b50610100820151816006019080519060200190620004f6929190620006c0565b509050506001600061753501600082825462000513919062000cec565b925050819055508080620005279062000e31565b915050620003b8565b505050505050505050505062000f4b565b6200054b62000712565b6000806200056a846000600101546200060060201b620040cb1760201c565b915091506000806200058d866000600101546200066060201b620041281760201c565b915091508315806200059d575081155b15620005e0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005d79062000c03565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b60008060008314156200061a576000809150915062000659565b600183858162000653577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b60008060008314156200067a5760008091509150620006b9565b6001838581620006b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b828054828255906000526020600020908101928215620006ff579160200282015b82811115620006fe578251825591602001919060010190620006e1565b5b5090506200070e91906200072c565b5090565b604051806040016040528060008152602001600081525090565b5b80821115620007475760008160009055506001016200072d565b5090565b6000620007626200075c8462000c4e565b62000c25565b905080838252602082019050828560208602820111156200078257600080fd5b60005b85811015620007d157815167ffffffffffffffff811115620007a657600080fd5b808601620007b589826200093a565b8552602085019450602084019350505060018101905062000785565b5050509392505050565b6000620007f2620007ec8462000c7d565b62000c25565b905080838252602082019050828560208602820111156200081257600080fd5b60005b858110156200086157815167ffffffffffffffff8111156200083657600080fd5b8086016200084589826200097e565b8552602085019450602084019350505060018101905062000815565b5050509392505050565b6000620008826200087c8462000cac565b62000c25565b90508083825260208201905082856020860282011115620008a257600080fd5b60005b85811015620008d65781620008bb888262000aba565b845260208401935060208301925050600181019050620008a5565b5050509392505050565b600082601f830112620008f257600080fd5b8151620009048482602086016200074b565b91505092915050565b600082601f8301126200091f57600080fd5b815162000931848260208601620007db565b91505092915050565b600082601f8301126200094c57600080fd5b81516200095e8482602086016200086b565b91505092915050565b600081519050620009788162000f17565b92915050565b600061012082840312156200099257600080fd5b6200099f61012062000c25565b90506000620009b18482850162000967565b6000830152506020620009c78482850162000967565b6020830152506040620009dd8482850162000967565b6040830152506060620009f38482850162000aba565b606083015250608062000a098482850162000aba565b60808301525060a062000a1f8482850162000aba565b60a08301525060c082015167ffffffffffffffff81111562000a4057600080fd5b62000a4e848285016200093a565b60c08301525060e082015167ffffffffffffffff81111562000a6f57600080fd5b62000a7d848285016200093a565b60e08301525061010082015167ffffffffffffffff81111562000a9f57600080fd5b62000aad848285016200093a565b6101008301525092915050565b60008151905062000acb8162000f31565b92915050565b60008060008060008060008060006101208a8c03121562000af157600080fd5b600062000b018c828d0162000aba565b995050602062000b148c828d0162000aba565b985050604062000b278c828d0162000aba565b975050606062000b3a8c828d0162000aba565b965050608062000b4d8c828d0162000aba565b95505060a062000b608c828d0162000aba565b94505060c062000b738c828d0162000aba565b93505060e08a015167ffffffffffffffff81111562000b9157600080fd5b62000b9f8c828d01620008e0565b9250506101008a015167ffffffffffffffff81111562000bbe57600080fd5b62000bcc8c828d016200090d565b9150509295985092959850929598565b600062000beb60198362000cdb565b915062000bf88262000eee565b602082019050919050565b6000602082019050818103600083015262000c1e8162000bdc565b9050919050565b600062000c3162000c44565b905062000c3f828262000dfb565b919050565b6000604051905090565b600067ffffffffffffffff82111562000c6c5762000c6b62000eae565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000c9b5762000c9a62000eae565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000cca5762000cc962000eae565b5b602082029050602081019050919050565b600082825260208201905092915050565b600062000cf98262000df1565b915062000d068362000df1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000d3e5762000d3d62000e7f565b5b828201905092915050565b600062000d568262000df1565b915062000d638362000df1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562000d9f5762000d9e62000e7f565b5b828202905092915050565b600062000db78262000df1565b915062000dc48362000df1565b92508282101562000dda5762000dd962000e7f565b5b828203905092915050565b60008115159050919050565b6000819050919050565b62000e068262000edd565b810181811067ffffffffffffffff8211171562000e285762000e2762000eae565b5b80604052505050565b600062000e3e8262000df1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000e745762000e7362000e7f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b62000f228162000de5565b811462000f2e57600080fd5b50565b62000f3c8162000df1565b811462000f4857600080fd5b50565b615d6f8062000f5b6000396000f3fe608060405234801561001057600080fd5b50600436106102945760003560e01c806386b714e211610167578063c582e468116100ce578063f09c4b2611610087578063f09c4b2614610890578063f0bfd52b146108c0578063f17dd707146108f0578063f3917bd21461090c578063fad86c3c14610928578063ff85eff51461095857610294565b8063c582e468146107d4578063c6123327146107f0578063d81788471461080c578063dc8afb6314610828578063dd597d2714610844578063f095277c1461086057610294565b8063aae1eeac11610120578063aae1eeac146106dc578063b0b49ba5146106f8578063b62b713014610728578063be56594014610744578063bfc525a214610774578063c537e3e5146107a457610294565b806386b714e2146105ea57806386e68be31461061257806387fc55491461062e5780638bce7fab1461065e578063908b9f171461067c5780639889c321146106ac57610294565b806354480bca1161020b5780636b7af8cb116101c45780636b7af8cb1461051a5780636f93315e1461054a57806379564688146105665780637e77eee414610582578063801b83db1461059e57806380e8c9da146105ce57610294565b806354480bca146104225780635a9c0644146104525780635b60fcca1461046e5780635de24e181461048a57806367573095146104ba57806367ae0634146104ea57610294565b80633f261e071161025d5780633f261e071461033c578063460c976c1461035a578063487d20801461037657806348c5a716146103925780634a4e51b3146103c257806350607fee146103f257610294565b80625194d81461029957806319a8bbd8146102b55780631ccd4c15146102d1578063201549ac146103015780632c190c621461031d575b600080fd5b6102b360048036038101906102ae91906146f1565b610974565b005b6102cf60048036038101906102ca9190614601565b6109d6565b005b6102eb60048036038101906102e691906144fe565b610a6f565b6040516102f8919061553e565b60405180910390f35b61031b60048036038101906103169190614601565b610acd565b005b610325610ddc565b604051610333929190615559565b60405180910390f35b610344610df2565b60405161035191906151a5565b60405180910390f35b610374600480360381019061036f91906146b5565b610e84565b005b610390600480360381019061038b9190614589565b61118f565b005b6103ac60048036038101906103a79190614486565b611267565b6040516103b991906151e9565b60405180910390f35b6103dc60048036038101906103d7919061462a565b6112af565b6040516103e991906151e9565b60405180910390f35b61040c60048036038101906104079190614601565b61134f565b60405161041991906151c7565b60405180910390f35b61043c6004803603810190610437919061445d565b611641565b604051610449919061553e565b60405180910390f35b61046c600480360381019061046791906145d8565b61168d565b005b61048860048036038101906104839190614601565b6116d5565b005b6104a4600480360381019061049f9190614601565b6118c5565b6040516104b19190615204565b60405180910390f35b6104d460048036038101906104cf9190614601565b6118f8565b6040516104e19190615523565b60405180910390f35b61050460048036038101906104ff9190614601565b6119e1565b6040516105119190615077565b60405180910390f35b610534600480360381019061052f9190614601565b611a93565b6040516105419190615501565b60405180910390f35b610564600480360381019061055f9190614679565b611beb565b005b610580600480360381019061057b9190614589565b611c92565b005b61059c60048036038101906105979190614601565b611d0d565b005b6105b860048036038101906105b3919061478f565b611dbf565b6040516105c59190615486565b60405180910390f35b6105e860048036038101906105e391906146b5565b611f68565b005b6105f2612078565b6040516106099b9a99989796959493929190615582565b60405180910390f35b61062c600480360381019061062791906144c2565b612116565b005b610648600480360381019061064391906144c2565b6121e2565b60405161065591906151e9565b60405180910390f35b610666612286565b604051610673919061553e565b60405180910390f35b6106966004803603810190610691919061445d565b612293565b6040516106a391906154a8565b60405180910390f35b6106c660048036038101906106c1919061478f565b6123b1565b6040516106d391906151e9565b60405180910390f35b6106f660048036038101906106f191906147e1565b6123e1565b005b610712600480360381019061070d91906146b5565b6125f6565b60405161071f919061553e565b60405180910390f35b610742600480360381019061073d91906144c2565b612799565b005b61075e6004803603810190610759919061445d565b6127fb565b60405161076b91906154c4565b60405180910390f35b61078e60048036038101906107899190614601565b61286f565b60405161079b919061553e565b60405180910390f35b6107be60048036038101906107b99190614601565b612901565b6040516107cb91906151e9565b60405180910390f35b6107ee60048036038101906107e99190614601565b6129ee565b005b61080a600480360381019061080591906146b5565b612d0e565b005b610826600480360381019061082191906146b5565b61311e565b005b610842600480360381019061083d9190614589565b6132da565b005b61085e60048036038101906108599190614740565b613454565b005b61087a6004803603810190610875919061445d565b6135aa565b60405161088791906154df565b60405180910390f35b6108aa60048036038101906108a59190614601565b613861565b6040516108b7919061553e565b60405180910390f35b6108da60048036038101906108d59190614601565b6138f6565b6040516108e7919061553e565b60405180910390f35b61090a6004803603810190610905919061453a565b6139e4565b005b6109266004803603810190610921919061478f565b613aad565b005b610942600480360381019061093d919061478f565b613e81565b60405161094f91906154c4565b60405180910390f35b610972600480360381019061096d91906146f1565b613f20565b005b61098683600061753701546000613454565b60006109918461286f565b90507fbae8ec7968d2c640d5b5b4aa15225f092a0370c869f1bdcdafb96f7573ba7a56828583866040516109c89493929190615137565b60405180910390a150505050565b60006109e182613861565b90506000811415610a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1e906153c6565b60405180910390fd5b6000600182610a3691906157d4565b9050610a418361286f565b600061753701541015610a5e57610a59838233610974565b610a6a565b610a69838233613f20565b5b505050565b60008061753d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6000600201816000015160648110610b0e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201816020015160648110610b4f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480610b8c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590556000610bad82613861565b90506000811115610d4957600080600201836000015160648110610bfa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610c3b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002016001610c4d85613861565b610c5791906157d4565b81548110610c8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490506000617534016000828152602001908152602001600020600101546000600201846000015160648110610cf7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110610d38577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018190555050610dd8565b600080600201836000015160648110610d8b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610dcc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101819055505b5050565b6000806000800154600060010154915091509091565b6060600061753b01805480602002602001604051908101604052809291908181526020018280548015610e7a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e30575b5050505050905090565b610ef482600061753c0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006016040518060400160405290816000820154815260200160018201548152505060026112af565b610f33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2a90615346565b60405180910390fd5b6000610f3e836118c5565b90506000806175410182604051610f559190615034565b908152602001604051809103902090503373ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ff7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fee90615326565b60405180910390fd5b828160020154101561103e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103590615426565b60405180910390fd5b8281600201600082825461105291906157d4565b925050819055508260006175420160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110ac9190615724565b925050819055506000816002015414156111055760008160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b7fb9d28ddb2a092baf9b85c4b12f27f19324a5af905398455323d2755668cede54338560006175420160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484600201546040516111819493929190615137565b60405180910390a150505050565b80600061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546111f391906157d4565b9250508190555060008061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541415611262576112618260006123e1565b5b505050565b600080611273846127fb565b90506000611280846127fb565b90506112938282600061753601546112af565b6112a2576000925050506112a9565b6001925050505b92915050565b6000808360000151856000015110156112db57846000015184600001516112d691906157d4565b6112f0565b836000015185600001516112ef91906157d4565b5b9050600084602001518660200151101561131d578560200151856020015161131891906157d4565b611332565b8460200151866020015161133191906157d4565b5b90508382111580156113445750838111155b925050509392505050565b60606000606467ffffffffffffffff811115611394577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156113cd57816020015b6113ba614185565b8152602001906001900390816113b25790505b509050600080846000015190505b600a85600001516113ec9190615724565b811015611636576000856020015190505b600a866020015161140e9190615724565b8110156116225760405180608001604052806000600201846064811061145d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836064811061149a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000600201846064811061151a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611557577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018054806020026020016040519081016040528092919081815260200182805480156115a857602002820191906000526020600020905b815481526020019060010190808311611594575b50505050508152602001838152602001828152508484815181106115f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018361160d9190615724565b9250808061161a906158ea565b9150506113fd565b50808061162e906158ea565b9150506113db565b508192505050919050565b6000806175420160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b8060006175400160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006116e0826118c5565b905060008061754101826040516116f79190615034565b908152602001604051809103902090503373ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179090615326565b60405180910390fd5b6000806175400160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663900cf0cf6040518163ffffffff1660e01b815260040160206040518083038186803b15801561180657600080fd5b505afa15801561181a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183e91906147b8565b9050600082600301548261185291906157d4565b90506000836000015482611866919061577a565b905061187733856001015483611c92565b8284600301819055507f5a73cbbec7fe39b081989085276f93fbdf935ffa4b01e17abeb5f6e89c85dd1f338783866040516118b59493929190615137565b60405180910390a1505050505050565b6060816000015182602001516040516020016118e292919061504b565b6040516020818303038152906040529050919050565b6119006141c3565b60008260000151836020015160405160200161191d92919061504b565b6040516020818303038152906040529050600061754101816040516119429190615034565b90815260200160405180910390206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050915050919050565b600080600201826000015160648110611a23577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611a64577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b611a9b614208565b6000600201826000015160648110611adc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611b1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020018280548015611bdb57602002820191906000526020600020905b815481526020019060010190808311611bc7575b5050505050815250509050919050565b6000611bf6836118c5565b90508160006175410182604051611c0d9190615034565b90815260200160405180910390206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b611c9d8260016123e1565b80600061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254611d019190615724565b92505081905550505050565b611d1733826121e2565b611d56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4d906152e6565b60405180910390fd5b6000611d61336127fb565b9050611d6e600082612116565b611d783383612799565b611d823383612116565b7f525cefd038552f5a70d0f20bb3d87cebf1bca8b381ca6f9514e5448e62e647743383604051611db39291906150d7565b60405180910390a15050565b611dc761423f565b6000617534016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015611ea857602002820191906000526020600020905b815481526020019060010190808311611e94575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611f0057602002820191906000526020600020905b815481526020019060010190808311611eec575b5050505050815260200160068201805480602002602001604051908101604052809291908181526020018280548015611f5857602002820191906000526020600020905b815481526020019060010190808311611f44575b5050505050815250509050919050565b6000611f743383610a6f565b1415611fb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fac906152c6565b60405180910390fd5b8160000151611fc3336127fb565b60000151148015611fe357508160200151611fdd336127fb565b60200151145b15612023576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161201a90615386565b60405180910390fd5b61202d828261311e565b6120393382600161118f565b7f40324c8c437414ce20b3540df85835a30fd22d7c0f7a929530ebd656981db31033838360405161206c93929190615100565b60405180910390a15050565b6000806000015490806001015490806175320160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175320160149054906101000a900460ff169080617535015490806175360154908061753701549080617538015490806175390154908061753a015490806175400160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508b565b816000600201826000015160648110612158577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110612199577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000806121ee846127fb565b905060008060000154846000015110801561221157506000600101548460200151105b801561222257506000846000015110155b801561223357506000846020015110155b90508061224557600092505050612280565b612251848360016112af565b61226057600092505050612280565b61226984612901565b1561227957600092505050612280565b6001925050505b92915050565b6000806175350154905090565b61229b614291565b600061753c0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b60008061753301600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b60008060005b600061753f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156124dd5784600061753f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106124b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015414156124ca57809250600191505b80806124d5906158ea565b9150506123e7565b508261257857801561257357600061753f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612564577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b6125f0565b82156125ef57806125ee57600061753f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b600080600201836000015160648110612638577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110612679577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018054905082106126c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126bc90615366565b60405180910390fd5b6000600201836000015160648110612706577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110612747577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018281548110612786577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b80600061753c0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160008201518160000155602082015181600101559050505050565b6128036142ec565b600061753c0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601604051806040016040529081600082015481526020016001820154815250509050919050565b6000806002018260000151606481106128b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260200151606481106128f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16612923836119e1565b73ffffffffffffffffffffffffffffffffffffffff161461294757600190506129e9565b600080600201836000015160648110612989577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360200151606481106129ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018054905011156129e457600190506129e9565b600090505b919050565b600061753c0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615612a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a79906152a6565b60405180910390fd5b612a8b81612901565b15612acb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ac2906153a6565b60405180910390fd5b6040518060e001604052806001151581526020014281526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600061753901548152602001600061753a015481526020016006815260200182815250600061753c0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160008201518160000155602082015181600101555050905050600061753b01339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612c893382612116565b606460006175420160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ff0a6a142d1cdc04619a8fd8924155cd64ff41b31e4226fb7ffa08e5ade8d6f9d3382604051612d039291906150d7565b60405180910390a150565b6000612d19836118c5565b9050612d8b83600061753c0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006016040518060400160405290816000820154815260200160018201548152505060026112af565b612dca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dc190615346565b60405180910390fd5b6000806175410182604051612ddf9190615034565b9081526020016040518091039020905082816002015410612e35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e2c90615266565b60405180910390fd5b8260006175420160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015612ebb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612eb290615306565b60405180910390fd5b806002015460006175420160008360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612f369190615724565b925050819055506000806175400160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663900cf0cf6040518163ffffffff1660e01b815260040160206040518083038186803b158015612faa57600080fd5b505afa158015612fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fe291906147b8565b9050338260040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508082600301819055508382600201819055508360006175420160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461308c91906157d4565b925050819055507fb5c0efb2bcf7c739f746886a3fd8044fe436c198d8c18fb23d02637d1b7dd9cc338660006175420160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054856002015460405161310f9493929190615137565b60405180910390a15050505050565b600080600201836000015160648110613160577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360200151606481106131a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201905060018180549050106132045781816000815481106131f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020018190555061322d565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b6000617534016000838152602001908152602001600020600101546000600201846000015160648110613289577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460200151606481106132ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010181905550505050565b60006132e5336127fb565b905060006132f2856127fb565b90508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415613363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161335a90615466565b60405180910390fd5b61336f828260056112af565b6133ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133a590615226565b60405180910390fd5b826133b93386610a6f565b10156133fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133f190615246565b60405180910390fd5b61340533858561118f565b613410858585611c92565b7f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44338686866040516134459493929190615092565b60405180910390a15050505050565b6001151581151514613504578160006002018460000151606481106134a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018460200151606481106134e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010160008282546134f991906157d4565b9250508190556135a4565b816000600201846000015160648110613546577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110613587577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101600082825461359d9190615724565b9250508190555b50505050565b6135b2614306565b60008061753f0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff81111561363e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561366c5781602001602082028036833780820191505090505b50905060005b828110156137b15760008061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106136f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600061753d0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002054838381518110613791577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250505080806137a9906158ea565b915050613672565b506040518060400160405280600061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561384a57602002820191906000526020600020905b815481526020019060010190808311613836575b505050505081526020018281525092505050919050565b6000806002018260000151606481106138a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018260200151606481106138e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490509050919050565b60008061390283613861565b90506000600201836000015160648110613945577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110613986577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020160018261399a91906157d4565b815481106139d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154915050919050565b80613a4a5781600061753c0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254613a3f91906157d4565b925050819055613aa7565b81600061753c0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254613aa09190615724565b9250508190555b50505050565b613ab5612286565b811115613af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613aee906153c6565b60405180910390fd5b613b00816123b1565b15613b40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613b3790615446565b60405180910390fd5b600080617534016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015613c2257602002820191906000526020600020905b815481526020019060010190808311613c0e575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015613c7a57602002820191906000526020600020905b815481526020019060010190808311613c66575b5050505050815260200160068201805480602002602001604051908101604052809291908181526020018280548015613cd257602002820191906000526020600020905b815481526020019060010190808311613cbe575b505050505081525050905060005b8160e0015151811015613e375760008260e001518281518110613d2c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905060008361010001518381518110613d76577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905080600061753d0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015613e17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613e0e90615406565b60405180910390fd5b613e2233838361118f565b50508080613e2f906158ea565b915050613ce0565b50613e4433836001611c92565b7f82bf558222c4c37aae80230f0a656373f327bcc6f1ac1ef73c385d4dec21b2233383604051613e7592919061517c565b60405180910390a15050565b613e896142ec565b600080613e9b846000600101546140cb565b91509150600080613eb186600060010154614128565b91509150831580613ec0575081155b15613f00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613ef790615286565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b6000613f2c84846125f6565b9050600080617534016000838152602001908152602001600020600401805480602002602001604051908101604052809291908181526020018280548015613f9357602002820191906000526020600020905b815481526020019060010190808311613f7f575b5050505050905060008082511415613fae5760019050614031565b60005b825181101561402f57600061400686858481518110613ff9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610a6f565b9050600081111561401b57600192505061402f565b508080614027906158ea565b915050613fb1565b505b80614071576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401614068906153e6565b60405180910390fd5b61407d84846001611c92565b61408686610acd565b7ff988b03baf97aec26141c627d39f1a5705052d18cdc6b1f164b474c369c5db72848785886040516140bb9493929190615137565b60405180910390a1505050505050565b60008060008314156140e35760008091509150614121565b600183858161411b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b6000806000831415614140576000809150915061417e565b6001838581614178577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b6040518060e0016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016142e66142ec565b81525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b60008135905061432f81615cdd565b92915050565b60008135905061434481615cf4565b92915050565b60008135905061435981615d0b565b92915050565b60006040828403121561437157600080fd5b61437b604061562d565b9050600061438b84828501614433565b600083015250602061439f84828501614433565b60208301525092915050565b600060a082840312156143bd57600080fd5b6143c760a061562d565b905060006143d784828501614433565b60008301525060206143eb84828501614433565b60208301525060406143ff84828501614433565b604083015250606061441384828501614433565b606083015250608061442784828501614320565b60808301525092915050565b60008135905061444281615d22565b92915050565b60008151905061445781615d22565b92915050565b60006020828403121561446f57600080fd5b600061447d84828501614320565b91505092915050565b6000806040838503121561449957600080fd5b60006144a785828601614320565b92505060206144b885828601614320565b9150509250929050565b600080606083850312156144d557600080fd5b60006144e385828601614320565b92505060206144f48582860161435f565b9150509250929050565b6000806040838503121561451157600080fd5b600061451f85828601614320565b925050602061453085828601614433565b9150509250929050565b60008060006060848603121561454f57600080fd5b600061455d86828701614320565b935050602061456e86828701614433565b925050604061457f86828701614335565b9150509250925092565b60008060006060848603121561459e57600080fd5b60006145ac86828701614320565b93505060206145bd86828701614433565b92505060406145ce86828701614433565b9150509250925092565b6000602082840312156145ea57600080fd5b60006145f88482850161434a565b91505092915050565b60006040828403121561461357600080fd5b60006146218482850161435f565b91505092915050565b600080600060a0848603121561463f57600080fd5b600061464d8682870161435f565b935050604061465e8682870161435f565b925050608061466f86828701614433565b9150509250925092565b60008060e0838503121561468c57600080fd5b600061469a8582860161435f565b92505060406146ab858286016143ab565b9150509250929050565b600080606083850312156146c857600080fd5b60006146d68582860161435f565b92505060406146e785828601614433565b9150509250929050565b60008060006080848603121561470657600080fd5b60006147148682870161435f565b935050604061472586828701614433565b925050606061473686828701614320565b9150509250925092565b60008060006080848603121561475557600080fd5b60006147638682870161435f565b935050604061477486828701614433565b925050606061478586828701614335565b9150509250925092565b6000602082840312156147a157600080fd5b60006147af84828501614433565b91505092915050565b6000602082840312156147ca57600080fd5b60006147d884828501614448565b91505092915050565b600080604083850312156147f457600080fd5b600061480285828601614433565b925050602061481385828601614335565b9150509250929050565b60006148298383614861565b60208301905092915050565b60006148418383614ee4565b905092915050565b60006148558383614fff565b60208301905092915050565b61486a81615808565b82525050565b61487981615808565b82525050565b600061488a82615682565b61489481856156d5565b935061489f83615652565b8060005b838110156148d05781516148b7888261481d565b97506148c2836156ae565b9250506001810190506148a3565b5085935050505092915050565b60006148e88261568d565b6148f281856156e6565b93508360208202850161490485615662565b8060005b8581101561494057848403895281516149218582614835565b945061492c836156bb565b925060208a01995050600181019050614908565b50829750879550505050505092915050565b600061495d82615698565b61496781856156f7565b935061497283615672565b8060005b838110156149a357815161498a8882614849565b9750614995836156c8565b925050600181019050614976565b5085935050505092915050565b6149b98161581a565b82525050565b6149c88161581a565b82525050565b6149d781615862565b82525050565b60006149e8826156a3565b6149f28185615708565b9350614a02818560208601615886565b614a0b8161599b565b840191505092915050565b6000614a21826156a3565b614a2b8185615719565b9350614a3b818560208601615886565b80840191505092915050565b6000614a54601483615708565b9150614a5f826159ac565b602082019050919050565b6000614a77601a83615708565b9150614a82826159d5565b602082019050919050565b6000614a9a601883615708565b9150614aa5826159fe565b602082019050919050565b6000614abd601983615708565b9150614ac882615a27565b602082019050919050565b6000614ae0602183615708565b9150614aeb82615a50565b604082019050919050565b6000614b03601d83615708565b9150614b0e82615a9f565b602082019050919050565b6000614b26601383615708565b9150614b3182615ac8565b602082019050919050565b6000614b49601983615708565b9150614b5482615af1565b602082019050919050565b6000614b6c601983615708565b9150614b7782615b1a565b602082019050919050565b6000614b8f601683615708565b9150614b9a82615b43565b602082019050919050565b6000614bb2601683615708565b9150614bbd82615b6c565b602082019050919050565b6000614bd5601c83615708565b9150614be082615b95565b602082019050919050565b6000614bf8601883615708565b9150614c0382615bbe565b602082019050919050565b6000614c1b601883615708565b9150614c2682615be7565b602082019050919050565b6000614c3e601283615708565b9150614c4982615c10565b602082019050919050565b6000614c61601c83615708565b9150614c6c82615c39565b602082019050919050565b6000614c84601783615708565b9150614c8f82615c62565b602082019050919050565b6000614ca7601583615708565b9150614cb282615c8b565b602082019050919050565b6000614cca602083615708565b9150614cd582615cb4565b602082019050919050565b600061012083016000830151614cf960008601826149b0565b506020830151614d0c60208601826149b0565b506040830151614d1f60408601826149b0565b506060830151614d326060860182614fff565b506080830151614d456080860182614fff565b5060a0830151614d5860a0860182614fff565b5060c083015184820360c0860152614d708282614952565b91505060e083015184820360e0860152614d8a8282614952565b915050610100830151848203610100860152614da68282614952565b9150508091505092915050565b61010082016000820151614dca60008501826149b0565b506020820151614ddd6020850182614fff565b506040820151614df06040850182614861565b506060820151614e036060850182614fff565b506080820151614e166080850182614fff565b5060a0820151614e2960a0850182614fff565b5060c0820151614e3c60c0850182614e42565b50505050565b604082016000820151614e586000850182614fff565b506020820151614e6b6020850182614fff565b50505050565b604082016000820151614e876000850182614fff565b506020820151614e9a6020850182614fff565b50505050565b60006040830160008301518482036000860152614ebd8282614952565b91505060208301518482036020860152614ed78282614952565b9150508091505092915050565b6000608083016000830151614efc6000860182614861565b5060208301518482036020860152614f148282614952565b9150506040830151614f296040860182614fff565b506060830151614f3c6060860182614fff565b508091505092915050565b6000606083016000830151614f5f6000860182614861565b506020830151614f726020860182614fff565b5060408301518482036040860152614f8a8282614952565b9150508091505092915050565b60a082016000820151614fad6000850182614fff565b506020820151614fc06020850182614fff565b506040820151614fd36040850182614fff565b506060820151614fe66060850182614fff565b506080820151614ff96080850182614861565b50505050565b61500881615858565b82525050565b61501781615858565b82525050565b61502e61502982615858565b615933565b82525050565b60006150408284614a16565b915081905092915050565b6000615057828561501d565b602082019150615067828461501d565b6020820191508190509392505050565b600060208201905061508c6000830184614870565b92915050565b60006080820190506150a76000830187614870565b6150b46020830186614870565b6150c1604083018561500e565b6150ce606083018461500e565b95945050505050565b60006060820190506150ec6000830185614870565b6150f96020830184614e71565b9392505050565b60006080820190506151156000830186614870565b6151226020830185614e71565b61512f606083018461500e565b949350505050565b600060a08201905061514c6000830187614870565b6151596020830186614e71565b615166606083018561500e565b615173608083018461500e565b95945050505050565b60006040820190506151916000830185614870565b61519e602083018461500e565b9392505050565b600060208201905081810360008301526151bf818461487f565b905092915050565b600060208201905081810360008301526151e181846148dd565b905092915050565b60006020820190506151fe60008301846149bf565b92915050565b6000602082019050818103600083015261521e81846149dd565b905092915050565b6000602082019050818103600083015261523f81614a47565b9050919050565b6000602082019050818103600083015261525f81614a6a565b9050919050565b6000602082019050818103600083015261527f81614a8d565b9050919050565b6000602082019050818103600083015261529f81614ab0565b9050919050565b600060208201905081810360008301526152bf81614ad3565b9050919050565b600060208201905081810360008301526152df81614af6565b9050919050565b600060208201905081810360008301526152ff81614b19565b9050919050565b6000602082019050818103600083015261531f81614b3c565b9050919050565b6000602082019050818103600083015261533f81614b5f565b9050919050565b6000602082019050818103600083015261535f81614b82565b9050919050565b6000602082019050818103600083015261537f81614ba5565b9050919050565b6000602082019050818103600083015261539f81614bc8565b9050919050565b600060208201905081810360008301526153bf81614beb565b9050919050565b600060208201905081810360008301526153df81614c0e565b9050919050565b600060208201905081810360008301526153ff81614c31565b9050919050565b6000602082019050818103600083015261541f81614c54565b9050919050565b6000602082019050818103600083015261543f81614c77565b9050919050565b6000602082019050818103600083015261545f81614c9a565b9050919050565b6000602082019050818103600083015261547f81614cbd565b9050919050565b600060208201905081810360008301526154a08184614ce0565b905092915050565b6000610100820190506154be6000830184614db3565b92915050565b60006040820190506154d96000830184614e71565b92915050565b600060208201905081810360008301526154f98184614ea0565b905092915050565b6000602082019050818103600083015261551b8184614f47565b905092915050565b600060a0820190506155386000830184614f97565b92915050565b6000602082019050615553600083018461500e565b92915050565b600060408201905061556e600083018561500e565b61557b602083018461500e565b9392505050565b600061016082019050615598600083018e61500e565b6155a5602083018d61500e565b6155b2604083018c614870565b6155bf606083018b6149bf565b6155cc608083018a61500e565b6155d960a083018961500e565b6155e660c083018861500e565b6155f360e083018761500e565b61560161010083018661500e565b61560f61012083018561500e565b61561d6101408301846149ce565b9c9b505050505050505050505050565b6000615637615648565b905061564382826158b9565b919050565b6000604051905090565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061572f82615858565b915061573a83615858565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561576f5761576e61593d565b5b828201905092915050565b600061578582615858565b915061579083615858565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156157c9576157c861593d565b5b828202905092915050565b60006157df82615858565b91506157ea83615858565b9250828210156157fd576157fc61593d565b5b828203905092915050565b600061581382615838565b9050919050565b60008115159050919050565b600061583182615808565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061586d82615874565b9050919050565b600061587f82615838565b9050919050565b60005b838110156158a4578082015181840152602081019050615889565b838111156158b3576000848401525b50505050565b6158c28261599b565b810181811067ffffffffffffffff821117156158e1576158e061596c565b5b80604052505050565b60006158f582615858565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156159285761592761593d565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f746f7765722f696e73756666696369656e742d7374616b650000000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f706c617965722d616c72656164792d696e697469616c697a6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b7f656e67696e652f696e73756666696369656e742d696e76656e746f7279000000600082015250565b7f656e67696e652f696e76616c69642d6d6f766500000000000000000000000000600082015250565b7f746f7765722f696e73756666696369656e742d706f696e747300000000000000600082015250565b7f746f7765722f696e76616c69642d746f7765722d6f776e657200000000000000600082015250565b7f746f7765722f6f7574736964652d64697374616e636500000000000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f656e67696e652f63616e6e6f742d7374616e642d6f6e2d626c6f636b00000000600082015250565b7f656e67696e652f6c6f636174696f6e2d6f636375706965640000000000000000600082015250565b7f656e67696e652f6e6f6e6578697374656e742d626c6f636b0000000000000000600082015250565b7f656e67696e652f746f6f6c2d6e65656465640000000000000000000000000000600082015250565b7f656e67696e652f696e73756666696369656e742d6d6174657269616c00000000600082015250565b7f746f7765722f77697468647261772d6f766572666c6f77000000000000000000600082015250565b7f656e67696e652f696e6163746976652d626c6f636b0000000000000000000000600082015250565b7f73746f726167652f726563697069656e742d73616d652d61732d73656e646572600082015250565b615ce681615808565b8114615cf157600080fd5b50565b615cfd8161581a565b8114615d0857600080fd5b50565b615d1481615826565b8114615d1f57600080fd5b50565b615d2b81615858565b8114615d3657600080fd5b5056fea264697066735822122093bce5c0d18586a52e086354083ce2d6b6c0d6d017bba3c2b31aa88adc98af7064736f6c63430008040033";

type GameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Game__factory extends ContractFactory {
  constructor(...args: GameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _worldWidth: BigNumberish,
    _worldHeight: BigNumberish,
    _attackRange: BigNumberish,
    _attackDamage: BigNumberish,
    _attackWaitTime: BigNumberish,
    _startPlayerHealth: BigNumberish,
    _startPlayerEnergy: BigNumberish,
    _blocks: BigNumberish[][],
    _items: ItemWithMetadataStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Game> {
    return super.deploy(
      _worldWidth,
      _worldHeight,
      _attackRange,
      _attackDamage,
      _attackWaitTime,
      _startPlayerHealth,
      _startPlayerEnergy,
      _blocks,
      _items,
      overrides || {}
    ) as Promise<Game>;
  }
  getDeployTransaction(
    _worldWidth: BigNumberish,
    _worldHeight: BigNumberish,
    _attackRange: BigNumberish,
    _attackDamage: BigNumberish,
    _attackWaitTime: BigNumberish,
    _startPlayerHealth: BigNumberish,
    _startPlayerEnergy: BigNumberish,
    _blocks: BigNumberish[][],
    _items: ItemWithMetadataStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _worldWidth,
      _worldHeight,
      _attackRange,
      _attackDamage,
      _attackWaitTime,
      _startPlayerHealth,
      _startPlayerEnergy,
      _blocks,
      _items,
      overrides || {}
    );
  }
  attach(address: string): Game {
    return super.attach(address) as Game;
  }
  connect(signer: Signer): Game__factory {
    return super.connect(signer) as Game__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameInterface {
    return new utils.Interface(_abi) as GameInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Game {
    return new Contract(address, _abi, signerOrProvider) as Game;
  }
}
