/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Game, GameInterface, ItemWithMetadataStruct } from "../Game";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldHeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startPlayerEnergy",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "_blocks",
        type: "uint256[][]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata[]",
        name: "_items",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_player2",
        type: "address",
      },
    ],
    name: "Attack",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_zIndex",
        type: "uint256",
      },
    ],
    name: "AttackItem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_towerPos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "Craft",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "Death",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_zIndex",
        type: "uint256",
      },
    ],
    name: "MineItem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "Move",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "NewPlayer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "Place",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_towerPos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "StakeTower",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_towerPos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "UnstakeTower",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeTopLevelStrengthAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "_encodePos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopLevelStrengthAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "rewardPerEpoch",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct GameTypes.Tower",
        name: "_tower",
        type: "tuple",
      },
    ],
    name: "addTower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_playerAddr",
        type: "address",
      },
    ],
    name: "attackItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "craft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "getTowerById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rewardPerEpoch",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct GameTypes.Tower",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "initializePlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_playerAddr",
        type: "address",
      },
    ],
    name: "mineItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "move",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "contract Epoch",
        name: "epochController",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Epoch",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setEpochController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162006b9b38038062006b9b833981810160405281019062000037919062000ad1565b8860008001819055508760006001018190555060016000617536018190555086600061753701819055508560006175380181905550846000617539018190555083600061753a018190555082600061753b01819055506000888a6200009d919062000d49565b905060005b81811015620003b4576000620000be826200054160201b60201c565b9050848281518110620000fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600060020182600001516064811062000144577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020182602001516064811062000186577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002019080519060200190620001a2929190620006c0565b506000858381518110620001df577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101515111156200039d5760008583815181106200022b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160018785815181106200026f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101515162000284919062000daa565b81518110620002bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905084818151811062000300577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516060015160006002018360000151606481106200034e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020183602001516064811062000390577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010181905550505b508080620003ab9062000e31565b915050620000a2565b5060005b82518110156200053057828181518110620003fc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600061753501600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff021916908315150217905550606082015181600101556080820151816002015560a0820151816003015560c0820151816004019080519060200190620004b7929190620006c0565b5060e0820151816005019080519060200190620004d6929190620006c0565b50610100820151816006019080519060200190620004f6929190620006c0565b509050506001600061753601600082825462000513919062000cec565b925050819055508080620005279062000e31565b915050620003b8565b505050505050505050505062000f4b565b6200054b62000712565b6000806200056a846000600101546200060060201b62003f441760201c565b915091506000806200058d866000600101546200066060201b62003fa11760201c565b915091508315806200059d575081155b15620005e0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005d79062000c03565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b60008060008314156200061a576000809150915062000659565b600183858162000653577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b60008060008314156200067a5760008091509150620006b9565b6001838581620006b3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b828054828255906000526020600020908101928215620006ff579160200282015b82811115620006fe578251825591602001919060010190620006e1565b5b5090506200070e91906200072c565b5090565b604051806040016040528060008152602001600081525090565b5b80821115620007475760008160009055506001016200072d565b5090565b6000620007626200075c8462000c4e565b62000c25565b905080838252602082019050828560208602820111156200078257600080fd5b60005b85811015620007d157815167ffffffffffffffff811115620007a657600080fd5b808601620007b589826200093a565b8552602085019450602084019350505060018101905062000785565b5050509392505050565b6000620007f2620007ec8462000c7d565b62000c25565b905080838252602082019050828560208602820111156200081257600080fd5b60005b858110156200086157815167ffffffffffffffff8111156200083657600080fd5b8086016200084589826200097e565b8552602085019450602084019350505060018101905062000815565b5050509392505050565b6000620008826200087c8462000cac565b62000c25565b90508083825260208201905082856020860282011115620008a257600080fd5b60005b85811015620008d65781620008bb888262000aba565b845260208401935060208301925050600181019050620008a5565b5050509392505050565b600082601f830112620008f257600080fd5b8151620009048482602086016200074b565b91505092915050565b600082601f8301126200091f57600080fd5b815162000931848260208601620007db565b91505092915050565b600082601f8301126200094c57600080fd5b81516200095e8482602086016200086b565b91505092915050565b600081519050620009788162000f17565b92915050565b600061012082840312156200099257600080fd5b6200099f61012062000c25565b90506000620009b18482850162000967565b6000830152506020620009c78482850162000967565b6020830152506040620009dd8482850162000967565b6040830152506060620009f38482850162000aba565b606083015250608062000a098482850162000aba565b60808301525060a062000a1f8482850162000aba565b60a08301525060c082015167ffffffffffffffff81111562000a4057600080fd5b62000a4e848285016200093a565b60c08301525060e082015167ffffffffffffffff81111562000a6f57600080fd5b62000a7d848285016200093a565b60e08301525061010082015167ffffffffffffffff81111562000a9f57600080fd5b62000aad848285016200093a565b6101008301525092915050565b60008151905062000acb8162000f31565b92915050565b60008060008060008060008060006101208a8c03121562000af157600080fd5b600062000b018c828d0162000aba565b995050602062000b148c828d0162000aba565b985050604062000b278c828d0162000aba565b975050606062000b3a8c828d0162000aba565b965050608062000b4d8c828d0162000aba565b95505060a062000b608c828d0162000aba565b94505060c062000b738c828d0162000aba565b93505060e08a015167ffffffffffffffff81111562000b9157600080fd5b62000b9f8c828d01620008e0565b9250506101008a015167ffffffffffffffff81111562000bbe57600080fd5b62000bcc8c828d016200090d565b9150509295985092959850929598565b600062000beb60198362000cdb565b915062000bf88262000eee565b602082019050919050565b6000602082019050818103600083015262000c1e8162000bdc565b9050919050565b600062000c3162000c44565b905062000c3f828262000dfb565b919050565b6000604051905090565b600067ffffffffffffffff82111562000c6c5762000c6b62000eae565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000c9b5762000c9a62000eae565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000cca5762000cc962000eae565b5b602082029050602081019050919050565b600082825260208201905092915050565b600062000cf98262000df1565b915062000d068362000df1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000d3e5762000d3d62000e7f565b5b828201905092915050565b600062000d568262000df1565b915062000d638362000df1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562000d9f5762000d9e62000e7f565b5b828202905092915050565b600062000db78262000df1565b915062000dc48362000df1565b92508282101562000dda5762000dd962000e7f565b5b828203905092915050565b60008115159050919050565b6000819050919050565b62000e068262000edd565b810181811067ffffffffffffffff8211171562000e285762000e2762000eae565b5b80604052505050565b600062000e3e8262000df1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000e745762000e7362000e7f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b62000f228162000de5565b811462000f2e57600080fd5b50565b62000f3c8162000df1565b811462000f4857600080fd5b50565b615c408062000f5b6000396000f3fe608060405234801561001057600080fd5b50600436106102895760003560e01c806387fc55491161015c578063c6123327116100ce578063f09c4b2611610087578063f09c4b2614610841578063f0bfd52b14610871578063f17dd707146108a1578063f3917bd2146108bd578063fad86c3c146108d9578063ff85eff51461090957610289565b8063c612332714610785578063d018db3e146107a1578063d8178847146107bd578063dc8afb63146107d9578063dd597d27146107f5578063f095277c1461081157610289565b8063b0b49ba511610120578063b0b49ba51461068d578063b62b7130146106bd578063be565940146106d9578063bfc525a214610709578063c537e3e514610739578063c582e4681461076957610289565b806387fc5549146105c35780638bce7fab146105f3578063908b9f17146106115780639889c32114610641578063aae1eeac1461067157610289565b80635a9c06441161020057806379564688116101b957806379564688146104fb5780637e77eee414610517578063801b83db1461053357806380e8c9da1461056357806386b714e21461057f57806386e68be3146105a757610289565b80635a9c0644146104175780635b60fcca146104335780635de24e181461044f578063675730951461047f57806367ae0634146104af5780636f93315e146104df57610289565b80633f261e07116102525780633f261e0714610331578063460c976c1461034f578063487d20801461036b57806348c5a716146103875780634a4e51b3146103b757806350607fee146103e757610289565b80625194d81461028e57806319a8bbd8146102aa5780631ccd4c15146102c6578063201549ac146102f65780632c190c6214610312575b600080fd5b6102a860048036038101906102a39190614533565b610925565b005b6102c460048036038101906102bf9190614443565b610977565b005b6102e060048036038101906102db9190614340565b610a10565b6040516102ed91906153bd565b60405180910390f35b610310600480360381019061030b9190614443565b610a6e565b005b61031a610d7d565b6040516103289291906153d8565b60405180910390f35b610339610d93565b6040516103469190615006565b60405180910390f35b610369600480360381019061036491906144f7565b610e25565b005b610385600480360381019061038091906143cb565b61108d565b005b6103a1600480360381019061039c91906142c8565b611165565b6040516103ae919061504a565b60405180910390f35b6103d160048036038101906103cc919061446c565b6111ad565b6040516103de919061504a565b60405180910390f35b61040160048036038101906103fc9190614443565b61124d565b60405161040e9190615028565b60405180910390f35b610431600480360381019061042c919061441a565b61153f565b005b61044d60048036038101906104489190614443565b611587565b005b61046960048036038101906104649190614443565b611777565b6040516104769190615065565b60405180910390f35b61049960048036038101906104949190614443565b6117aa565b6040516104a691906153a2565b60405180910390f35b6104c960048036038101906104c49190614443565b611893565b6040516104d69190614eaf565b60405180910390f35b6104f960048036038101906104f491906144bb565b611945565b005b610515600480360381019061051091906143cb565b6119ec565b005b610531600480360381019061052c9190614443565b611a67565b005b61054d600480360381019061054891906145d1565b611b19565b60405161055a9190615327565b60405180910390f35b61057d600480360381019061057891906144f7565b611cc2565b005b610587611dd2565b60405161059e9b9a99989796959493929190615401565b60405180910390f35b6105c160048036038101906105bc9190614304565b611e70565b005b6105dd60048036038101906105d89190614304565b611f3c565b6040516105ea919061504a565b60405180910390f35b6105fb611fe0565b60405161060891906153bd565b60405180910390f35b61062b6004803603810190610626919061429f565b611fed565b6040516106389190615349565b60405180910390f35b61065b600480360381019061065691906145d1565b61210b565b604051610668919061504a565b60405180910390f35b61068b60048036038101906106869190614623565b61213b565b005b6106a760048036038101906106a291906144f7565b612350565b6040516106b491906153bd565b60405180910390f35b6106d760048036038101906106d29190614304565b6124f3565b005b6106f360048036038101906106ee919061429f565b612555565b6040516107009190615365565b60405180910390f35b610723600480360381019061071e9190614443565b6125c9565b60405161073091906153bd565b60405180910390f35b610753600480360381019061074e9190614443565b61265b565b604051610760919061504a565b60405180910390f35b610783600480360381019061077e9190614443565b612748565b005b61079f600480360381019061079a91906144f7565b612a68565b005b6107bb60048036038101906107b6919061429f565b612e0b565b005b6107d760048036038101906107d291906144f7565b612f97565b005b6107f360048036038101906107ee91906143cb565b613153565b005b61080f600480360381019061080a9190614582565b6132cd565b005b61082b6004803603810190610826919061429f565b613423565b6040516108389190615380565b60405180910390f35b61085b60048036038101906108569190614443565b6136da565b60405161086891906153bd565b60405180910390f35b61088b60048036038101906108869190614443565b61376f565b60405161089891906153bd565b60405180910390f35b6108bb60048036038101906108b6919061437c565b61385d565b005b6108d760048036038101906108d291906145d1565b613926565b005b6108f360048036038101906108ee91906145d1565b613cfa565b6040516109009190615365565b60405180910390f35b610923600480360381019061091e9190614533565b613d99565b005b610937836000617538015460006132cd565b7fcc7926ea1fb4e9d9aff14367399dc27095d3660766fc5c914444075eb445975e81848460405161096a93929190614f61565b60405180910390a1505050565b6000610982826136da565b905060008114156109c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bf90615247565b60405180910390fd5b60006001826109d79190615653565b90506109e2836125c9565b6000617538015410156109ff576109fa838233610925565b610a0b565b610a0a838233613d99565b5b505050565b60008061753e0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6000600201816000015160648110610aaf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201816020015160648110610af0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480610b2d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590556000610b4e826136da565b90506000811115610cea57600080600201836000015160648110610b9b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610bdc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002016001610bee856136da565b610bf89190615653565b81548110610c2f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490506000617535016000828152602001908152602001600020600101546000600201846000015160648110610c98577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110610cd9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018190555050610d79565b600080600201836000015160648110610d2c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610d6d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101819055505b5050565b6000806000800154600060010154915091509091565b6060600061753c01805480602002602001604051908101604052809291908181526020018280548015610e1b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610dd1575b5050505050905090565b610e9582600061753d0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006016040518060400160405290816000820154815260200160018201548152505060026111ad565b610ed4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecb906151a7565b60405180910390fd5b6000610edf83611777565b90506000806175410182604051610ef69190614e6c565b908152602001604051809103902090503373ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8f90615187565b60405180910390fd5b8281600201541015610fdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd6906152a7565b60405180910390fd5b82816002016000828254610ff39190615653565b9250508190555060008160020154141561104c5760008160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b7f54d5d7dd34f2aa9f3c1bacb697048dd8336f5e0b2774b9cebdbabaab208955fe33858560405161107f93929190614f61565b60405180910390a150505050565b80600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008282546110f19190615653565b9250508190555060008061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205414156111605761115f82600061213b565b5b505050565b60008061117184612555565b9050600061117e84612555565b90506111918282600061753701546111ad565b6111a0576000925050506111a7565b6001925050505b92915050565b6000808360000151856000015110156111d957846000015184600001516111d49190615653565b6111ee565b836000015185600001516111ed9190615653565b5b9050600084602001518660200151101561121b57856020015185602001516112169190615653565b611230565b8460200151866020015161122f9190615653565b5b90508382111580156112425750838111155b925050509392505050565b60606000606467ffffffffffffffff811115611292577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156112cb57816020015b6112b8613ffe565b8152602001906001900390816112b05790505b509050600080846000015190505b600a85600001516112ea91906155a3565b811015611534576000856020015190505b600a866020015161130c91906155a3565b8110156115205760405180608001604052806000600201846064811061135b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611398577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160006002018460648110611418577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360648110611455577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018054806020026020016040519081016040528092919081815260200182805480156114a657602002820191906000526020600020905b815481526020019060010190808311611492575b50505050508152602001838152602001828152508484815181106114f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018361150b91906155a3565b9250808061151890615769565b9150506112fb565b50808061152c90615769565b9150506112d9565b508192505050919050565b8060006175330160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061159282611777565b905060008061754101826040516115a99190614e6c565b908152602001604051809103902090503373ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461164b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164290615187565b60405180910390fd5b6000806175330160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663900cf0cf6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116b857600080fd5b505afa1580156116cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f091906145fa565b905060008260030154826117049190615653565b9050600083600001548261171891906155f9565b9050611729338560010154836119ec565b8284600301819055507f5a73cbbec7fe39b081989085276f93fbdf935ffa4b01e17abeb5f6e89c85dd1f338783866040516117679493929190614f98565b60405180910390a1505050505050565b606081600001518260200151604051602001611794929190614e83565b6040516020818303038152906040529050919050565b6117b261403c565b6000826000015183602001516040516020016117cf929190614e83565b6040516020818303038152906040529050600061754101816040516117f49190614e6c565b90815260200160405180910390206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050915050919050565b6000806002018260000151606481106118d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611916577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061195083611777565b905081600061754101826040516119679190614e6c565b90815260200160405180910390206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b6119f782600161213b565b80600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254611a5b91906155a3565b92505081905550505050565b611a713382611f3c565b611ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa790615147565b60405180910390fd5b6000611abb33612555565b9050611ac8600082611e70565b611ad233836124f3565b611adc3383611e70565b7f525cefd038552f5a70d0f20bb3d87cebf1bca8b381ca6f9514e5448e62e647743383604051611b0d929190614f38565b60405180910390a15050565b611b21614081565b6000617535016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015611c0257602002820191906000526020600020905b815481526020019060010190808311611bee575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611c5a57602002820191906000526020600020905b815481526020019060010190808311611c46575b5050505050815260200160068201805480602002602001604051908101604052809291908181526020018280548015611cb257602002820191906000526020600020905b815481526020019060010190808311611c9e575b5050505050815250509050919050565b6000611cce3383610a10565b1415611d0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0690615127565b60405180910390fd5b8160000151611d1d33612555565b60000151148015611d3d57508160200151611d3733612555565b60200151145b15611d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d74906151e7565b60405180910390fd5b611d878282612f97565b611d933382600161108d565b7f40324c8c437414ce20b3540df85835a30fd22d7c0f7a929530ebd656981db310338383604051611dc693929190614f61565b60405180910390a15050565b6000806000015490806001015490806175320160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175320160149054906101000a900460ff1690806175330160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175360154908061753701549080617538015490806175390154908061753a0154908061753b015490508b565b816000600201826000015160648110611eb2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611ef3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600080611f4884612555565b9050600080600001548460000151108015611f6b57506000600101548460200151105b8015611f7c57506000846000015110155b8015611f8d57506000846020015110155b905080611f9f57600092505050611fda565b611fab848360016111ad565b611fba57600092505050611fda565b611fc38461265b565b15611fd357600092505050611fda565b6001925050505b92915050565b6000806175360154905090565b611ff56140d3565b600061753d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b60008061753401600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b60008060005b60006175400160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015612237578460006175400160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061220b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154141561222457809250600191505b808061222f90615769565b915050612141565b50826122d25780156122cd5760006175400160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106122be577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b61234a565b821561234957806123485760006175400160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b600080600201836000015160648110612392577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360200151606481106123d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020180549050821061241f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612416906151c7565b60405180910390fd5b6000600201836000015160648110612460577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360200151606481106124a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020182815481106124e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b80600061753d0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160008201518160000155602082015181600101559050505050565b61255d61412e565b600061753d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601604051806040016040529081600082015481526020016001820154815250509050919050565b60008060020182600001516064811061260b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020182602001516064811061264c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661267d83611893565b73ffffffffffffffffffffffffffffffffffffffff16146126a15760019050612743565b6000806002018360000151606481106126e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110612724577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020180549050111561273e5760019050612743565b600090505b919050565b600061753d0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16156127dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127d390615107565b60405180910390fd5b6127e58161265b565b15612825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161281c90615227565b60405180910390fd5b6040518060e001604052806001151581526020014281526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600061753a01548152602001600061753b015481526020016006815260200182815250600061753d0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015560a0820151816005015560c08201518160060160008201518160000155602082015181600101555050905050600061753c01339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506129e33382611e70565b606460006175420160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ff0a6a142d1cdc04619a8fd8924155cd64ff41b31e4226fb7ffa08e5ade8d6f9d3382604051612a5d929190614f38565b60405180910390a150565b6000612a7383611777565b9050612ae583600061753d0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006016040518060400160405290816000820154815260200160018201548152505060026111ad565b612b24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b1b906151a7565b60405180910390fd5b6000806175410182604051612b399190614e6c565b9081526020016040518091039020905082816002015410612b8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b86906150c7565b60405180910390fd5b8260006175420160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015612c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c0c90615167565b60405180910390fd5b806002015460006175420160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612c6c91906155a3565b925050819055506000806175330160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663900cf0cf6040518163ffffffff1660e01b815260040160206040518083038186803b158015612ce057600080fd5b505afa158015612cf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1891906145fa565b9050338260040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508082600301819055508382600201819055508360006175420160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612dc29190615653565b925050819055507f680ec991afe6afbde261c58086976523621910500cce67631d19d17476f9a303338686604051612dfc93929190614f61565b60405180910390a15050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612e7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e72906152c7565b60405180910390fd5b612e853382611165565b612ec4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ebb90615207565b60405180910390fd5b612ed68160006175380154600061385d565b7f93a24e91f44890f6ead6f4f95caebbda5c7039be4277148123db9b4d2b293c903382604051612f07929190614eca565b60405180910390a160008061753d0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015411612f94577fbc6991e1364053ec58da06cd55327f300812082beeba866fc000f513bd89e9db81604051612f8b9190614eaf565b60405180910390a15b50565b600080600201836000015160648110612fd9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020183602001516064811061301a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002019050600181805490501061307d57818160008154811061306a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001819055506130a6565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b6000617535016000838152602001908152602001600020600101546000600201846000015160648110613102577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110613143577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010181905550505050565b600061315e33612555565b9050600061316b85612555565b90508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156131dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016131d390615307565b60405180910390fd5b6131e8828260056111ad565b613227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161321e90615087565b60405180910390fd5b826132323386610a10565b1015613273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161326a906150a7565b60405180910390fd5b61327e33858561108d565b6132898585856119ec565b7f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44338686866040516132be9493929190614ef3565b60405180910390a15050505050565b600115158115151461337d5781600060020184600001516064811061331b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020184602001516064811061335c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010160008282546133729190615653565b92505081905561341d565b8160006002018460000151606481106133bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110613400577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101600082825461341691906155a3565b9250508190555b50505050565b61342b614148565b6000806175400160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff8111156134b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156134e55781602001602082028036833780820191505090505b50905060005b8281101561362a576000806175400160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061356f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600061753e0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008281526020019081526020016000205483838151811061360a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505050808061362290615769565b9150506134eb565b50604051806040016040528060006175400160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156136c357602002820191906000526020600020905b8154815260200190600101908083116136af575b505050505081526020018281525092505050919050565b60008060020182600001516064811061371c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020182602001516064811061375d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490509050919050565b60008061377b836136da565b905060006002018360000151606481106137be577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360200151606481106137ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002016001826138139190615653565b8154811061384a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154915050919050565b806138c35781600061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546138b89190615653565b925050819055613920565b81600061753d0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461391991906155a3565b9250508190555b50505050565b61392e611fe0565b811115613970576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161396790615247565b60405180910390fd5b6139798161210b565b156139b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016139b0906152e7565b60405180910390fd5b600080617535016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015613a9b57602002820191906000526020600020905b815481526020019060010190808311613a87575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015613af357602002820191906000526020600020905b815481526020019060010190808311613adf575b5050505050815260200160068201805480602002602001604051908101604052809291908181526020018280548015613b4b57602002820191906000526020600020905b815481526020019060010190808311613b37575b505050505081525050905060005b8160e0015151811015613cb05760008260e001518281518110613ba5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905060008361010001518381518110613bef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905080600061753e0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015613c90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613c8790615287565b60405180910390fd5b613c9b33838361108d565b50508080613ca890615769565b915050613b59565b50613cbd338360016119ec565b7f82bf558222c4c37aae80230f0a656373f327bcc6f1ac1ef73c385d4dec21b2233383604051613cee929190614fdd565b60405180910390a15050565b613d0261412e565b600080613d1484600060010154613f44565b91509150600080613d2a86600060010154613fa1565b91509150831580613d39575081155b15613d79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613d70906150e7565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b6000613da58484612350565b9050600080617535016000838152602001908152602001600020600401805480602002602001604051908101604052809291908181526020018280548015613e0c57602002820191906000526020600020905b815481526020019060010190808311613df8575b5050505050905060008082511415613e275760019050613eaa565b60005b8251811015613ea8576000613e7f86858481518110613e72577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610a10565b90506000811115613e94576001925050613ea8565b508080613ea090615769565b915050613e2a565b505b80613eea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613ee190615267565b60405180910390fd5b613ef6848460016119ec565b613eff86610a6e565b7ff988b03baf97aec26141c627d39f1a5705052d18cdc6b1f164b474c369c5db7284878588604051613f349493929190614f98565b60405180910390a1505050505050565b6000806000831415613f5c5760008091509150613f9a565b6001838581613f94577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b6000806000831415613fb95760008091509150613ff7565b6001838581613ff1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b6040518060e0016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200161412861412e565b81525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b60008135905061417181615bae565b92915050565b60008135905061418681615bc5565b92915050565b60008135905061419b81615bdc565b92915050565b6000604082840312156141b357600080fd5b6141bd60406154ac565b905060006141cd84828501614275565b60008301525060206141e184828501614275565b60208301525092915050565b600060a082840312156141ff57600080fd5b61420960a06154ac565b9050600061421984828501614275565b600083015250602061422d84828501614275565b602083015250604061424184828501614275565b604083015250606061425584828501614275565b606083015250608061426984828501614162565b60808301525092915050565b60008135905061428481615bf3565b92915050565b60008151905061429981615bf3565b92915050565b6000602082840312156142b157600080fd5b60006142bf84828501614162565b91505092915050565b600080604083850312156142db57600080fd5b60006142e985828601614162565b92505060206142fa85828601614162565b9150509250929050565b6000806060838503121561431757600080fd5b600061432585828601614162565b9250506020614336858286016141a1565b9150509250929050565b6000806040838503121561435357600080fd5b600061436185828601614162565b925050602061437285828601614275565b9150509250929050565b60008060006060848603121561439157600080fd5b600061439f86828701614162565b93505060206143b086828701614275565b92505060406143c186828701614177565b9150509250925092565b6000806000606084860312156143e057600080fd5b60006143ee86828701614162565b93505060206143ff86828701614275565b925050604061441086828701614275565b9150509250925092565b60006020828403121561442c57600080fd5b600061443a8482850161418c565b91505092915050565b60006040828403121561445557600080fd5b6000614463848285016141a1565b91505092915050565b600080600060a0848603121561448157600080fd5b600061448f868287016141a1565b93505060406144a0868287016141a1565b92505060806144b186828701614275565b9150509250925092565b60008060e083850312156144ce57600080fd5b60006144dc858286016141a1565b92505060406144ed858286016141ed565b9150509250929050565b6000806060838503121561450a57600080fd5b6000614518858286016141a1565b925050604061452985828601614275565b9150509250929050565b60008060006080848603121561454857600080fd5b6000614556868287016141a1565b935050604061456786828701614275565b925050606061457886828701614162565b9150509250925092565b60008060006080848603121561459757600080fd5b60006145a5868287016141a1565b93505060406145b686828701614275565b92505060606145c786828701614177565b9150509250925092565b6000602082840312156145e357600080fd5b60006145f184828501614275565b91505092915050565b60006020828403121561460c57600080fd5b600061461a8482850161428a565b91505092915050565b6000806040838503121561463657600080fd5b600061464485828601614275565b925050602061465585828601614177565b9150509250929050565b600061466b83836146a3565b60208301905092915050565b60006146838383614d6c565b905092915050565b60006146978383614e37565b60208301905092915050565b6146ac81615687565b82525050565b6146bb81615687565b82525050565b60006146cc82615501565b6146d68185615554565b93506146e1836154d1565b8060005b838110156147125781516146f9888261465f565b97506147048361552d565b9250506001810190506146e5565b5085935050505092915050565b600061472a8261550c565b6147348185615565565b935083602082028501614746856154e1565b8060005b8581101561478257848403895281516147638582614677565b945061476e8361553a565b925060208a0199505060018101905061474a565b50829750879550505050505092915050565b600061479f82615517565b6147a98185615576565b93506147b4836154f1565b8060005b838110156147e55781516147cc888261468b565b97506147d783615547565b9250506001810190506147b8565b5085935050505092915050565b6147fb81615699565b82525050565b61480a81615699565b82525050565b614819816156e1565b82525050565b600061482a82615522565b6148348185615587565b9350614844818560208601615705565b61484d8161581a565b840191505092915050565b600061486382615522565b61486d8185615598565b935061487d818560208601615705565b80840191505092915050565b6000614896601483615587565b91506148a18261582b565b602082019050919050565b60006148b9601a83615587565b91506148c482615854565b602082019050919050565b60006148dc601883615587565b91506148e78261587d565b602082019050919050565b60006148ff601983615587565b915061490a826158a6565b602082019050919050565b6000614922602183615587565b915061492d826158cf565b604082019050919050565b6000614945601d83615587565b91506149508261591e565b602082019050919050565b6000614968601383615587565b915061497382615947565b602082019050919050565b600061498b601983615587565b915061499682615970565b602082019050919050565b60006149ae601983615587565b91506149b982615999565b602082019050919050565b60006149d1601683615587565b91506149dc826159c2565b602082019050919050565b60006149f4601683615587565b91506149ff826159eb565b602082019050919050565b6000614a17601c83615587565b9150614a2282615a14565b602082019050919050565b6000614a3a601583615587565b9150614a4582615a3d565b602082019050919050565b6000614a5d601883615587565b9150614a6882615a66565b602082019050919050565b6000614a80601883615587565b9150614a8b82615a8f565b602082019050919050565b6000614aa3601283615587565b9150614aae82615ab8565b602082019050919050565b6000614ac6601c83615587565b9150614ad182615ae1565b602082019050919050565b6000614ae9601783615587565b9150614af482615b0a565b602082019050919050565b6000614b0c601083615587565b9150614b1782615b33565b602082019050919050565b6000614b2f601583615587565b9150614b3a82615b5c565b602082019050919050565b6000614b52602083615587565b9150614b5d82615b85565b602082019050919050565b600061012083016000830151614b8160008601826147f2565b506020830151614b9460208601826147f2565b506040830151614ba760408601826147f2565b506060830151614bba6060860182614e37565b506080830151614bcd6080860182614e37565b5060a0830151614be060a0860182614e37565b5060c083015184820360c0860152614bf88282614794565b91505060e083015184820360e0860152614c128282614794565b915050610100830151848203610100860152614c2e8282614794565b9150508091505092915050565b61010082016000820151614c5260008501826147f2565b506020820151614c656020850182614e37565b506040820151614c7860408501826146a3565b506060820151614c8b6060850182614e37565b506080820151614c9e6080850182614e37565b5060a0820151614cb160a0850182614e37565b5060c0820151614cc460c0850182614cca565b50505050565b604082016000820151614ce06000850182614e37565b506020820151614cf36020850182614e37565b50505050565b604082016000820151614d0f6000850182614e37565b506020820151614d226020850182614e37565b50505050565b60006040830160008301518482036000860152614d458282614794565b91505060208301518482036020860152614d5f8282614794565b9150508091505092915050565b6000608083016000830151614d8460008601826146a3565b5060208301518482036020860152614d9c8282614794565b9150506040830151614db16040860182614e37565b506060830151614dc46060860182614e37565b508091505092915050565b60a082016000820151614de56000850182614e37565b506020820151614df86020850182614e37565b506040820151614e0b6040850182614e37565b506060820151614e1e6060850182614e37565b506080820151614e3160808501826146a3565b50505050565b614e40816156d7565b82525050565b614e4f816156d7565b82525050565b614e66614e61826156d7565b6157b2565b82525050565b6000614e788284614858565b915081905092915050565b6000614e8f8285614e55565b602082019150614e9f8284614e55565b6020820191508190509392505050565b6000602082019050614ec460008301846146b2565b92915050565b6000604082019050614edf60008301856146b2565b614eec60208301846146b2565b9392505050565b6000608082019050614f0860008301876146b2565b614f1560208301866146b2565b614f226040830185614e46565b614f2f6060830184614e46565b95945050505050565b6000606082019050614f4d60008301856146b2565b614f5a6020830184614cf9565b9392505050565b6000608082019050614f7660008301866146b2565b614f836020830185614cf9565b614f906060830184614e46565b949350505050565b600060a082019050614fad60008301876146b2565b614fba6020830186614cf9565b614fc76060830185614e46565b614fd46080830184614e46565b95945050505050565b6000604082019050614ff260008301856146b2565b614fff6020830184614e46565b9392505050565b6000602082019050818103600083015261502081846146c1565b905092915050565b60006020820190508181036000830152615042818461471f565b905092915050565b600060208201905061505f6000830184614801565b92915050565b6000602082019050818103600083015261507f818461481f565b905092915050565b600060208201905081810360008301526150a081614889565b9050919050565b600060208201905081810360008301526150c0816148ac565b9050919050565b600060208201905081810360008301526150e0816148cf565b9050919050565b60006020820190508181036000830152615100816148f2565b9050919050565b6000602082019050818103600083015261512081614915565b9050919050565b6000602082019050818103600083015261514081614938565b9050919050565b600060208201905081810360008301526151608161495b565b9050919050565b600060208201905081810360008301526151808161497e565b9050919050565b600060208201905081810360008301526151a0816149a1565b9050919050565b600060208201905081810360008301526151c0816149c4565b9050919050565b600060208201905081810360008301526151e0816149e7565b9050919050565b6000602082019050818103600083015261520081614a0a565b9050919050565b6000602082019050818103600083015261522081614a2d565b9050919050565b6000602082019050818103600083015261524081614a50565b9050919050565b6000602082019050818103600083015261526081614a73565b9050919050565b6000602082019050818103600083015261528081614a96565b9050919050565b600060208201905081810360008301526152a081614ab9565b9050919050565b600060208201905081810360008301526152c081614adc565b9050919050565b600060208201905081810360008301526152e081614aff565b9050919050565b6000602082019050818103600083015261530081614b22565b9050919050565b6000602082019050818103600083015261532081614b45565b9050919050565b600060208201905081810360008301526153418184614b68565b905092915050565b60006101008201905061535f6000830184614c3b565b92915050565b600060408201905061537a6000830184614cf9565b92915050565b6000602082019050818103600083015261539a8184614d28565b905092915050565b600060a0820190506153b76000830184614dcf565b92915050565b60006020820190506153d26000830184614e46565b92915050565b60006040820190506153ed6000830185614e46565b6153fa6020830184614e46565b9392505050565b600061016082019050615417600083018e614e46565b615424602083018d614e46565b615431604083018c6146b2565b61543e606083018b614801565b61544b608083018a614810565b61545860a0830189614e46565b61546560c0830188614e46565b61547260e0830187614e46565b615480610100830186614e46565b61548e610120830185614e46565b61549c610140830184614e46565b9c9b505050505050505050505050565b60006154b66154c7565b90506154c28282615738565b919050565b6000604051905090565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006155ae826156d7565b91506155b9836156d7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156155ee576155ed6157bc565b5b828201905092915050565b6000615604826156d7565b915061560f836156d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615615648576156476157bc565b5b828202905092915050565b600061565e826156d7565b9150615669836156d7565b92508282101561567c5761567b6157bc565b5b828203905092915050565b6000615692826156b7565b9050919050565b60008115159050919050565b60006156b082615687565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006156ec826156f3565b9050919050565b60006156fe826156b7565b9050919050565b60005b83811015615723578082015181840152602081019050615708565b83811115615732576000848401525b50505050565b6157418261581a565b810181811067ffffffffffffffff821117156157605761575f6157eb565b5b80604052505050565b6000615774826156d7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156157a7576157a66157bc565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f746f7765722f696e73756666696369656e742d7374616b650000000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f706c617965722d616c72656164792d696e697469616c697a6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b7f656e67696e652f696e73756666696369656e742d696e76656e746f7279000000600082015250565b7f656e67696e652f696e76616c69642d6d6f766500000000000000000000000000600082015250565b7f746f7765722f696e73756666696369656e742d706f696e747300000000000000600082015250565b7f746f7765722f696e76616c69642d746f7765722d6f776e657200000000000000600082015250565b7f746f7765722f6f7574736964652d64697374616e636500000000000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f656e67696e652f63616e6e6f742d7374616e642d6f6e2d626c6f636b00000000600082015250565b7f656e67696e652f696e76616c69642d61747461636b0000000000000000000000600082015250565b7f656e67696e652f6c6f636174696f6e2d6f636375706965640000000000000000600082015250565b7f656e67696e652f6e6f6e6578697374656e742d626c6f636b0000000000000000600082015250565b7f656e67696e652f746f6f6c2d6e65656465640000000000000000000000000000600082015250565b7f656e67696e652f696e73756666696369656e742d6d6174657269616c00000000600082015250565b7f746f7765722f77697468647261772d6f766572666c6f77000000000000000000600082015250565b7f656e67696e652f6e6f2d74617267657400000000000000000000000000000000600082015250565b7f656e67696e652f696e6163746976652d626c6f636b0000000000000000000000600082015250565b7f73746f726167652f726563697069656e742d73616d652d61732d73656e646572600082015250565b615bb781615687565b8114615bc257600080fd5b50565b615bce81615699565b8114615bd957600080fd5b50565b615be5816156a5565b8114615bf057600080fd5b50565b615bfc816156d7565b8114615c0757600080fd5b5056fea264697066735822122035d06e61d2be5bbd38644819f49bddc5cf7c14da249f2d7274b4f98c43cd017764736f6c63430008040033";

type GameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Game__factory extends ContractFactory {
  constructor(...args: GameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _worldWidth: BigNumberish,
    _worldHeight: BigNumberish,
    _attackRange: BigNumberish,
    _attackDamage: BigNumberish,
    _attackWaitTime: BigNumberish,
    _startPlayerHealth: BigNumberish,
    _startPlayerEnergy: BigNumberish,
    _blocks: BigNumberish[][],
    _items: ItemWithMetadataStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Game> {
    return super.deploy(
      _worldWidth,
      _worldHeight,
      _attackRange,
      _attackDamage,
      _attackWaitTime,
      _startPlayerHealth,
      _startPlayerEnergy,
      _blocks,
      _items,
      overrides || {}
    ) as Promise<Game>;
  }
  getDeployTransaction(
    _worldWidth: BigNumberish,
    _worldHeight: BigNumberish,
    _attackRange: BigNumberish,
    _attackDamage: BigNumberish,
    _attackWaitTime: BigNumberish,
    _startPlayerHealth: BigNumberish,
    _startPlayerEnergy: BigNumberish,
    _blocks: BigNumberish[][],
    _items: ItemWithMetadataStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _worldWidth,
      _worldHeight,
      _attackRange,
      _attackDamage,
      _attackWaitTime,
      _startPlayerHealth,
      _startPlayerEnergy,
      _blocks,
      _items,
      overrides || {}
    );
  }
  attach(address: string): Game {
    return super.attach(address) as Game;
  }
  connect(signer: Signer): Game__factory {
    return super.connect(signer) as Game__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameInterface {
    return new utils.Interface(_abi) as GameInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Game {
    return new Contract(address, _abi, signerOrProvider) as Game;
  }
}
