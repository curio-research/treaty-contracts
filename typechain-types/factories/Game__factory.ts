/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Game, GameInterface, ItemWithMetadataStruct } from "../Game";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldHeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_moveRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startPlayerEnergy",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "_blocks",
        type: "uint256[][]",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata[]",
        name: "_items",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_player1",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_player2",
        type: "address",
      },
    ],
    name: "Attack",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_zIndex",
        type: "uint256",
      },
    ],
    name: "AttackItem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_towerPos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "Craft",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "Death",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_zIndex",
        type: "uint256",
      },
    ],
    name: "MineItem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "Move",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "NewPlayer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "Place",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_towerPos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "StakeTower",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct GameTypes.Position",
        name: "_towerPos",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "UnstakeTower",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_blockOccupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_attackDamage",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_changeTopLevelStrengthAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_decreaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "_encodePos",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "_getAllPlayerAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData",
        name: "playerData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "_getBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getBlockCountAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getInventoryByPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Recipe",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockId",
        type: "uint256",
      },
    ],
    name: "_getItemAmountById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getItemNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_getItemWithMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getMap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.TileWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "_getPlayerPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "_getPositionFromIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopBlockAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_getTopLevelStrengthAtPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getWorldSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_increaseItemInInventory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_isItemActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isOccupied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "_isValidAttack",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_isValidMove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "dir",
        type: "bool",
      },
    ],
    name: "_modifyItemInInventoryNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "_place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setOccupierAtPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "_setPlayerPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "p2",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_dist",
        type: "uint256",
      },
    ],
    name: "_withinDistance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "rewardPerEpoch",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct GameTypes.Tower",
        name: "_tower",
        type: "tuple",
      },
    ],
    name: "addTower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_playerAddr",
        type: "address",
      },
    ],
    name: "attackItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "craft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
    ],
    name: "getTowerById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rewardPerEpoch",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakedTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct GameTypes.Tower",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "initializePlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
    ],
    name: "mine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_zIdx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_playerAddr",
        type: "address",
      },
    ],
    name: "mineItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "move",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_pos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "place",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "s",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "contract Epoch",
        name: "epochController",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "moveRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackRange",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackDamage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackWaitTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerHealth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startPlayerEnergy",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Epoch",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setEpochController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.Position",
        name: "_position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162006d4c38038062006d4c833981810160405281019062000037919062000add565b8960008001819055508860006001018190555060016000617536018190555087600061753701819055508660006175380181905550856000617539018190555084600061753a018190555083600061753b018190555082600061753c01819055506000898b620000a8919062000d6c565b905060005b81811015620003bf576000620000c9826200054d60201b60201c565b905084828151811062000105577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160006002018260000151606481106200014f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020182602001516064811062000191577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002019080519060200190620001ad929190620006cc565b506000858381518110620001ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151511115620003a857600085838151811062000236577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160018785815181106200027a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151516200028f919062000dcd565b81518110620002c7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508481815181106200030b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160600151600060020183600001516064811062000359577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360200151606481106200039b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010181905550505b508080620003b69062000e54565b915050620000ad565b5060005b82518110156200053b5782818151811062000407577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151600061753501600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff021916908315150217905550606082015181600101556080820151816002015560a0820151816003015560c0820151816004019080519060200190620004c2929190620006cc565b5060e0820151816005019080519060200190620004e1929190620006cc565b5061010082015181600601908051906020019062000501929190620006cc565b50905050600160006175360160008282546200051e919062000d0f565b925050819055508080620005329062000e54565b915050620003c3565b50505050505050505050505062000f6e565b620005576200071e565b60008062000576846000600101546200060c60201b620040b21760201c565b9150915060008062000599866000600101546200066c60201b6200410f1760201c565b91509150831580620005a9575081155b15620005ec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005e39062000c26565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b600080600083141562000626576000809150915062000665565b60018385816200065f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b6000806000831415620006865760008091509150620006c5565b6001838581620006bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b8280548282559060005260206000209081019282156200070b579160200282015b828111156200070a578251825591602001919060010190620006ed565b5b5090506200071a919062000738565b5090565b604051806040016040528060008152602001600081525090565b5b808211156200075357600081600090555060010162000739565b5090565b60006200076e620007688462000c71565b62000c48565b905080838252602082019050828560208602820111156200078e57600080fd5b60005b85811015620007dd57815167ffffffffffffffff811115620007b257600080fd5b808601620007c1898262000946565b8552602085019450602084019350505060018101905062000791565b5050509392505050565b6000620007fe620007f88462000ca0565b62000c48565b905080838252602082019050828560208602820111156200081e57600080fd5b60005b858110156200086d57815167ffffffffffffffff8111156200084257600080fd5b8086016200085189826200098a565b8552602085019450602084019350505060018101905062000821565b5050509392505050565b60006200088e620008888462000ccf565b62000c48565b90508083825260208201905082856020860282011115620008ae57600080fd5b60005b85811015620008e25781620008c7888262000ac6565b845260208401935060208301925050600181019050620008b1565b5050509392505050565b600082601f830112620008fe57600080fd5b81516200091084826020860162000757565b91505092915050565b600082601f8301126200092b57600080fd5b81516200093d848260208601620007e7565b91505092915050565b600082601f8301126200095857600080fd5b81516200096a84826020860162000877565b91505092915050565b600081519050620009848162000f3a565b92915050565b600061012082840312156200099e57600080fd5b620009ab61012062000c48565b90506000620009bd8482850162000973565b6000830152506020620009d38482850162000973565b6020830152506040620009e98482850162000973565b6040830152506060620009ff8482850162000ac6565b606083015250608062000a158482850162000ac6565b60808301525060a062000a2b8482850162000ac6565b60a08301525060c082015167ffffffffffffffff81111562000a4c57600080fd5b62000a5a8482850162000946565b60c08301525060e082015167ffffffffffffffff81111562000a7b57600080fd5b62000a898482850162000946565b60e08301525061010082015167ffffffffffffffff81111562000aab57600080fd5b62000ab98482850162000946565b6101008301525092915050565b60008151905062000ad78162000f54565b92915050565b6000806000806000806000806000806101408b8d03121562000afe57600080fd5b600062000b0e8d828e0162000ac6565b9a5050602062000b218d828e0162000ac6565b995050604062000b348d828e0162000ac6565b985050606062000b478d828e0162000ac6565b975050608062000b5a8d828e0162000ac6565b96505060a062000b6d8d828e0162000ac6565b95505060c062000b808d828e0162000ac6565b94505060e062000b938d828e0162000ac6565b9350506101008b015167ffffffffffffffff81111562000bb257600080fd5b62000bc08d828e01620008ec565b9250506101208b015167ffffffffffffffff81111562000bdf57600080fd5b62000bed8d828e0162000919565b9150509295989b9194979a5092959850565b600062000c0e60198362000cfe565b915062000c1b8262000f11565b602082019050919050565b6000602082019050818103600083015262000c418162000bff565b9050919050565b600062000c5462000c67565b905062000c62828262000e1e565b919050565b6000604051905090565b600067ffffffffffffffff82111562000c8f5762000c8e62000ed1565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000cbe5762000cbd62000ed1565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000ced5762000cec62000ed1565b5b602082029050602081019050919050565b600082825260208201905092915050565b600062000d1c8262000e14565b915062000d298362000e14565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000d615762000d6062000ea2565b5b828201905092915050565b600062000d798262000e14565b915062000d868362000e14565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562000dc25762000dc162000ea2565b5b828202905092915050565b600062000dda8262000e14565b915062000de78362000e14565b92508282101562000dfd5762000dfc62000ea2565b5b828203905092915050565b60008115159050919050565b6000819050919050565b62000e298262000f00565b810181811067ffffffffffffffff8211171562000e4b5762000e4a62000ed1565b5b80604052505050565b600062000e618262000e14565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000e975762000e9662000ea2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b62000f458162000e08565b811462000f5157600080fd5b50565b62000f5f8162000e14565b811462000f6b57600080fd5b50565b615dce8062000f7e6000396000f3fe608060405234801561001057600080fd5b50600436106102895760003560e01c806387fc55491161015c578063c6123327116100ce578063f09c4b2611610087578063f09c4b2614610842578063f0bfd52b14610872578063f17dd707146108a2578063f3917bd2146108be578063fad86c3c146108da578063ff85eff51461090a57610289565b8063c612332714610786578063d018db3e146107a2578063d8178847146107be578063dc8afb63146107da578063dd597d27146107f6578063f095277c1461081257610289565b8063b0b49ba511610120578063b0b49ba51461068e578063b62b7130146106be578063be565940146106da578063bfc525a21461070a578063c537e3e51461073a578063c582e4681461076a57610289565b806387fc5549146105c45780638bce7fab146105f4578063908b9f17146106125780639889c32114610642578063aae1eeac1461067257610289565b80635a9c06441161020057806379564688116101b957806379564688146104fb5780637e77eee414610517578063801b83db1461053357806380e8c9da1461056357806386b714e21461057f57806386e68be3146105a857610289565b80635a9c0644146104175780635b60fcca146104335780635de24e181461044f578063675730951461047f57806367ae0634146104af5780636f93315e146104df57610289565b80633f261e07116102525780633f261e0714610331578063460c976c1461034f578063487d20801461036b57806348c5a716146103875780634a4e51b3146103b757806350607fee146103e757610289565b80625194d81461028e5780630a05fc23146102aa5780631ccd4c15146102c6578063201549ac146102f65780632c190c6214610312575b600080fd5b6102a860048036038101906102a391906146ab565b610926565b005b6102c460048036038101906102bf919061466f565b610997565b005b6102e060048036038101906102db91906144b8565b610a6d565b6040516102ed919061553c565b60405180910390f35b610310600480360381019061030b91906145bb565b610acb565b005b61031a610dda565b604051610328929190615557565b60405180910390f35b610339610df0565b6040516103469190615185565b60405180910390f35b6103696004803603810190610364919061466f565b610e82565b005b61038560048036038101906103809190614543565b6110ea565b005b6103a1600480360381019061039c9190614440565b6111c2565b6040516103ae91906151c9565b60405180910390f35b6103d160048036038101906103cc91906145e4565b61120a565b6040516103de91906151c9565b60405180910390f35b61040160048036038101906103fc91906145bb565b6112aa565b60405161040e91906151a7565b60405180910390f35b610431600480360381019061042c9190614592565b61159c565b005b61044d600480360381019061044891906145bb565b6115e4565b005b610469600480360381019061046491906145bb565b6117d4565b60405161047691906151e4565b60405180910390f35b610499600480360381019061049491906145bb565b611807565b6040516104a69190615521565b60405180910390f35b6104c960048036038101906104c491906145bb565b6118f0565b6040516104d691906150a9565b60405180910390f35b6104f960048036038101906104f49190614633565b6119a2565b005b61051560048036038101906105109190614543565b611a49565b005b610531600480360381019061052c91906145bb565b611ac4565b005b61054d60048036038101906105489190614749565b611b96565b60405161055a91906154a6565b60405180910390f35b61057d6004803603810190610578919061466f565b611d3f565b005b610587611e6e565b60405161059f9c9b9a99989796959493929190615580565b60405180910390f35b6105c260048036038101906105bd919061447c565b611f13565b005b6105de60048036038101906105d9919061447c565b611fdf565b6040516105eb91906151c9565b60405180910390f35b6105fc612088565b604051610609919061553c565b60405180910390f35b61062c60048036038101906106279190614417565b612095565b60405161063991906154c8565b60405180910390f35b61065c60048036038101906106579190614749565b6121cf565b60405161066991906151c9565b60405180910390f35b61068c6004803603810190610687919061479b565b6121ff565b005b6106a860048036038101906106a3919061466f565b612414565b6040516106b5919061553c565b60405180910390f35b6106d860048036038101906106d3919061447c565b6125b7565b005b6106f460048036038101906106ef9190614417565b612619565b60405161070191906154e4565b60405180910390f35b610724600480360381019061071f91906145bb565b61268d565b604051610731919061553c565b60405180910390f35b610754600480360381019061074f91906145bb565b61271f565b60405161076191906151c9565b60405180910390f35b610784600480360381019061077f91906145bb565b61280c565b005b6107a0600480360381019061079b919061466f565b612b76565b005b6107bc60048036038101906107b79190614417565b612f19565b005b6107d860048036038101906107d3919061466f565b6130d2565b005b6107f460048036038101906107ef9190614543565b61328e565b005b610810600480360381019061080b91906146fa565b613408565b005b61082c60048036038101906108279190614417565b61355e565b60405161083991906154ff565b60405180910390f35b61085c600480360381019061085791906145bb565b613815565b604051610869919061553c565b60405180910390f35b61088c600480360381019061088791906145bb565b6138aa565b604051610899919061553c565b60405180910390f35b6108bc60048036038101906108b791906144f4565b613998565b005b6108d860048036038101906108d39190614749565b613a61565b005b6108f460048036038101906108ef9190614749565b613e40565b60405161090191906154e4565b60405180910390f35b610924600480360381019061091f91906146ab565b613edf565b005b61093883600061753901546000613408565b81836040516109479190615062565b60405180910390208273ffffffffffffffffffffffffffffffffffffffff167fcc7926ea1fb4e9d9aff14367399dc27095d3660766fc5c914444075eb445975e60405160405180910390a4505050565b60006109a283613815565b905060008114156109e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109df906153c6565b60405180910390fd5b6001816109f591906157e1565b8214610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d906153c6565b60405180910390fd5b610a3f8361268d565b600061753901541015610a5c57610a57838333610926565b610a68565b610a67838333613edf565b5b505050565b60008061753f0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6000600201816000015160648110610b0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201816020015160648110610b4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805480610b8a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590556000610bab82613815565b90506000811115610d4757600080600201836000015160648110610bf8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610c39577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002016001610c4b85613815565b610c5591906157e1565b81548110610c8c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490506000617535016000828152602001908152602001600020600101546000600201846000015160648110610cf5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110610d36577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016001018190555050610dd6565b600080600201836000015160648110610d89577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110610dca577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101819055505b5050565b6000806000800154600060010154915091509091565b6060600061753d01805480602002602001604051908101604052809291908181526020018280548015610e7857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e2e575b5050505050905090565b610ef282600061753e0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160405180604001604052908160008201548152602001600182015481525050600261120a565b610f31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2890615326565b60405180910390fd5b6000610f3c836117d4565b90506000806175420182604051610f53919061504b565b908152602001604051809103902090503373ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ff5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fec90615306565b60405180910390fd5b828160020154101561103c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103390615426565b60405180910390fd5b8281600201600082825461105091906157e1565b925050819055506000816002015414156110a95760008160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b7f54d5d7dd34f2aa9f3c1bacb697048dd8336f5e0b2774b9cebdbabaab208955fe3385856040516110dc93929190615109565b60405180910390a150505050565b80600061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600082825461114e91906157e1565b9250508190555060008061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000205414156111bd576111bc8260006121ff565b5b505050565b6000806111ce84612619565b905060006111db84612619565b90506111ee82826000617538015461120a565b6111fd57600092505050611204565b6001925050505b92915050565b600080836000015185600001511015611236578460000151846000015161123191906157e1565b61124b565b8360000151856000015161124a91906157e1565b5b90506000846020015186602001511015611278578560200151856020015161127391906157e1565b61128d565b8460200151866020015161128c91906157e1565b5b905083821115801561129f5750838111155b925050509392505050565b60606000606467ffffffffffffffff8111156112ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561132857816020015b61131561416c565b81526020019060019003908161130d5790505b509050600080846000015190505b600a85600001516113479190615731565b811015611591576000856020015190505b600a86602001516113699190615731565b81101561157d576040518060800160405280600060020184606481106113b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020183606481106113f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160006002018460648110611475577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020183606481106114b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020180548060200260200160405190810160405280929190818152602001828054801561150357602002820191906000526020600020905b8154815260200190600101908083116114ef575b5050505050815260200183815260200182815250848481518110611550577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001836115689190615731565b92508080611575906158f7565b915050611358565b508080611589906158f7565b915050611336565b508192505050919050565b8060006175330160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006115ef826117d4565b90506000806175420182604051611606919061504b565b908152602001604051809103902090503373ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146116a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169f90615306565b60405180910390fd5b6000806175330160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663900cf0cf6040518163ffffffff1660e01b815260040160206040518083038186803b15801561171557600080fd5b505afa158015611729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174d9190614772565b9050600082600301548261176191906157e1565b905060008360000154826117759190615787565b905061178633856001015483611a49565b8284600301819055507f5a73cbbec7fe39b081989085276f93fbdf935ffa4b01e17abeb5f6e89c85dd1f338783866040516117c49493929190615140565b60405180910390a1505050505050565b6060816000015182602001516040516020016117f192919061507d565b6040516020818303038152906040529050919050565b61180f6141aa565b60008260000151836020015160405160200161182c92919061507d565b604051602081830303815290604052905060006175420181604051611851919061504b565b90815260200160405180910390206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050915050919050565b600080600201826000015160648110611932577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611973577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006119ad836117d4565b905081600061754201826040516119c4919061504b565b90815260200160405180910390206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b611a548260016121ff565b80600061753f0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000828254611ab89190615731565b92505081905550505050565b611ace3382611fdf565b611b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b04906152c6565b60405180910390fd5b6000611b1833612619565b9050611b25600082611f13565b611b2f33836125b7565b611b393383611f13565b81604051611b479190615062565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f525cefd038552f5a70d0f20bb3d87cebf1bca8b381ca6f9514e5448e62e6477460405160405180910390a35050565b611b9e6141ef565b6000617535016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015611c7f57602002820191906000526020600020905b815481526020019060010190808311611c6b575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015611cd757602002820191906000526020600020905b815481526020019060010190808311611cc3575b5050505050815260200160068201805480602002602001604051908101604052809291908181526020018280548015611d2f57602002820191906000526020600020905b815481526020019060010190808311611d1b575b5050505050815250509050919050565b6000611d4b3383610a6d565b1415611d8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d83906152a6565b60405180910390fd5b8160000151611d9a33612619565b60000151148015611dba57508160200151611db433612619565b60200151145b15611dfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611df190615366565b60405180910390fd5b611e0482826130d2565b611e10338260016110ea565b8082604051611e1f9190615062565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f40324c8c437414ce20b3540df85835a30fd22d7c0f7a929530ebd656981db31060405160405180910390a45050565b6000806000015490806001015490806175320160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175320160149054906101000a900460ff1690806175330160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806175360154908061753701549080617538015490806175390154908061753a0154908061753b0154908061753c015490508c565b816000600201826000015160648110611f55577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110611f96577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600080611feb84612619565b905060008060000154846000015110801561200e57506000600101548460200151105b801561201f57506000846000015110155b801561203057506000846020015110155b90508061204257600092505050612082565b61205384836000617537015461120a565b61206257600092505050612082565b61206b8461271f565b1561207b57600092505050612082565b6001925050505b92915050565b6000806175360154905090565b61209d614241565b600061753e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101000160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152602001600582015481526020016006820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b60008061753401600083815260200190815260200160002060010160009054906101000a900460ff169050919050565b60008060005b60006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156122fb578460006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106122cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015414156122e857809250600191505b80806122f3906158f7565b915050612205565b50826123965780156123915760006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110612382577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001600090555b61240e565b821561240d578061240c5760006175410160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b50505050565b600080600201836000015160648110612456577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110612497577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018054905082106124e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124da90615346565b60405180910390fd5b6000600201836000015160648110612524577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110612565577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020182815481106125a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b80600061753e0160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160008201518160000155602082015181600101559050505050565b6126216142a6565b600061753e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601604051806040016040529081600082015481526020016001820154815250509050919050565b6000806002018260000151606481106126cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110612710577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600101549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16612741836118f0565b73ffffffffffffffffffffffffffffffffffffffff16146127655760019050612807565b6000806002018360000151606481106127a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c02018360200151606481106127e8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600302016002018054905011156128025760019050612807565b600090505b919050565b600061753e0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16156128a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161289790615286565b60405180910390fd5b6128a98161271f565b156128e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128e0906153a6565b60405180910390fd5b6040518061010001604052806001151581526020016001151581526020014281526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600061753b01548152602001600061753c015481526020016006815260200182815250600061753e0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff0219169083151502179055506040820151816001015560608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816003015560a0820151816004015560c0820151816005015560e08201518160060160008201518160000155602082015181600101555050905050600061753d01339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ad13382611f13565b606460006175430160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080604051612b289190615062565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167ff0a6a142d1cdc04619a8fd8924155cd64ff41b31e4226fb7ffa08e5ade8d6f9d60405160405180910390a350565b6000612b81836117d4565b9050612bf383600061753e0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060160405180604001604052908160008201548152602001600182015481525050600261120a565b612c32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c2990615326565b60405180910390fd5b6000806175420182604051612c47919061504b565b9081526020016040518091039020905082816002015410612c9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c9490615246565b60405180910390fd5b8260006175430160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015612d23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d1a906152e6565b60405180910390fd5b806002015460006175430160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612d7a9190615731565b925050819055506000806175330160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663900cf0cf6040518163ffffffff1660e01b815260040160206040518083038186803b158015612dee57600080fd5b505afa158015612e02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e269190614772565b9050338260040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508082600301819055508382600201819055508360006175430160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254612ed091906157e1565b925050819055507f680ec991afe6afbde261c58086976523621910500cce67631d19d17476f9a303338686604051612f0a93929190615109565b60405180910390a15050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612f89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f8090615446565b60405180910390fd5b612f9333826111c2565b612fd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fc990615386565b60405180910390fd5b612fe481600061753901546000613998565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f93a24e91f44890f6ead6f4f95caebbda5c7039be4277148123db9b4d2b293c9060405160405180910390a360008061753e0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154116130cf578073ffffffffffffffffffffffffffffffffffffffff167fbc6991e1364053ec58da06cd55327f300812082beeba866fc000f513bd89e9db60405160405180910390a25b50565b600080600201836000015160648110613114577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201836020015160648110613155577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201905060018180549050106131b85781816000815481106131a5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001819055506131e1565b808290806001815401808255809150506001900390600052602060002001600090919091909150555b600061753501600083815260200190815260200160002060010154600060020184600001516064811061323d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020184602001516064811061327e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010181905550505050565b600061329933612619565b905060006132a685612619565b90508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415613317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161330e90615486565b60405180910390fd5b6133238282600561120a565b613362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161335990615206565b60405180910390fd5b8261336d3386610a6d565b10156133ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133a590615226565b60405180910390fd5b6133b93385856110ea565b6133c4858585611a49565b7f9ed053bb818ff08b8353cd46f78db1f0799f31c9e4458fdb425c10eccd2efc44338686866040516133f994939291906150c4565b60405180910390a15050505050565b60011515811515146134b857816000600201846000015160648110613456577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201846020015160648110613497577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010160008282546134ad91906157e1565b925050819055613558565b8160006002018460000151606481106134fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020184602001516064811061353b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160010160008282546135519190615731565b9250508190555b50505050565b6135666142c0565b6000806175410160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008167ffffffffffffffff8111156135f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156136205781602001602082028036833780820191505090505b50905060005b82811015613765576000806175410160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106136aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050600061753f0160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002054838381518110613745577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505050808061375d906158f7565b915050613626565b50604051806040016040528060006175410160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156137fe57602002820191906000526020600020905b8154815260200190600101908083116137ea575b505050505081526020018281525092505050919050565b600080600201826000015160648110613857577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c0201826020015160648110613898577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60030201600201805490509050919050565b6000806138b683613815565b905060006002018360000151606481106138f9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61012c020183602001516064811061393a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6003020160020160018261394e91906157e1565b81548110613985577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154915050919050565b806139fe5781600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546139f391906157e1565b925050819055613a5b565b81600061753e0160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254613a549190615731565b9250508190555b50505050565b613a69612088565b811115613aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613aa2906153c6565b60405180910390fd5b613ab4816121cf565b15613af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613aeb90615466565b60405180910390fd5b600080617535016000838152602001908152602001600020604051806101200160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015613bd657602002820191906000526020600020905b815481526020019060010190808311613bc2575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015613c2e57602002820191906000526020600020905b815481526020019060010190808311613c1a575b5050505050815260200160068201805480602002602001604051908101604052809291908181526020018280548015613c8657602002820191906000526020600020905b815481526020019060010190808311613c72575b505050505081525050905060005b8160e0015151811015613deb5760008260e001518281518110613ce0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905060008361010001518381518110613d2a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905080600061753f0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015613dcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613dc290615406565b60405180910390fd5b613dd63383836110ea565b50508080613de3906158f7565b915050613c94565b50613df833836001611a49565b813373ffffffffffffffffffffffffffffffffffffffff167f82bf558222c4c37aae80230f0a656373f327bcc6f1ac1ef73c385d4dec21b22360405160405180910390a35050565b613e486142a6565b600080613e5a846000600101546140b2565b91509150600080613e708660006001015461410f565b91509150831580613e7f575081155b15613ebf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613eb690615266565b60405180910390fd5b604051806040016040528084815260200182815250945050505050919050565b6000613eeb8484612414565b9050600080617535016000838152602001908152602001600020600401805480602002602001604051908101604052809291908181526020018280548015613f5257602002820191906000526020600020905b815481526020019060010190808311613f3e575b5050505050905060008082511415613f6d5760019050613ff0565b60005b8251811015613fee576000613fc586858481518110613fb8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610a6d565b90506000811115613fda576001925050613fee565b508080613fe6906158f7565b915050613f70565b505b80614030576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401614027906153e6565b60405180910390fd5b61403c84846001611a49565b61404586610acb565b82866040516140549190615062565b60405180910390208573ffffffffffffffffffffffffffffffffffffffff167ff988b03baf97aec26141c627d39f1a5705052d18cdc6b1f164b474c369c5db72886040516140a2919061553c565b60405180910390a4505050505050565b60008060008314156140ca5760008091509150614108565b6001838581614102577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04915091505b9250929050565b60008060008314156141275760008091509150614165565b600183858161415f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b06915091505b9250929050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600081525090565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b60405180610100016040528060001515815260200160001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016142a06142a6565b81525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b6000813590506142e981615d3c565b92915050565b6000813590506142fe81615d53565b92915050565b60008135905061431381615d6a565b92915050565b60006040828403121561432b57600080fd5b614335604061563a565b90506000614345848285016143ed565b6000830152506020614359848285016143ed565b60208301525092915050565b600060a0828403121561437757600080fd5b61438160a061563a565b90506000614391848285016143ed565b60008301525060206143a5848285016143ed565b60208301525060406143b9848285016143ed565b60408301525060606143cd848285016143ed565b60608301525060806143e1848285016142da565b60808301525092915050565b6000813590506143fc81615d81565b92915050565b60008151905061441181615d81565b92915050565b60006020828403121561442957600080fd5b6000614437848285016142da565b91505092915050565b6000806040838503121561445357600080fd5b6000614461858286016142da565b9250506020614472858286016142da565b9150509250929050565b6000806060838503121561448f57600080fd5b600061449d858286016142da565b92505060206144ae85828601614319565b9150509250929050565b600080604083850312156144cb57600080fd5b60006144d9858286016142da565b92505060206144ea858286016143ed565b9150509250929050565b60008060006060848603121561450957600080fd5b6000614517868287016142da565b9350506020614528868287016143ed565b9250506040614539868287016142ef565b9150509250925092565b60008060006060848603121561455857600080fd5b6000614566868287016142da565b9350506020614577868287016143ed565b9250506040614588868287016143ed565b9150509250925092565b6000602082840312156145a457600080fd5b60006145b284828501614304565b91505092915050565b6000604082840312156145cd57600080fd5b60006145db84828501614319565b91505092915050565b600080600060a084860312156145f957600080fd5b600061460786828701614319565b935050604061461886828701614319565b9250506080614629868287016143ed565b9150509250925092565b60008060e0838503121561464657600080fd5b600061465485828601614319565b925050604061466585828601614365565b9150509250929050565b6000806060838503121561468257600080fd5b600061469085828601614319565b92505060406146a1858286016143ed565b9150509250929050565b6000806000608084860312156146c057600080fd5b60006146ce86828701614319565b93505060406146df868287016143ed565b92505060606146f0868287016142da565b9150509250925092565b60008060006080848603121561470f57600080fd5b600061471d86828701614319565b935050604061472e868287016143ed565b925050606061473f868287016142ef565b9150509250925092565b60006020828403121561475b57600080fd5b6000614769848285016143ed565b91505092915050565b60006020828403121561478457600080fd5b600061479284828501614402565b91505092915050565b600080604083850312156147ae57600080fd5b60006147bc858286016143ed565b92505060206147cd858286016142ef565b9150509250929050565b60006147e38383614833565b60208301905092915050565b60006147fb8383614f3c565b905092915050565b600061480f8383615007565b60208301905092915050565b60006148278383615025565b60208301905092915050565b61483c81615815565b82525050565b61484b81615815565b82525050565b600061485c8261568f565b61486681856156e2565b93506148718361565f565b8060005b838110156148a257815161488988826147d7565b9750614894836156bb565b925050600181019050614875565b5085935050505092915050565b60006148ba8261569a565b6148c481856156f3565b9350836020820285016148d68561566f565b8060005b8581101561491257848403895281516148f385826147ef565b94506148fe836156c8565b925060208a019950506001810190506148da565b50829750879550505050505092915050565b600061492f826156a5565b6149398185615704565b93506149448361567f565b8060005b8381101561497557815161495c8882614803565b9750614967836156d5565b925050600181019050614948565b5085935050505092915050565b61498b81615827565b82525050565b61499a81615827565b82525050565b6149a98161586f565b82525050565b60006149ba826156b0565b6149c48185615715565b93506149d4818560208601615893565b6149dd816159a8565b840191505092915050565b60006149f3826156b0565b6149fd8185615726565b9350614a0d818560208601615893565b80840191505092915050565b6000614a26601483615715565b9150614a31826159b9565b602082019050919050565b6000614a49601a83615715565b9150614a54826159e2565b602082019050919050565b6000614a6c601883615715565b9150614a7782615a0b565b602082019050919050565b6000614a8f601983615715565b9150614a9a82615a34565b602082019050919050565b6000614ab2602183615715565b9150614abd82615a5d565b604082019050919050565b6000614ad5601d83615715565b9150614ae082615aac565b602082019050919050565b6000614af8601383615715565b9150614b0382615ad5565b602082019050919050565b6000614b1b601983615715565b9150614b2682615afe565b602082019050919050565b6000614b3e601983615715565b9150614b4982615b27565b602082019050919050565b6000614b61601683615715565b9150614b6c82615b50565b602082019050919050565b6000614b84601683615715565b9150614b8f82615b79565b602082019050919050565b6000614ba7601c83615715565b9150614bb282615ba2565b602082019050919050565b6000614bca601583615715565b9150614bd582615bcb565b602082019050919050565b6000614bed601883615715565b9150614bf882615bf4565b602082019050919050565b6000614c10601883615715565b9150614c1b82615c1d565b602082019050919050565b6000614c33601283615715565b9150614c3e82615c46565b602082019050919050565b6000614c56601c83615715565b9150614c6182615c6f565b602082019050919050565b6000614c79601783615715565b9150614c8482615c98565b602082019050919050565b6000614c9c601083615715565b9150614ca782615cc1565b602082019050919050565b6000614cbf601583615715565b9150614cca82615cea565b602082019050919050565b6000614ce2602083615715565b9150614ced82615d13565b602082019050919050565b600061012083016000830151614d116000860182614982565b506020830151614d246020860182614982565b506040830151614d376040860182614982565b506060830151614d4a6060860182615007565b506080830151614d5d6080860182615007565b5060a0830151614d7060a0860182615007565b5060c083015184820360c0860152614d888282614924565b91505060e083015184820360e0860152614da28282614924565b915050610100830151848203610100860152614dbe8282614924565b9150508091505092915050565b61012082016000820151614de26000850182614982565b506020820151614df56020850182614982565b506040820151614e086040850182615007565b506060820151614e1b6060850182614833565b506080820151614e2e6080850182615007565b5060a0820151614e4160a0850182615007565b5060c0820151614e5460c0850182615007565b5060e0820151614e6760e0850182614e6d565b50505050565b604082016000820151614e836000850182615007565b506020820151614e966020850182615007565b50505050565b604082016000820151614eb26000850182615007565b506020820151614ec56020850182615007565b50505050565b600082016000820151614ede848261481b565b9350506020820151614ef0848261481b565b935050505050565b60006040830160008301518482036000860152614f158282614924565b91505060208301518482036020860152614f2f8282614924565b9150508091505092915050565b6000608083016000830151614f546000860182614833565b5060208301518482036020860152614f6c8282614924565b9150506040830151614f816040860182615007565b506060830151614f946060860182615007565b508091505092915050565b60a082016000820151614fb56000850182615007565b506020820151614fc86020850182615007565b506040820151614fdb6040850182615007565b506060820151614fee6060850182615007565b5060808201516150016080850182614833565b50505050565b61501081615865565b82525050565b61501f81615865565b82525050565b61502e81615865565b82525050565b61504561504082615865565b615940565b82525050565b600061505782846149e8565b915081905092915050565b600061506e8284614ecb565b60408201915081905092915050565b60006150898285615034565b6020820191506150998284615034565b6020820191508190509392505050565b60006020820190506150be6000830184614842565b92915050565b60006080820190506150d96000830187614842565b6150e66020830186614842565b6150f36040830185615016565b6151006060830184615016565b95945050505050565b600060808201905061511e6000830186614842565b61512b6020830185614e9c565b6151386060830184615016565b949350505050565b600060a0820190506151556000830187614842565b6151626020830186614e9c565b61516f6060830185615016565b61517c6080830184615016565b95945050505050565b6000602082019050818103600083015261519f8184614851565b905092915050565b600060208201905081810360008301526151c181846148af565b905092915050565b60006020820190506151de6000830184614991565b92915050565b600060208201905081810360008301526151fe81846149af565b905092915050565b6000602082019050818103600083015261521f81614a19565b9050919050565b6000602082019050818103600083015261523f81614a3c565b9050919050565b6000602082019050818103600083015261525f81614a5f565b9050919050565b6000602082019050818103600083015261527f81614a82565b9050919050565b6000602082019050818103600083015261529f81614aa5565b9050919050565b600060208201905081810360008301526152bf81614ac8565b9050919050565b600060208201905081810360008301526152df81614aeb565b9050919050565b600060208201905081810360008301526152ff81614b0e565b9050919050565b6000602082019050818103600083015261531f81614b31565b9050919050565b6000602082019050818103600083015261533f81614b54565b9050919050565b6000602082019050818103600083015261535f81614b77565b9050919050565b6000602082019050818103600083015261537f81614b9a565b9050919050565b6000602082019050818103600083015261539f81614bbd565b9050919050565b600060208201905081810360008301526153bf81614be0565b9050919050565b600060208201905081810360008301526153df81614c03565b9050919050565b600060208201905081810360008301526153ff81614c26565b9050919050565b6000602082019050818103600083015261541f81614c49565b9050919050565b6000602082019050818103600083015261543f81614c6c565b9050919050565b6000602082019050818103600083015261545f81614c8f565b9050919050565b6000602082019050818103600083015261547f81614cb2565b9050919050565b6000602082019050818103600083015261549f81614cd5565b9050919050565b600060208201905081810360008301526154c08184614cf8565b905092915050565b6000610120820190506154de6000830184614dcb565b92915050565b60006040820190506154f96000830184614e9c565b92915050565b600060208201905081810360008301526155198184614ef8565b905092915050565b600060a0820190506155366000830184614f9f565b92915050565b60006020820190506155516000830184615016565b92915050565b600060408201905061556c6000830185615016565b6155796020830184615016565b9392505050565b600061018082019050615596600083018f615016565b6155a3602083018e615016565b6155b0604083018d614842565b6155bd606083018c614991565b6155ca608083018b6149a0565b6155d760a083018a615016565b6155e460c0830189615016565b6155f160e0830188615016565b6155ff610100830187615016565b61560d610120830186615016565b61561b610140830185615016565b615629610160830184615016565b9d9c50505050505050505050505050565b6000615644615655565b905061565082826158c6565b919050565b6000604051905090565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061573c82615865565b915061574783615865565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561577c5761577b61594a565b5b828201905092915050565b600061579282615865565b915061579d83615865565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156157d6576157d561594a565b5b828202905092915050565b60006157ec82615865565b91506157f783615865565b92508282101561580a5761580961594a565b5b828203905092915050565b600061582082615845565b9050919050565b60008115159050919050565b600061583e82615815565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061587a82615881565b9050919050565b600061588c82615845565b9050919050565b60005b838110156158b1578082015181840152602081019050615896565b838111156158c0576000848401525b50505050565b6158cf826159a8565b810181811067ffffffffffffffff821117156158ee576158ed615979565b5b80604052505050565b600061590282615865565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156159355761593461594a565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f73746f726167652f6e6f742d696e2d72616e6765000000000000000000000000600082015250565b7f73746f726167652f696e73756666696369656e742d626c6f636b000000000000600082015250565b7f746f7765722f696e73756666696369656e742d7374616b650000000000000000600082015250565b7f536166654d6174682f696e76616c69642d6469766973696f6e00000000000000600082015250565b7f656e67696e652f706c617965722d616c72656164792d696e697469616c697a6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b7f656e67696e652f696e73756666696369656e742d696e76656e746f7279000000600082015250565b7f656e67696e652f696e76616c69642d6d6f766500000000000000000000000000600082015250565b7f746f7765722f696e73756666696369656e742d706f696e747300000000000000600082015250565b7f746f7765722f696e76616c69642d746f7765722d6f776e657200000000000000600082015250565b7f746f7765722f6f7574736964652d64697374616e636500000000000000000000600082015250565b7f656e67696e652f696e76616c69642d7a2d696e64657800000000000000000000600082015250565b7f656e67696e652f63616e6e6f742d7374616e642d6f6e2d626c6f636b00000000600082015250565b7f656e67696e652f696e76616c69642d61747461636b0000000000000000000000600082015250565b7f656e67696e652f6c6f636174696f6e2d6f636375706965640000000000000000600082015250565b7f656e67696e652f6e6f6e6578697374656e742d626c6f636b0000000000000000600082015250565b7f656e67696e652f746f6f6c2d6e65656465640000000000000000000000000000600082015250565b7f656e67696e652f696e73756666696369656e742d6d6174657269616c00000000600082015250565b7f746f7765722f77697468647261772d6f766572666c6f77000000000000000000600082015250565b7f656e67696e652f6e6f2d74617267657400000000000000000000000000000000600082015250565b7f656e67696e652f696e6163746976652d626c6f636b0000000000000000000000600082015250565b7f73746f726167652f726563697069656e742d73616d652d61732d73656e646572600082015250565b615d4581615815565b8114615d5057600080fd5b50565b615d5c81615827565b8114615d6757600080fd5b50565b615d7381615833565b8114615d7e57600080fd5b50565b615d8a81615865565b8114615d9557600080fd5b5056fea26469706673582212202036b4dd02aa35313206c6f2ecc77a02545393779f7f6bcbd3eefd00d7e0175064736f6c63430008040033";

type GameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Game__factory extends ContractFactory {
  constructor(...args: GameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _worldWidth: BigNumberish,
    _worldHeight: BigNumberish,
    _moveRange: BigNumberish,
    _attackRange: BigNumberish,
    _attackDamage: BigNumberish,
    _attackWaitTime: BigNumberish,
    _startPlayerHealth: BigNumberish,
    _startPlayerEnergy: BigNumberish,
    _blocks: BigNumberish[][],
    _items: ItemWithMetadataStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Game> {
    return super.deploy(
      _worldWidth,
      _worldHeight,
      _moveRange,
      _attackRange,
      _attackDamage,
      _attackWaitTime,
      _startPlayerHealth,
      _startPlayerEnergy,
      _blocks,
      _items,
      overrides || {}
    ) as Promise<Game>;
  }
  getDeployTransaction(
    _worldWidth: BigNumberish,
    _worldHeight: BigNumberish,
    _moveRange: BigNumberish,
    _attackRange: BigNumberish,
    _attackDamage: BigNumberish,
    _attackWaitTime: BigNumberish,
    _startPlayerHealth: BigNumberish,
    _startPlayerEnergy: BigNumberish,
    _blocks: BigNumberish[][],
    _items: ItemWithMetadataStruct[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _worldWidth,
      _worldHeight,
      _moveRange,
      _attackRange,
      _attackDamage,
      _attackWaitTime,
      _startPlayerHealth,
      _startPlayerEnergy,
      _blocks,
      _items,
      overrides || {}
    );
  }
  attach(address: string): Game {
    return super.attach(address) as Game;
  }
  connect(signer: Signer): Game__factory {
    return super.connect(signer) as Game__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameInterface {
    return new utils.Interface(_abi) as GameInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Game {
    return new Contract(address, _abi, signerOrProvider) as Game;
  }
}
