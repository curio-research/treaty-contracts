/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GetterFacet, GetterFacetInterface } from "../GetterFacet";

const _abi = [
  {
    inputs: [],
    name: "bulkGetAllArmies",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "troopIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "lastMoved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastLargeActionTaken",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Position",
            name: "pos",
            type: "tuple",
          },
        ],
        internalType: "struct Army[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bulkGetAllTroops",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "armyId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "troopTypeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
        ],
        internalType: "struct Troop[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_armyId",
        type: "uint256",
      },
    ],
    name: "getArmy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "troopIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "lastMoved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastLargeActionTaken",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Position",
            name: "pos",
            type: "tuple",
          },
        ],
        internalType: "struct Army",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "getArmyAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "troopIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "lastMoved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastLargeActionTaken",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Position",
            name: "pos",
            type: "tuple",
          },
        ],
        internalType: "struct Army",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getBase",
    outputs: [
      {
        components: [
          {
            internalType: "enum BASE_NAME",
            name: "name",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "attackFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defenseFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "goldGenerationPerSecond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oilGenerationPerSecond",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Position",
            name: "pos",
            type: "tuple",
          },
        ],
        internalType: "struct Base",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "getBaseAt",
    outputs: [
      {
        components: [
          {
            internalType: "enum BASE_NAME",
            name: "name",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "attackFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defenseFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "goldGenerationPerSecond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oilGenerationPerSecond",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Position",
            name: "pos",
            type: "tuple",
          },
        ],
        internalType: "struct Base",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endId",
        type: "uint256",
      },
    ],
    name: "getBulkBase",
    outputs: [
      {
        components: [
          {
            internalType: "enum BASE_NAME",
            name: "name",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "attackFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defenseFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "goldGenerationPerSecond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oilGenerationPerSecond",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Position",
            name: "pos",
            type: "tuple",
          },
        ],
        internalType: "struct Base[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endId",
        type: "uint256",
      },
    ],
    name: "getBulkTroopTypes",
    outputs: [
      {
        components: [
          {
            internalType: "enum TROOP_NAME",
            name: "name",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "damagePerHit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "attackFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defenseFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "movementCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "largeActionCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "goldPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oilConsumptionPerSecond",
            type: "uint256",
          },
        ],
        internalType: "struct TroopType[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "_startPos",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_interval",
        type: "uint256",
      },
    ],
    name: "getMapChunk",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isInitialized",
            type: "bool",
          },
          {
            internalType: "enum TERRAIN",
            name: "terrain",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "occupantId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseId",
            type: "uint256",
          },
        ],
        internalType: "struct Tile[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Position[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "goldBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalGoldGenerationPerUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalOilGenerationPerUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalOilConsumptionPerUpdate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceLastUpdated",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numOwnedBases",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numOwnedTroops",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDebuffed",
            type: "bool",
          },
        ],
        internalType: "struct Player",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayerCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "_pos",
        type: "tuple",
      },
    ],
    name: "getTileAt",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isInitialized",
            type: "bool",
          },
          {
            internalType: "enum TERRAIN",
            name: "terrain",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "occupantId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseId",
            type: "uint256",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_troopId",
        type: "uint256",
      },
    ],
    name: "getTroop",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "armyId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "troopTypeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
        ],
        internalType: "struct Troop",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_troopTypeId",
        type: "uint256",
      },
    ],
    name: "getTroopType",
    outputs: [
      {
        components: [
          {
            internalType: "enum TROOP_NAME",
            name: "name",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "damagePerHit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "attackFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defenseFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "movementCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "largeActionCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "goldPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oilConsumptionPerSecond",
            type: "uint256",
          },
        ],
        internalType: "struct TroopType",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWorldConstants",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "worldWidth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "worldHeight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "combatEfficiency",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numInitTerrainTypes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initBatchSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initPlayerGoldBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initPlayerOilBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBaseCountPerPlayer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTroopCountPerPlayer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPlayerCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultBaseGoldGenerationPerSecond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defaultWellOilGenerationPerSecond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "debuffFactor",
            type: "uint256",
          },
        ],
        internalType: "struct WorldConstants",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "isPlayerInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061241d806100206000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c8063898ce75c116100b2578063b278cc4a11610081578063e7a42cb311610066578063e7a42cb314610364578063fa5ba3fb14610377578063fbde0b9e1461038c57600080fd5b8063b278cc4a14610349578063c2e522061461035c57600080fd5b8063898ce75c146102c65780639184f0b6146102e6578063969f14ac14610309578063a58343da1461032957600080fd5b80636c469c26116100ee5780636c469c26146102505780636fd41d84146102715780637239d5ca14610286578063785b4724146102a657600080fd5b806321c3b522146101205780632fb5ac32146101df5780633c763c92146102105780635c12cd4b14610230575b600080fd5b6101286103ac565b6040516101d6919081516001600160a01b031681526101c081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e08301526101008084015181840152506101208084015181840152506101408084015181840152506101608084015181840152506101808084015181840152506101a080840151818401525092915050565b60405180910390f35b7f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae7774095a545b6040519081526020016101d6565b61022361021e366004611dcc565b610666565b6040516101d69190611fee565b61024361023e366004611a6c565b610846565b6040516101d6919061218f565b61026361025e366004611d00565b610945565b6040516101d692919061203d565b610279610c1f565b6040516101d69190611f8d565b610299610294366004611d9c565b610df7565b6040516101d69190612236565b6102b96102b4366004611d9c565b610f20565b6040516101d69190612245565b6102d96102d4366004611ce5565b610f9c565b6040516101d69190612228565b6102f96102f4366004611a6c565b61104f565b60405190151581526020016101d6565b61031c610317366004611ce5565b6110f6565b6040516101d69190612180565b61033c610337366004611d9c565b611283565b6040516101d6919061216d565b61031c610357366004611d9c565b61132b565b6102026113d0565b61033c610372366004611ce5565b611453565b61037f6115ce565b6040516101d69190612117565b61039f61039a366004611dcc565b611736565b6040516101d691906120d4565b610427604051806101c0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b50604080516101c0810182527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba088546001600160a01b031681527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba0895460208201527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba08a54918101919091527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba08b5460608201527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba08c5460808201527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba08d5460a08201527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba08e5460c08201527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba08f5460e08201527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba090546101008201527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba091546101208201527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba092546101408201527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba093546101608201527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba094546101808201527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba095546101a082015290565b60606000610674848461233e565b61067f906001612307565b67ffffffffffffffff8111156106a557634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156106de57816020015b6106cb611938565b8152602001906001900390816106c35790505b50905060005b6106ee858561233e565b6106f9906001612307565b81101561083c577f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae7774095b600061072d8784612307565b815260208101919091526040908101600020815161010081019092528054829060ff16600281111561076f57634e487b7160e01b600052602160045260246000fd5b600281111561078e57634e487b7160e01b600052602160045260246000fd5b8152815461010090046001600160a01b031660208083019190915260018301546040808401919091526002840154606084015260038401546080840152600484015460a0840152600584015460c08401528051808201909152600684015481526007909301549083015260e00152825183908390811061081e57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061083490612355565b9150506106e4565b5090505b92915050565b6108a060405180610140016040528060008152602001600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b6040517f32e08fea0000000000000000000000000000000000000000000000000000000081526001600160a01b038316600482015273__$8a461d6baeda20cc8b97c0d95fb84681dd$__906332e08fea906024016101406040518083038186803b15801561090d57600080fd5b505af4158015610921573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108409190611c55565b6060806000610954848061231f565b67ffffffffffffffff81111561097a57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156109d757816020015b6109c4604080516080810190915260008082526020820190815260200160008152602001600081525090565b8152602001906001900390816109985790505b50905060006109e6858061231f565b67ffffffffffffffff811115610a0c57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610a5157816020015b6040805180820190915260008082526020820152815260200190600190039081610a2a5790505b5086519091506000905b8751610a68908890612307565b811015610c125760208801515b878960200151610a859190612307565b811015610bff5760408051808201909152828152602081018290527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba099836113888110610ae157634e487b7160e01b600052603260045260246000fd5b613a980201826113888110610b0657634e487b7160e01b600052603260045260246000fd5b604080516080810190915260039190910291909101805460ff8082161515845260208401916101009004166002811115610b5057634e487b7160e01b600052602160045260246000fd5b6002811115610b6f57634e487b7160e01b600052602160045260246000fd5b815260200160018201548152602001600282015481525050868581518110610ba757634e487b7160e01b600052603260045260246000fd5b602002602001018190525080858581518110610bd357634e487b7160e01b600052603260045260246000fd5b6020908102919091010152610be9600185612307565b9350508080610bf790612355565b915050610a75565b5080610c0a81612355565b915050610a5b565b5091969095509350505050565b7f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae7774095f546060906000610c5160018361233e565b67ffffffffffffffff811115610c7757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610cb057816020015b610c9d6119a1565b815260200190600190039081610c955790505b50905060005b610cc160018461233e565b811015610df0577f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae777409616000610cf6836001612307565b81526020808201929092526040908101600020815160a08101835281546001600160a01b031681526001820180548451818702810187019095528085529194929385840193909290830182828015610d6d57602002820191906000526020600020905b815481526020019060010190808311610d59575b505050505081526020016002820154815260200160038201548152602001600482016040518060400160405290816000820154815260200160018201548152505081525050828281518110610dd257634e487b7160e01b600052603260045260246000fd5b60200260200101819052508080610de890612355565b915050610cb6565b5092915050565b610e47604080516101208101909152806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60008281527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae77740963602052604090819020815161012081019092528054829060ff166003811115610ea657634e487b7160e01b600052602160045260246000fd5b6003811115610ec557634e487b7160e01b600052602160045260246000fd5b815260018201546020820152600282015460408201526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e08201526008909101546101009091015292915050565b610f4460405180606001604052806000815260200160008152602001600081525090565b5060009081527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae777409606020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915290565b610fc8604080516080810190915260008082526020820190815260200160008152602001600081525090565b60405163342a412360e01b815273__$8a461d6baeda20cc8b97c0d95fb84681dd$__9063342a412390610fff908590600401612211565b60806040518083038186803b15801561101757600080fd5b505af415801561102b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108409190611d2a565b6040517f241f227d0000000000000000000000000000000000000000000000000000000081526001600160a01b038216600482015260009073__$8a461d6baeda20cc8b97c0d95fb84681dd$__9063241f227d9060240160206040518083038186803b1580156110be57600080fd5b505af41580156110d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108409190611a8f565b6110fe611938565b60405163342a412360e01b81527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae7774095b9060009073__$8a461d6baeda20cc8b97c0d95fb84681dd$__9063342a41239061115a908790600401612211565b60806040518083038186803b15801561117257600080fd5b505af4158015611186573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111aa9190611d2a565b60600151815260208101919091526040908101600020815161010081019092528054829060ff1660028111156111f057634e487b7160e01b600052602160045260246000fd5b600281111561120f57634e487b7160e01b600052602160045260246000fd5b8152815461010090046001600160a01b031660208083019190915260018301546040808401919091526002840154606084015260038401546080840152600484015460a0840152600584015460c08401528051808201909152600684015481526007909301549083015260e0015292915050565b61128b6119a1565b6040517f8e4a9cb20000000000000000000000000000000000000000000000000000000081526004810183905273__$8a461d6baeda20cc8b97c0d95fb84681dd$__90638e4a9cb29060240160006040518083038186803b1580156112ef57600080fd5b505af4158015611303573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108409190810190611aa9565b611333611938565b6040517f88c6a0740000000000000000000000000000000000000000000000000000000081526004810183905273__$8a461d6baeda20cc8b97c0d95fb84681dd$__906388c6a074906024016101206040518083038186803b15801561139857600080fd5b505af41580156113ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108409190611bb3565b600073__$8a461d6baeda20cc8b97c0d95fb84681dd$__63e96070cc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561141657600080fd5b505af415801561142a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144e9190611db4565b905090565b61145b6119a1565b60405163342a412360e01b81527f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae777409619060009073__$8a461d6baeda20cc8b97c0d95fb84681dd$__9063342a4123906114b7908790600401612211565b60806040518083038186803b1580156114cf57600080fd5b505af41580156114e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115079190611d2a565b6040908101518252602080830193909352908101600020815160a08101835281546001600160a01b03168152600182018054845181870281018701909552808552919492938584019390929083018282801561158257602002820191906000526020600020905b81548152602001906001019080831161156e575b5050505050815260200160028201548152602001600382015481526020016004820160405180604001604052908160008201548152602001600182015481525050815250509050919050565b7f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae7774095e54606090600061160060018361233e565b67ffffffffffffffff81111561162657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561167b57816020015b61166860405180606001604052806000815260200160008152602001600081525090565b8152602001906001900390816116445790505b50905060005b61168c60018461233e565b811015610df0577f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae7774096060006116c1836001612307565b8152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201548152505082828151811061171857634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061172e90612355565b915050611681565b60606000611744848461233e565b61174f906001612307565b67ffffffffffffffff81111561177557634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156117f657816020015b6117e3604080516101208101909152806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816117935790505b50905060005b611806858561233e565b611811906001612307565b81101561083c577f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae7774096360006118458784612307565b815260208101919091526040908101600020815161012081019092528054829060ff16600381111561188757634e487b7160e01b600052602160045260246000fd5b60038111156118a657634e487b7160e01b600052602160045260246000fd5b81526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152505082828151811061191a57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061193090612355565b9150506117fc565b604080516101008101909152806000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200161199c604051806040016040528060008152602001600081525090565b905290565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600081526020016000815260200161199c604051806040016040528060008152602001600081525090565b80516119f9816123c5565b919050565b805180151581146119f957600080fd5b600060408284031215611a1f578081fd5b611a27612266565b9050813581526020820135602082015292915050565b600060408284031215611a4e578081fd5b611a56612266565b9050815181526020820151602082015292915050565b600060208284031215611a7d578081fd5b8135611a88816123c5565b9392505050565b600060208284031215611aa0578081fd5b611a88826119fe565b60006020808385031215611abb578182fd5b825167ffffffffffffffff80821115611ad2578384fd5b9084019060c08287031215611ae5578384fd5b611aed61228f565b8251611af8816123c5565b81528284015182811115611b0a578586fd5b8301601f81018813611b1a578586fd5b805183811115611b2c57611b2c61239c565b8060051b9350611b3d8685016122d6565b8181528681019083880186850189018c1015611b5757898afd5b8996505b83871015611b79578051835260019690960195918801918801611b5b565b508088860152505050506040830151604082015260608301516060820152611ba48760808501611a3d565b60808201529695505050505050565b60006101208284031215611bc5578081fd5b604051610100810181811067ffffffffffffffff82111715611be957611be961239c565b6040528251611bf7816123da565b8152611c05602084016119ee565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c0820152611c498460e08501611a3d565b60e08201529392505050565b60006101408284031215611c67578081fd5b611c6f6122b2565b82518152611c7f602084016119fe565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100808401518183015250610120611cda8185016119fe565b908201529392505050565b600060408284031215611cf6578081fd5b611a888383611a0e565b60008060608385031215611d12578081fd5b611d1c8484611a0e565b946040939093013593505050565b600060808284031215611d3b578081fd5b6040516080810181811067ffffffffffffffff82111715611d5e57611d5e61239c565b604052611d6a836119fe565b81526020830151611d7a816123da565b6020820152604083810151908201526060928301519281019290925250919050565b600060208284031215611dad578081fd5b5035919050565b600060208284031215611dc5578081fd5b5051919050565b60008060408385031215611dde578182fd5b50508035926020909101359150565b600060c083016001600160a01b03835116845260208084015160c08287015282815180855260e08801915083830194508592505b80831015611e415784518252938301936001929092019190830190611e21565b50604086015160408801526060860151606088015260808601519350611e74608088018580518252602090810151910152565b9695505050505050565b8051611e89816123b2565b808352506001600160a01b03602082015116602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e0810151611eee60e084018280518252602090810151910152565b505050565b8051151582526020810151611f07816123b2565b602083015260408181015190830152606090810151910152565b805160048110611f3357611f33612386565b808352506020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015611fe157603f19888603018452611fcf858351611ded565b94509285019290850190600101611fb3565b5092979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156120315761201d838551611e7e565b92840192610120929092019160010161200a565b50909695505050505050565b60408082528351828201819052600091906020906060850190828801855b828110156120815761206e848351611ef3565b608093909301929084019060010161205b565b50505084810382860152855180825286830191830190855b818110156120c6576120b683855180518252602090810151910152565b9284019291850191600101612099565b509098975050505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561203157612103838551611f21565b9284019261012092909201916001016120f0565b6020808252825182820181905260009190848201906040850190845b818110156120315761215a8385518051825260208082015190830152604090810151910152565b9284019260609290920191600101612133565b602081526000611a886020830184611ded565b61012081016108408284611e7e565b815181526020808301516101408301916121ac9084018215159052565b5060408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e0830152610100808401518184015250610120808401516122098285018215159052565b505092915050565b815181526020808301519082015260408101610840565b608081016108408284611ef3565b61012081016108408284611f21565b81518152602080830151908201526040808301519082015260608101610840565b6040805190810167ffffffffffffffff811182821017156122895761228961239c565b60405290565b60405160a0810167ffffffffffffffff811182821017156122895761228961239c565b604051610140810167ffffffffffffffff811182821017156122895761228961239c565b604051601f8201601f1916810167ffffffffffffffff811182821017156122ff576122ff61239c565b604052919050565b6000821982111561231a5761231a612370565b500190565b600081600019048311821515161561233957612339612370565b500290565b60008282101561235057612350612370565b500390565b600060001982141561236957612369612370565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600381106123c2576123c2612386565b50565b6001600160a01b03811681146123c257600080fd5b600381106123c257600080fdfea264697066735822122062b101ba692e5942c08c69e47aa7ac1a86d9e39b88c8e80351e931cb70b89be164736f6c63430008040033";

type GetterFacetConstructorParams =
  | [linkLibraryAddresses: GetterFacetLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GetterFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class GetterFacet__factory extends ContractFactory {
  constructor(...args: GetterFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        GetterFacet__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: GetterFacetLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$8a461d6baeda20cc8b97c0d95fb84681dd\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/GameUtil.sol:Util"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GetterFacet> {
    return super.deploy(overrides || {}) as Promise<GetterFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GetterFacet {
    return super.attach(address) as GetterFacet;
  }
  connect(signer: Signer): GetterFacet__factory {
    return super.connect(signer) as GetterFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GetterFacetInterface {
    return new utils.Interface(_abi) as GetterFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GetterFacet {
    return new Contract(address, _abi, signerOrProvider) as GetterFacet;
  }
}

export interface GetterFacetLibraryAddresses {
  ["contracts/libraries/GameUtil.sol:Util"]: string;
}
