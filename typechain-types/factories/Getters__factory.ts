/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Getters, GettersInterface } from "../Getters";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Game",
        name: "_gameCore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bulkGetAllItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "materialIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "materialAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109dc3803806109dc8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610111565b600081519050610087816100fa565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100da565b9050919050565b60006100d3826100b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610103816100c8565b811461010e57600080fd5b50565b6108bc806101206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063fab6a1b814610030575b600080fd5b61003861004e565b6040516100459190610648565b60405180910390f35b60606000600160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638bce7fab6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100ba57600080fd5b505afa1580156100ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f291906104be565b6100fc9190610748565b67ffffffffffffffff81111561013b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561017457816020015b61016161033c565b8152602001906001900390816101595790505b5090506000600190505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638bce7fab6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e457600080fd5b505afa1580156101f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021c91906104be565b8110156103345760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663801b83db826040518263ffffffff1660e01b815260040161027c919061066a565b60006040518083038186803b15801561029457600080fd5b505afa1580156102a8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102d1919061047d565b826001836102df9190610748565b81518110610316577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250808061032c906107b7565b91505061017e565b508091505090565b604051806040016040528060608152602001606081525090565b6000610369610364846106aa565b610685565b9050808382526020820190508285602086028201111561038857600080fd5b60005b858110156103b8578161039e8882610468565b84526020840193506020830192505060018101905061038b565b5050509392505050565b600082601f8301126103d357600080fd5b81516103e3848260208601610356565b91505092915050565b6000604082840312156103fe57600080fd5b6104086040610685565b9050600082015167ffffffffffffffff81111561042457600080fd5b610430848285016103c2565b600083015250602082015167ffffffffffffffff81111561045057600080fd5b61045c848285016103c2565b60208301525092915050565b6000815190506104778161086f565b92915050565b60006020828403121561048f57600080fd5b600082015167ffffffffffffffff8111156104a957600080fd5b6104b5848285016103ec565b91505092915050565b6000602082840312156104d057600080fd5b60006104de84828501610468565b91505092915050565b60006104f383836105e6565b905092915050565b6000610507838361062a565b60208301905092915050565b600061051e826106f6565b6105288185610726565b93508360208202850161053a856106d6565b8060005b85811015610576578484038952815161055785826104e7565b94506105628361070c565b925060208a0199505060018101905061053e565b50829750879550505050505092915050565b600061059382610701565b61059d8185610737565b93506105a8836106e6565b8060005b838110156105d95781516105c088826104fb565b97506105cb83610719565b9250506001810190506105ac565b5085935050505092915050565b600060408301600083015184820360008601526106038282610588565b9150506020830151848203602086015261061d8282610588565b9150508091505092915050565b6106338161077c565b82525050565b6106428161077c565b82525050565b600060208201905081810360008301526106628184610513565b905092915050565b600060208201905061067f6000830184610639565b92915050565b600061068f6106a0565b905061069b8282610786565b919050565b6000604051905090565b600067ffffffffffffffff8211156106c5576106c461082f565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006107538261077c565b915061075e8361077c565b92508282101561077157610770610800565b5b828203905092915050565b6000819050919050565b61078f8261085e565b810181811067ffffffffffffffff821117156107ae576107ad61082f565b5b80604052505050565b60006107c28261077c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156107f5576107f4610800565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6108788161077c565b811461088357600080fd5b5056fea2646970667358221220ff2495b869854ebb1e3ce6f7b06a65cc13ee8014fa00e7a1eb76426a7878c4d864736f6c63430008040033";

type GettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Getters__factory extends ContractFactory {
  constructor(...args: GettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _gameCore: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Getters> {
    return super.deploy(_gameCore, overrides || {}) as Promise<Getters>;
  }
  getDeployTransaction(
    _gameCore: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gameCore, overrides || {});
  }
  attach(address: string): Getters {
    return super.attach(address) as Getters;
  }
  connect(signer: Signer): Getters__factory {
    return super.connect(signer) as Getters__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GettersInterface {
    return new utils.Interface(_abi) as GettersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Getters {
    return new Contract(address, _abi, signerOrProvider) as Getters;
  }
}
