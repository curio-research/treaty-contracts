/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Getters, GettersInterface } from "../Getters";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Game",
        name: "_gameCore",
        type: "address",
      },
      {
        internalType: "contract GameStorage",
        name: "_gameStorage",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bulkGetAllItems",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bulkGetAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reach",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
        ],
        internalType: "struct GameTypes.PlayerData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620013c3380380620013c38339818101604052810190620000379190620000ee565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001bf565b600081519050620000d1816200018b565b92915050565b600081519050620000e881620001a5565b92915050565b600080604083850312156200010257600080fd5b60006200011285828601620000d7565b92505060206200012585828601620000c0565b9150509250929050565b60006200013c826200016b565b9050919050565b600062000150826200012f565b9050919050565b600062000164826200012f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001968162000143565b8114620001a257600080fd5b50565b620001b08162000157565b8114620001bc57600080fd5b50565b6111f480620001cf6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637dbefbac1461003b578063fab6a1b814610059575b600080fd5b610043610077565b6040516100509190610eaf565b60405180910390f35b6100616102f9565b60405161006e9190610e8d565b60405180910390f35b60606000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633f261e076040518163ffffffff1660e01b815260040160006040518083038186803b1580156100e357600080fd5b505afa1580156100f7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101209190610a4b565b90506000815167ffffffffffffffff811115610165577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561019e57816020015b61018b6105f8565b8152602001906001900390816101835790505b50905060005b82518110156102f057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663908b9f17848381518110610224577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016102489190610e72565b6101006040518083038186803b15801561026157600080fd5b505afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610acd565b8282815181106102d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525080806102e8906110c1565b9150506101a4565b50809250505090565b6060600060018060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638bce7fab6040518163ffffffff1660e01b815260040160206040518083038186803b15801561036657600080fd5b505afa15801561037a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039e9190610af7565b6103a89190611014565b67ffffffffffffffff8111156103e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561042057816020015b61040d610653565b8152602001906001900390816104055790505b5090506000600190505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638bce7fab6040518163ffffffff1660e01b815260040160206040518083038186803b15801561049257600080fd5b505afa1580156104a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ca9190610af7565b8110156105f057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663801b83db60018361051c9190611014565b6040518263ffffffff1660e01b81526004016105389190610ed1565b60006040518083038186803b15801561055057600080fd5b505afa158015610564573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061058d9190610a8c565b8260018361059b9190611014565b815181106105d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525080806105e8906110c1565b91505061042a565b508091505090565b6040518060e0016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200161064d6106a5565b81525090565b6040518061012001604052806000151581526020016000151581526020016000151581526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b604051806040016040528060008152602001600081525090565b60006106d26106cd84610f11565b610eec565b905080838252602082019050828560208602820111156106f157600080fd5b60005b8581101561072157816107078882610797565b8452602084019350602083019250506001810190506106f4565b5050509392505050565b600061073e61073984610f3d565b610eec565b9050808382526020820190508285602086028201111561075d57600080fd5b60005b8581101561078d57816107738882610a36565b845260208401935060208301925050600181019050610760565b5050509392505050565b6000815190506107a681611179565b92915050565b600082601f8301126107bd57600080fd5b81516107cd8482602086016106bf565b91505092915050565b600082601f8301126107e757600080fd5b81516107f784826020860161072b565b91505092915050565b60008151905061080f81611190565b92915050565b6000610120828403121561082857600080fd5b610833610120610eec565b9050600061084384828501610800565b600083015250602061085784828501610800565b602083015250604061086b84828501610800565b604083015250606061087f84828501610a36565b606083015250608061089384828501610a36565b60808301525060a06108a784828501610a36565b60a08301525060c082015167ffffffffffffffff8111156108c757600080fd5b6108d3848285016107d6565b60c08301525060e082015167ffffffffffffffff8111156108f357600080fd5b6108ff848285016107d6565b60e08301525061010082015167ffffffffffffffff81111561092057600080fd5b61092c848285016107d6565b6101008301525092915050565b6000610100828403121561094c57600080fd5b61095660e0610eec565b9050600061096684828501610800565b600083015250602061097a84828501610a36565b602083015250604061098e84828501610797565b60408301525060606109a284828501610a36565b60608301525060806109b684828501610a36565b60808301525060a06109ca84828501610a36565b60a08301525060c06109de848285016109ea565b60c08301525092915050565b6000604082840312156109fc57600080fd5b610a066040610eec565b90506000610a1684828501610a36565b6000830152506020610a2a84828501610a36565b60208301525092915050565b600081519050610a45816111a7565b92915050565b600060208284031215610a5d57600080fd5b600082015167ffffffffffffffff811115610a7757600080fd5b610a83848285016107ac565b91505092915050565b600060208284031215610a9e57600080fd5b600082015167ffffffffffffffff811115610ab857600080fd5b610ac484828501610815565b91505092915050565b60006101008284031215610ae057600080fd5b6000610aee84828501610939565b91505092915050565b600060208284031215610b0957600080fd5b6000610b1784828501610a36565b91505092915050565b6000610b2c8383610cc3565b905092915050565b6000610b408383610d96565b6101008301905092915050565b6000610b598383610e54565b60208301905092915050565b610b6e81611048565b82525050565b610b7d81611048565b82525050565b6000610b8e82610f99565b610b988185610fe1565b935083602082028501610baa85610f69565b8060005b85811015610be65784840389528151610bc78582610b20565b9450610bd283610fba565b925060208a01995050600181019050610bae565b50829750879550505050505092915050565b6000610c0382610fa4565b610c0d8185610ff2565b9350610c1883610f79565b8060005b83811015610c49578151610c308882610b34565b9750610c3b83610fc7565b925050600181019050610c1c565b5085935050505092915050565b6000610c6182610faf565b610c6b8185611003565b9350610c7683610f89565b8060005b83811015610ca7578151610c8e8882610b4d565b9750610c9983610fd4565b925050600181019050610c7a565b5085935050505092915050565b610cbd8161105a565b82525050565b600061012083016000830151610cdc6000860182610cb4565b506020830151610cef6020860182610cb4565b506040830151610d026040860182610cb4565b506060830151610d156060860182610e54565b506080830151610d286080860182610e54565b5060a0830151610d3b60a0860182610e54565b5060c083015184820360c0860152610d538282610c56565b91505060e083015184820360e0860152610d6d8282610c56565b915050610100830151848203610100860152610d898282610c56565b9150508091505092915050565b61010082016000820151610dad6000850182610cb4565b506020820151610dc06020850182610e54565b506040820151610dd36040850182610b65565b506060820151610de66060850182610e54565b506080820151610df96080850182610e54565b5060a0820151610e0c60a0850182610e54565b5060c0820151610e1f60c0850182610e25565b50505050565b604082016000820151610e3b6000850182610e54565b506020820151610e4e6020850182610e54565b50505050565b610e5d81611086565b82525050565b610e6c81611086565b82525050565b6000602082019050610e876000830184610b74565b92915050565b60006020820190508181036000830152610ea78184610b83565b905092915050565b60006020820190508181036000830152610ec98184610bf8565b905092915050565b6000602082019050610ee66000830184610e63565b92915050565b6000610ef6610f07565b9050610f028282611090565b919050565b6000604051905090565b600067ffffffffffffffff821115610f2c57610f2b611139565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610f5857610f57611139565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061101f82611086565b915061102a83611086565b92508282101561103d5761103c61110a565b5b828203905092915050565b600061105382611066565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61109982611168565b810181811067ffffffffffffffff821117156110b8576110b7611139565b5b80604052505050565b60006110cc82611086565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110ff576110fe61110a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61118281611048565b811461118d57600080fd5b50565b6111998161105a565b81146111a457600080fd5b50565b6111b081611086565b81146111bb57600080fd5b5056fea26469706673582212200a91f8bca408d88822de766c35163d836e4a5d035fbc64c2f6f072c23872dea464736f6c63430008040033";

type GettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Getters__factory extends ContractFactory {
  constructor(...args: GettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _gameCore: string,
    _gameStorage: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Getters> {
    return super.deploy(
      _gameCore,
      _gameStorage,
      overrides || {}
    ) as Promise<Getters>;
  }
  getDeployTransaction(
    _gameCore: string,
    _gameStorage: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gameCore, _gameStorage, overrides || {});
  }
  attach(address: string): Getters {
    return super.attach(address) as Getters;
  }
  connect(signer: Signer): Getters__factory {
    return super.connect(signer) as Getters__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GettersInterface {
    return new utils.Interface(_abi) as GettersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Getters {
    return new Contract(address, _abi, signerOrProvider) as Getters;
  }
}
