/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Getters, GettersInterface } from "../Getters";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Game",
        name: "_gameCore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bulkGetAllItems",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "mineItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bulkGetAllMapInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "worldHeight",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "occupier",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "blocks",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.Tile[1000][1000]",
        name: "map",
        type: "tuple[1000][1000]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bulkGetAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.PlayerData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b8238038062001b82833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000123565b6000815190506200008f8162000109565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000e9565b9050919050565b6000620000e282620000c1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200011481620000d5565b81146200012057600080fd5b50565b611a4f80620001336000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063682874cf146100465780637dbefbac14610066578063fab6a1b814610084575b600080fd5b61004e6100a2565b60405161005d93929190611612565b60405180910390f35b61006e61027e565b60405161007b91906115b3565b60405180910390f35b61008c6104fd565b6040516100999190611591565b60405180910390f35b6000806100ad6108b9565b6100eb6040518060400160405280600c81526020017f737461727465642063616c6c00000000000000000000000000000000000000008152506107f7565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632c190c626040518163ffffffff1660e01b8152600401604080518083038186803b15801561015057600080fd5b505afa158015610164573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101889190611060565b80935081945050506101ce6040518060400160405280601081526020017f776f726c645769647468207265616479000000000000000000000000000000008152506107f7565b828260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ee407e06040518163ffffffff1660e01b815260040160006040518083038186803b15801561023657600080fd5b505afa15801561024a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102739190610f8b565b925092509250909192565b606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633f261e076040518163ffffffff1660e01b815260040160006040518083038186803b1580156102e957600080fd5b505afa1580156102fd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103269190610f4a565b90506000815167ffffffffffffffff81111561036b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156103a457816020015b6103916108e8565b8152602001906001900390816103895790505b50905060005b82518110156104f45760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663908b9f17848381518110610428577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b815260040161044c9190611576565b6101006040518083038186803b15801561046557600080fd5b505afa158015610479573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049d919061100d565b8282815181106104d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525080806104ec9061191c565b9150506103aa565b50809250505090565b60606000600160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638bce7fab6040518163ffffffff1660e01b815260040160206040518083038186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a19190611037565b6105ab919061183c565b67ffffffffffffffff8111156105ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561062357816020015b610610610945565b8152602001906001900390816106085790505b5090506000600190505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638bce7fab6040518163ffffffff1660e01b815260040160206040518083038186803b15801561069357600080fd5b505afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb9190611037565b8110156107ef5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663801b83db60018361071b919061183c565b6040518263ffffffff1660e01b815260040161073791906115f7565b60006040518083038186803b15801561074f57600080fd5b505afa158015610763573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061078c9190610fcc565b8260018361079a919061183c565b815181106107d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525080806107e79061191c565b91505061062d565b508091505090565b61088d8160405160240161080b91906115d5565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610890565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60405180617d0001604052806103e8905b6108d2610997565b8152602001906001900390816108ca5790505090565b6040518060e0016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016109316109c6565b815260200160008152602001600081525090565b6040518061012001604052806000151581526020016060815260200160008152602001600015158152602001606081526020016060815260200160001515815260200160008152602001600081525090565b60405180617d0001604052806103e8905b6109b06109e0565b8152602001906001900390816109a85790505090565b604051806040016040528060008152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b6000610a23610a1e84611675565b611650565b90508083825260208201905082856020860282011115610a4257600080fd5b60005b85811015610a725781610a588882610be2565b845260208401935060208301925050600181019050610a45565b5050509392505050565b6000610a8f610a8a846116a1565b611650565b90508082856020860282011115610aa557600080fd5b60005b85811015610aef57815167ffffffffffffffff811115610ac757600080fd5b808601610ad48982610c49565b85526020850194506020840193505050600181019050610aa8565b5050509392505050565b6000610b0c610b07846116c7565b611650565b90508082856020860282011115610b2257600080fd5b60005b85811015610b6c57815167ffffffffffffffff811115610b4457600080fd5b808601610b518982610ed1565b85526020850194506020840193505050600181019050610b25565b5050509392505050565b6000610b89610b84846116ed565b611650565b90508083825260208201905082856020860282011115610ba857600080fd5b60005b85811015610bd85781610bbe8882610f35565b845260208401935060208301925050600181019050610bab565b5050509392505050565b600081519050610bf1816119d4565b92915050565b600082601f830112610c0857600080fd5b8151610c18848260208601610a10565b91505092915050565b600082601f830112610c3257600080fd5b6103e8610c40848285610a7c565b91505092915050565b600082601f830112610c5a57600080fd5b6103e8610c68848285610af9565b91505092915050565b600082601f830112610c8257600080fd5b8151610c92848260208601610b76565b91505092915050565b600081519050610caa816119eb565b92915050565b60006101208284031215610cc357600080fd5b610cce610120611650565b90506000610cde84828501610c9b565b600083015250602082015167ffffffffffffffff811115610cfe57600080fd5b610d0a84828501610c71565b6020830152506040610d1e84828501610f35565b6040830152506060610d3284828501610c9b565b606083015250608082015167ffffffffffffffff811115610d5257600080fd5b610d5e84828501610c71565b60808301525060a082015167ffffffffffffffff811115610d7e57600080fd5b610d8a84828501610c71565b60a08301525060c0610d9e84828501610c9b565b60c08301525060e0610db284828501610f35565b60e083015250610100610dc784828501610f35565b6101008301525092915050565b60006101008284031215610de757600080fd5b610df160e0611650565b90506000610e0184828501610c9b565b6000830152506020610e1584828501610f35565b6020830152506040610e2984828501610be2565b6040830152506060610e3d84828501610c9b565b6060830152506080610e5184828501610e85565b60808301525060c0610e6584828501610f35565b60a08301525060e0610e7984828501610f35565b60c08301525092915050565b600060408284031215610e9757600080fd5b610ea16040611650565b90506000610eb184828501610f35565b6000830152506020610ec584828501610f35565b60208301525092915050565b600060408284031215610ee357600080fd5b610eed6040611650565b90506000610efd84828501610be2565b600083015250602082015167ffffffffffffffff811115610f1d57600080fd5b610f2984828501610c71565b60208301525092915050565b600081519050610f4481611a02565b92915050565b600060208284031215610f5c57600080fd5b600082015167ffffffffffffffff811115610f7657600080fd5b610f8284828501610bf7565b91505092915050565b600060208284031215610f9d57600080fd5b600082015167ffffffffffffffff811115610fb757600080fd5b610fc384828501610c21565b91505092915050565b600060208284031215610fde57600080fd5b600082015167ffffffffffffffff811115610ff857600080fd5b61100484828501610cb0565b91505092915050565b6000610100828403121561102057600080fd5b600061102e84828501610dd4565b91505092915050565b60006020828403121561104957600080fd5b600061105784828501610f35565b91505092915050565b6000806040838503121561107357600080fd5b600061108185828601610f35565b925050602061109285828601610f35565b9150509250929050565b60006110a8838361126f565b905092915050565b60006110bc838361138a565b905092915050565b60006110d0838361145d565b6101008301905092915050565b60006110e9838361151b565b905092915050565b60006110fd8383611558565b60208301905092915050565b61111281611870565b82525050565b61112181611870565b82525050565b60006111328261175d565b61113c81856117e2565b93508360208202850161114e85611719565b8060005b8581101561118a578484038952815161116b858261109c565b9450611176836117a1565b925060208a01995050600181019050611152565b50829750879550505050505092915050565b60006111a782611769565b6111b181856117ed565b9350836020820285016111c385611723565b8060005b858110156111ff57848403895281516111e085826110b0565b94506111eb836117ae565b925060208a019950506001810190506111c7565b50829750879550505050505092915050565b600061121c82611774565b61122681856117fe565b935061123183611733565b8060005b8381101561126257815161124988826110c4565b9750611254836117bb565b925050600181019050611235565b5085935050505092915050565b600061127a8261177f565b611284818561180f565b93508360208202850161129685611743565b8060005b858110156112d257848403895281516112b385826110dd565b94506112be836117c8565b925060208a0199505060018101905061129a565b50829750879550505050505092915050565b60006112ef8261178b565b6112f9818561181a565b93506113048361174d565b8060005b8381101561133557815161131c88826110f1565b9750611327836117d5565b925050600181019050611308565b5085935050505092915050565b61134b81611882565b82525050565b600061135c82611796565b611366818561182b565b93506113768185602086016118b8565b61137f816119c3565b840191505092915050565b6000610120830160008301516113a36000860182611342565b50602083015184820360208601526113bb82826112e4565b91505060408301516113d06040860182611558565b5060608301516113e36060860182611342565b50608083015184820360808601526113fb82826112e4565b91505060a083015184820360a086015261141582826112e4565b91505060c083015161142a60c0860182611342565b5060e083015161143d60e0860182611558565b50610100830151611452610100860182611558565b508091505092915050565b610100820160008201516114746000850182611342565b5060208201516114876020850182611558565b50604082015161149a6040850182611109565b5060608201516114ad6060850182611342565b5060808201516114c060808501826114ec565b5060a08201516114d360c0850182611558565b5060c08201516114e660e0850182611558565b50505050565b6040820160008201516115026000850182611558565b5060208201516115156020850182611558565b50505050565b60006040830160008301516115336000860182611109565b506020830151848203602086015261154b82826112e4565b9150508091505092915050565b611561816118ae565b82525050565b611570816118ae565b82525050565b600060208201905061158b6000830184611118565b92915050565b600060208201905081810360008301526115ab818461119c565b905092915050565b600060208201905081810360008301526115cd8184611211565b905092915050565b600060208201905081810360008301526115ef8184611351565b905092915050565b600060208201905061160c6000830184611567565b92915050565b60006060820190506116276000830186611567565b6116346020830185611567565b81810360408301526116468184611127565b9050949350505050565b600061165a61166b565b905061166682826118eb565b919050565b6000604051905090565b600067ffffffffffffffff8211156116905761168f611994565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156116bc576116bb611994565b5b602082029050919050565b600067ffffffffffffffff8211156116e2576116e1611994565b5b602082029050919050565b600067ffffffffffffffff82111561170857611707611994565b5b602082029050602081019050919050565b6000819050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050919050565b6000819050602082019050919050565b60006103e89050919050565b600081519050919050565b600081519050919050565b60006103e89050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611847826118ae565b9150611852836118ae565b92508282101561186557611864611965565b5b828203905092915050565b600061187b8261188e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156118d65780820151818401526020810190506118bb565b838111156118e5576000848401525b50505050565b6118f4826119c3565b810181811067ffffffffffffffff8211171561191357611912611994565b5b80604052505050565b6000611927826118ae565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561195a57611959611965565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6119dd81611870565b81146119e857600080fd5b50565b6119f481611882565b81146119ff57600080fd5b50565b611a0b816118ae565b8114611a1657600080fd5b5056fea264697066735822122069855ede6b70955ce662698ae5b35db3e7b1a7c3faf4b4be8639038858ef85bc64736f6c63430008040033";

type GettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Getters__factory extends ContractFactory {
  constructor(...args: GettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _gameCore: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Getters> {
    return super.deploy(_gameCore, overrides || {}) as Promise<Getters>;
  }
  getDeployTransaction(
    _gameCore: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gameCore, overrides || {});
  }
  attach(address: string): Getters {
    return super.attach(address) as Getters;
  }
  connect(signer: Signer): Getters__factory {
    return super.connect(signer) as Getters__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GettersInterface {
    return new utils.Interface(_abi) as GettersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Getters {
    return new Contract(address, _abi, signerOrProvider) as Getters;
  }
}
