/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Getters, GettersInterface } from "../Getters";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Game",
        name: "_gameCore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bulkGetAllItems",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "mineable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "mineItemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strength",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "craftable",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "craftItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "craftItemAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "placeItemIds",
            type: "uint256[]",
          },
          {
            internalType: "bool",
            name: "occupiable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "healthDamage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energyDamage",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "protectItemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "protectItemHealths",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bulkGetAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerAddr",
            type: "address",
          },
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.PlayerData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620013e9380380620013e9833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000123565b6000815190506200008f8162000109565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000e9565b9050919050565b6000620000e282620000c1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200011481620000d5565b81146200012057600080fd5b50565b6112b680620001336000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637dbefbac1461003b578063fab6a1b814610059575b600080fd5b610043610077565b6040516100509190610f71565b60405180910390f35b6100616102f6565b60405161006e9190610f4f565b60405180910390f35b606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633f261e076040518163ffffffff1660e01b815260040160006040518083038186803b1580156100e257600080fd5b505afa1580156100f6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061011f9190610ac0565b90506000815167ffffffffffffffff811115610164577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561019d57816020015b61018a6105e4565b8152602001906001900390816101825790505b50905060005b82518110156102ed5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663908b9f17848381518110610221577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016102459190610f34565b6101006040518083038186803b15801561025e57600080fd5b505afa158015610272573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102969190610b42565b8282815181106102cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525080806102e590611183565b9150506101a3565b50809250505090565b60606000600160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638bce7fab6040518163ffffffff1660e01b815260040160206040518083038186803b15801561036257600080fd5b505afa158015610376573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039a9190610b6c565b6103a491906110d6565b67ffffffffffffffff8111156103e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561041c57816020015b610409610641565b8152602001906001900390816104015790505b5090506000600190505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638bce7fab6040518163ffffffff1660e01b815260040160206040518083038186803b15801561048c57600080fd5b505afa1580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610b6c565b8110156105dc5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663801b83db826040518263ffffffff1660e01b81526004016105249190610f93565b60006040518083038186803b15801561053c57600080fd5b505afa158015610550573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105799190610b01565b8260018361058791906110d6565b815181106105be577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525080806105d490611183565b915050610426565b508091505090565b6040518060e0016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160001515815260200161062d6106a8565b815260200160008152602001600081525090565b6040518061018001604052806000151581526020016000815260200160008152602001600015158152602001606081526020016060815260200160608152602001600015158152602001600081526020016000815260200160608152602001606081525090565b604051806040016040528060008152602001600081525090565b60006106d56106d084610fd3565b610fae565b905080838252602082019050828560208602820111156106f457600080fd5b60005b85811015610724578161070a888261079a565b8452602084019350602083019250506001810190506106f7565b5050509392505050565b600061074161073c84610fff565b610fae565b9050808382526020820190508285602086028201111561076057600080fd5b60005b8581101561079057816107768882610aab565b845260208401935060208301925050600181019050610763565b5050509392505050565b6000815190506107a98161123b565b92915050565b600082601f8301126107c057600080fd5b81516107d08482602086016106c2565b91505092915050565b600082601f8301126107ea57600080fd5b81516107fa84826020860161072e565b91505092915050565b60008151905061081281611252565b92915050565b6000610180828403121561082b57600080fd5b610836610180610fae565b9050600061084684828501610803565b600083015250602061085a84828501610aab565b602083015250604061086e84828501610aab565b604083015250606061088284828501610803565b606083015250608082015167ffffffffffffffff8111156108a257600080fd5b6108ae848285016107d9565b60808301525060a082015167ffffffffffffffff8111156108ce57600080fd5b6108da848285016107d9565b60a08301525060c082015167ffffffffffffffff8111156108fa57600080fd5b610906848285016107d9565b60c08301525060e061091a84828501610803565b60e08301525061010061092f84828501610aab565b6101008301525061012061094584828501610aab565b6101208301525061014082015167ffffffffffffffff81111561096757600080fd5b610973848285016107d9565b6101408301525061016082015167ffffffffffffffff81111561099557600080fd5b6109a1848285016107d9565b6101608301525092915050565b600061010082840312156109c157600080fd5b6109cb60e0610fae565b905060006109db84828501610803565b60008301525060206109ef84828501610aab565b6020830152506040610a038482850161079a565b6040830152506060610a1784828501610803565b6060830152506080610a2b84828501610a5f565b60808301525060c0610a3f84828501610aab565b60a08301525060e0610a5384828501610aab565b60c08301525092915050565b600060408284031215610a7157600080fd5b610a7b6040610fae565b90506000610a8b84828501610aab565b6000830152506020610a9f84828501610aab565b60208301525092915050565b600081519050610aba81611269565b92915050565b600060208284031215610ad257600080fd5b600082015167ffffffffffffffff811115610aec57600080fd5b610af8848285016107af565b91505092915050565b600060208284031215610b1357600080fd5b600082015167ffffffffffffffff811115610b2d57600080fd5b610b3984828501610818565b91505092915050565b60006101008284031215610b5557600080fd5b6000610b63848285016109ae565b91505092915050565b600060208284031215610b7e57600080fd5b6000610b8c84828501610aab565b91505092915050565b6000610ba18383610d38565b905092915050565b6000610bb58383610e58565b6101008301905092915050565b6000610bce8383610f16565b60208301905092915050565b610be38161110a565b82525050565b610bf28161110a565b82525050565b6000610c038261105b565b610c0d81856110a3565b935083602082028501610c1f8561102b565b8060005b85811015610c5b5784840389528151610c3c8582610b95565b9450610c478361107c565b925060208a01995050600181019050610c23565b50829750879550505050505092915050565b6000610c7882611066565b610c8281856110b4565b9350610c8d8361103b565b8060005b83811015610cbe578151610ca58882610ba9565b9750610cb083611089565b925050600181019050610c91565b5085935050505092915050565b6000610cd682611071565b610ce081856110c5565b9350610ceb8361104b565b8060005b83811015610d1c578151610d038882610bc2565b9750610d0e83611096565b925050600181019050610cef565b5085935050505092915050565b610d328161111c565b82525050565b600061018083016000830151610d516000860182610d29565b506020830151610d646020860182610f16565b506040830151610d776040860182610f16565b506060830151610d8a6060860182610d29565b5060808301518482036080860152610da28282610ccb565b91505060a083015184820360a0860152610dbc8282610ccb565b91505060c083015184820360c0860152610dd68282610ccb565b91505060e0830151610deb60e0860182610d29565b50610100830151610e00610100860182610f16565b50610120830151610e15610120860182610f16565b50610140830151848203610140860152610e2f8282610ccb565b915050610160830151848203610160860152610e4b8282610ccb565b9150508091505092915050565b61010082016000820151610e6f6000850182610d29565b506020820151610e826020850182610f16565b506040820151610e956040850182610bda565b506060820151610ea86060850182610d29565b506080820151610ebb6080850182610ee7565b5060a0820151610ece60c0850182610f16565b5060c0820151610ee160e0850182610f16565b50505050565b604082016000820151610efd6000850182610f16565b506020820151610f106020850182610f16565b50505050565b610f1f81611148565b82525050565b610f2e81611148565b82525050565b6000602082019050610f496000830184610be9565b92915050565b60006020820190508181036000830152610f698184610bf8565b905092915050565b60006020820190508181036000830152610f8b8184610c6d565b905092915050565b6000602082019050610fa86000830184610f25565b92915050565b6000610fb8610fc9565b9050610fc48282611152565b919050565b6000604051905090565b600067ffffffffffffffff821115610fee57610fed6111fb565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561101a576110196111fb565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110e182611148565b91506110ec83611148565b9250828210156110ff576110fe6111cc565b5b828203905092915050565b600061111582611128565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61115b8261122a565b810181811067ffffffffffffffff8211171561117a576111796111fb565b5b80604052505050565b600061118e82611148565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156111c1576111c06111cc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6112448161110a565b811461124f57600080fd5b50565b61125b8161111c565b811461126657600080fd5b50565b61127281611148565b811461127d57600080fd5b5056fea2646970667358221220ea72b720ce594061943d7ac0bc9e45d0c27e73de42ea0571445d8ebc7e5a8fde64736f6c63430008040033";

type GettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Getters__factory extends ContractFactory {
  constructor(...args: GettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _gameCore: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Getters> {
    return super.deploy(_gameCore, overrides || {}) as Promise<Getters>;
  }
  getDeployTransaction(
    _gameCore: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gameCore, overrides || {});
  }
  attach(address: string): Getters {
    return super.attach(address) as Getters;
  }
  connect(signer: Signer): Getters__factory {
    return super.connect(signer) as Getters__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GettersInterface {
    return new utils.Interface(_abi) as GettersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Getters {
    return new Contract(address, _abi, signerOrProvider) as Getters;
  }
}
