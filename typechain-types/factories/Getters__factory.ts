/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Getters, GettersInterface } from "../Getters";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Game",
        name: "_gameCore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bulkGetAllItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "materialIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "materialAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct GameTypes.ItemWithMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bulkGetAllPlayerData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "a",
            type: "address",
          },
          {
            internalType: "bool",
            name: "alive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isInitialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "initTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct GameTypes.Position",
            name: "position",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
        ],
        internalType: "struct GameTypes.PlayerData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011d8380380620011d8833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000123565b6000815190506200008f8162000109565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000e9565b9050919050565b6000620000e282620000c1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200011481620000d5565b81146200012057600080fd5b50565b6110a580620001336000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637dbefbac1461003b578063fab6a1b814610059575b600080fd5b610043610077565b6040516100509190610d60565b60405180910390f35b6100616102f6565b60405161006e9190610d3e565b60405180910390f35b606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633f261e076040518163ffffffff1660e01b815260040160006040518083038186803b1580156100e257600080fd5b505afa1580156100f6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061011f9190610977565b90506000815167ffffffffffffffff811115610164577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561019d57816020015b61018a6105e4565b8152602001906001900390816101825790505b50905060005b82518110156102ed5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663908b9f17848381518110610221577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016102459190610d23565b6101206040518083038186803b15801561025e57600080fd5b505afa158015610272573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029691906109f9565b8282815181106102cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525080806102e590610f72565b9150506101a3565b50809250505090565b60606000600160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638bce7fab6040518163ffffffff1660e01b815260040160206040518083038186803b15801561036257600080fd5b505afa158015610376573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039a9190610a23565b6103a49190610ec5565b67ffffffffffffffff8111156103e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561041c57816020015b610409610649565b8152602001906001900390816104015790505b5090506000600190505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638bce7fab6040518163ffffffff1660e01b815260040160206040518083038186803b15801561048c57600080fd5b505afa1580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610a23565b8110156105dc5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663801b83db826040518263ffffffff1660e01b81526004016105249190610d82565b60006040518083038186803b15801561053c57600080fd5b505afa158015610550573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061057991906109b8565b826001836105879190610ec5565b815181106105be577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525080806105d490610f72565b915050610426565b508091505090565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016000151581526020016000815260200161062e610663565b81526020016000815260200160008152602001600081525090565b604051806040016040528060608152602001606081525090565b604051806040016040528060008152602001600081525090565b600061069061068b84610dc2565b610d9d565b905080838252602082019050828560208602820111156106af57600080fd5b60005b858110156106df57816106c58882610755565b8452602084019350602083019250506001810190506106b2565b5050509392505050565b60006106fc6106f784610dee565b610d9d565b9050808382526020820190508285602086028201111561071b57600080fd5b60005b8581101561074b57816107318882610962565b84526020840193506020830192505060018101905061071e565b5050509392505050565b6000815190506107648161102a565b92915050565b600082601f83011261077b57600080fd5b815161078b84826020860161067d565b91505092915050565b600082601f8301126107a557600080fd5b81516107b58482602086016106e9565b91505092915050565b6000815190506107cd81611041565b92915050565b6000604082840312156107e557600080fd5b6107ef6040610d9d565b9050600082015167ffffffffffffffff81111561080b57600080fd5b61081784828501610794565b600083015250602082015167ffffffffffffffff81111561083757600080fd5b61084384828501610794565b60208301525092915050565b6000610120828403121561086257600080fd5b61086d610100610d9d565b9050600061087d84828501610755565b6000830152506020610891848285016107be565b60208301525060406108a5848285016107be565b60408301525060606108b984828501610962565b60608301525060806108cd84828501610916565b60808301525060c06108e184828501610962565b60a08301525060e06108f584828501610962565b60c08301525061010061090a84828501610962565b60e08301525092915050565b60006040828403121561092857600080fd5b6109326040610d9d565b9050600061094284828501610962565b600083015250602061095684828501610962565b60208301525092915050565b60008151905061097181611058565b92915050565b60006020828403121561098957600080fd5b600082015167ffffffffffffffff8111156109a357600080fd5b6109af8482850161076a565b91505092915050565b6000602082840312156109ca57600080fd5b600082015167ffffffffffffffff8111156109e457600080fd5b6109f0848285016107d3565b91505092915050565b60006101208284031215610a0c57600080fd5b6000610a1a8482850161084f565b91505092915050565b600060208284031215610a3557600080fd5b6000610a4384828501610962565b91505092915050565b6000610a588383610bef565b905092915050565b6000610a6c8383610c33565b6101208301905092915050565b6000610a858383610d05565b60208301905092915050565b610a9a81610ef9565b82525050565b610aa981610ef9565b82525050565b6000610aba82610e4a565b610ac48185610e92565b935083602082028501610ad685610e1a565b8060005b85811015610b125784840389528151610af38582610a4c565b9450610afe83610e6b565b925060208a01995050600181019050610ada565b50829750879550505050505092915050565b6000610b2f82610e55565b610b398185610ea3565b9350610b4483610e2a565b8060005b83811015610b75578151610b5c8882610a60565b9750610b6783610e78565b925050600181019050610b48565b5085935050505092915050565b6000610b8d82610e60565b610b978185610eb4565b9350610ba283610e3a565b8060005b83811015610bd3578151610bba8882610a79565b9750610bc583610e85565b925050600181019050610ba6565b5085935050505092915050565b610be981610f0b565b82525050565b60006040830160008301518482036000860152610c0c8282610b82565b91505060208301518482036020860152610c268282610b82565b9150508091505092915050565b61012082016000820151610c4a6000850182610a91565b506020820151610c5d6020850182610be0565b506040820151610c706040850182610be0565b506060820151610c836060850182610d05565b506080820151610c966080850182610cd6565b5060a0820151610ca960c0850182610d05565b5060c0820151610cbc60e0850182610d05565b5060e0820151610cd0610100850182610d05565b50505050565b604082016000820151610cec6000850182610d05565b506020820151610cff6020850182610d05565b50505050565b610d0e81610f37565b82525050565b610d1d81610f37565b82525050565b6000602082019050610d386000830184610aa0565b92915050565b60006020820190508181036000830152610d588184610aaf565b905092915050565b60006020820190508181036000830152610d7a8184610b24565b905092915050565b6000602082019050610d976000830184610d14565b92915050565b6000610da7610db8565b9050610db38282610f41565b919050565b6000604051905090565b600067ffffffffffffffff821115610ddd57610ddc610fea565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610e0957610e08610fea565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610ed082610f37565b9150610edb83610f37565b925082821015610eee57610eed610fbb565b5b828203905092915050565b6000610f0482610f17565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610f4a82611019565b810181811067ffffffffffffffff82111715610f6957610f68610fea565b5b80604052505050565b6000610f7d82610f37565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fb057610faf610fbb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61103381610ef9565b811461103e57600080fd5b50565b61104a81610f0b565b811461105557600080fd5b50565b61106181610f37565b811461106c57600080fd5b5056fea2646970667358221220546daf9eda861e4026652ac9e1d8c9fe608f43120bfaca9c7b841d411c93ab4264736f6c63430008040033";

type GettersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GettersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Getters__factory extends ContractFactory {
  constructor(...args: GettersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _gameCore: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Getters> {
    return super.deploy(_gameCore, overrides || {}) as Promise<Getters>;
  }
  getDeployTransaction(
    _gameCore: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gameCore, overrides || {});
  }
  attach(address: string): Getters {
    return super.attach(address) as Getters;
  }
  connect(signer: Signer): Getters__factory {
    return super.connect(signer) as Getters__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GettersInterface {
    return new utils.Interface(_abi) as GettersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Getters {
    return new Contract(address, _abi, signerOrProvider) as Getters;
  }
}
