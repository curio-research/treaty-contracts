/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { L1NFT, L1NFTInterface } from "../../contracts/L1NFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060408051808201825260088152674c3154726561747960c01b60208083019182528351808501909452600684526554524541545960d01b908401528151919291620000609160029162000083565b5080516200007690600390602084019062000083565b5050600080555062000165565b828054620000919062000129565b90600052602060002090601f016020900481019282620000b5576000855562000100565b82601f10620000d057805160ff191683800117855562000100565b8280016001018555821562000100579182015b8281111562000100578251825591602001919060010190620000e3565b506200010e92915062000112565b5090565b5b808211156200010e576000815560010162000113565b600181811c908216806200013e57607f821691505b6020821081036200015f57634e487b7160e01b600052602260045260246000fd5b50919050565b610fda80620001756000396000f3fe6080604052600436106100e85760003560e01c806342842e0e1161008a578063a22cb46511610059578063a22cb46514610237578063b88d4fde14610257578063c87b56dd1461026a578063e985e9c51461028a57600080fd5b806342842e0e146101cf5780636352211e146101e257806370a082311461020257806395d89b411461022257600080fd5b8063095ea7b3116100c6578063095ea7b31461017c5780631249c58b1461019157806318160ddd1461019957806323b872dd146101bc57600080fd5b806301ffc9a7146100ed57806306fdde0314610122578063081812fc14610144575b600080fd5b3480156100f957600080fd5b5061010d610108366004610c43565b6102d3565b60405190151581526020015b60405180910390f35b34801561012e57600080fd5b50610137610370565b6040516101199190610cb8565b34801561015057600080fd5b5061016461015f366004610ccb565b610402565b6040516001600160a01b039091168152602001610119565b61018f61018a366004610d00565b61045f565b005b61018f610530565b3480156101a557600080fd5b50600154600054035b604051908152602001610119565b61018f6101ca366004610d2a565b61053d565b61018f6101dd366004610d2a565b610721565b3480156101ee57600080fd5b506101646101fd366004610ccb565b610741565b34801561020e57600080fd5b506101ae61021d366004610d66565b61074c565b34801561022e57600080fd5b506101376107b4565b34801561024357600080fd5b5061018f610252366004610d81565b6107c3565b61018f610265366004610dd3565b61082f565b34801561027657600080fd5b50610137610285366004610ccb565b610879565b34801561029657600080fd5b5061010d6102a5366004610eaf565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316148061033657507f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b8061036a57507f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606002805461037f90610ee2565b80601f01602080910402602001604051908101604052809291908181526020018280546103ab90610ee2565b80156103f85780601f106103cd576101008083540402835291602001916103f8565b820191906000526020600020905b8154815290600101906020018083116103db57829003601f168201915b5050505050905090565b600061040d82610923565b610443576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061046a82610741565b9050336001600160a01b038216146104bc5761048681336102a5565b6104bc576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526006602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61053b33600161094a565b565b600061054882610a7b565b9050836001600160a01b0316816001600160a01b031614610595576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b038816909114176105fb576105c586336102a5565b6105fb576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03851661063b576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801561064657600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b841690036106d8576001840160008181526004602052604081205490036106d65760005481146106d65760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b61073c8383836040518060200160405280600081525061082f565b505050565b600061036a82610a7b565b60006001600160a01b03821661078e576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b60606003805461037f90610ee2565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61083a84848461053d565b6001600160a01b0383163b156108735761085684848484610afb565b610873576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061088482610923565b6108ba576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006108d160408051602081019091526000815290565b905080516000036108f1576040518060200160405280600081525061091c565b806108fb84610be6565b60405160200161090c929190610f1c565b6040516020818303038152906040525b9392505050565b600080548210801561036a575050600090815260046020526040902054600160e01b161590565b6000805490829003610988576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114610a3757808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016109ff565b5081600003610a72576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005550505050565b600081600054811015610ac95760008181526004602052604081205490600160e01b82169003610ac7575b8060000361091c575060001901600081815260046020526040902054610aa6565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610b30903390899088908890600401610f4b565b6020604051808303816000875af1925050508015610b6b575060408051601f3d908101601f19168201909252610b6891810190610f87565b60015b610bc9573d808015610b99576040519150601f19603f3d011682016040523d82523d6000602084013e610b9e565b606091505b508051600003610bc1576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610c005750819003601f19909101908152919050565b6001600160e01b031981168114610c4057600080fd5b50565b600060208284031215610c5557600080fd5b813561091c81610c2a565b60005b83811015610c7b578181015183820152602001610c63565b838111156108735750506000910152565b60008151808452610ca4816020860160208601610c60565b601f01601f19169290920160200192915050565b60208152600061091c6020830184610c8c565b600060208284031215610cdd57600080fd5b5035919050565b80356001600160a01b0381168114610cfb57600080fd5b919050565b60008060408385031215610d1357600080fd5b610d1c83610ce4565b946020939093013593505050565b600080600060608486031215610d3f57600080fd5b610d4884610ce4565b9250610d5660208501610ce4565b9150604084013590509250925092565b600060208284031215610d7857600080fd5b61091c82610ce4565b60008060408385031215610d9457600080fd5b610d9d83610ce4565b915060208301358015158114610db257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610de957600080fd5b610df285610ce4565b9350610e0060208601610ce4565b925060408501359150606085013567ffffffffffffffff80821115610e2457600080fd5b818701915087601f830112610e3857600080fd5b813581811115610e4a57610e4a610dbd565b604051601f8201601f19908116603f01168101908382118183101715610e7257610e72610dbd565b816040528281528a6020848701011115610e8b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610ec257600080fd5b610ecb83610ce4565b9150610ed960208401610ce4565b90509250929050565b600181811c90821680610ef657607f821691505b602082108103610f1657634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610f2e818460208801610c60565b835190830190610f42818360208801610c60565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152610f7d6080830184610c8c565b9695505050505050565b600060208284031215610f9957600080fd5b815161091c81610c2a56fea2646970667358221220c84ba451cf8ad839bb110fc57dacbe3b7c7d3e90200a51500ab08d5383d1297664736f6c634300080d0033";

type L1NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1NFT__factory extends ContractFactory {
  constructor(...args: L1NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L1NFT> {
    return super.deploy(overrides || {}) as Promise<L1NFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L1NFT {
    return super.attach(address) as L1NFT;
  }
  override connect(signer: Signer): L1NFT__factory {
    return super.connect(signer) as L1NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1NFTInterface {
    return new utils.Interface(_abi) as L1NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): L1NFT {
    return new Contract(address, _abi, signerOrProvider) as L1NFT;
  }
}
