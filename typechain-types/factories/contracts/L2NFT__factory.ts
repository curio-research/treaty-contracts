/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { L2NFT, L2NFTInterface } from "../../contracts/L2NFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdminPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "trustedAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060408051808201825260088152674c3254726561747960c01b60208083019182528351808501909452600684526554524541545960d01b90840152815191929162000060916003916200009e565b508051620000769060049060208401906200009e565b50506000600181815533825260208290526040909120805460ff191690911790555062000180565b828054620000ac9062000144565b90600052602060002090601f016020900481019282620000d057600085556200011b565b82601f10620000eb57805160ff19168380011785556200011b565b828001600101855582156200011b579182015b828111156200011b578251825591602001919060010190620000fe565b50620001299291506200012d565b5090565b5b808211156200012957600081556001016200012e565b600181811c908216806200015957607f821691505b6020821081036200017a57634e487b7160e01b600052602260045260246000fd5b50919050565b6111f080620001906000396000f3fe6080604052600436106101295760003560e01c806342842e0e116100a557806395d89b4111610074578063b88d4fde11610059578063b88d4fde14610339578063c87b56dd1461034c578063e985e9c51461036c57600080fd5b806395d89b4114610304578063a22cb4651461031957600080fd5b806342842e0e146102915780635c6fd90b146102a45780636352211e146102c457806370a08231146102e457600080fd5b806318160ddd116100fc57806324d7806c116100e157806324d7806c146102085780632c85ecf81461024157806340c10f191461027157600080fd5b806318160ddd146101d257806323b872dd146101f557600080fd5b806301ffc9a71461012e57806306fdde0314610163578063081812fc14610185578063095ea7b3146101bd575b600080fd5b34801561013a57600080fd5b5061014e610149366004610e59565b6103b5565b60405190151581526020015b60405180910390f35b34801561016f57600080fd5b50610178610452565b60405161015a9190610ece565b34801561019157600080fd5b506101a56101a0366004610ee1565b6104e4565b6040516001600160a01b03909116815260200161015a565b6101d06101cb366004610f16565b610541565b005b3480156101de57600080fd5b50600254600154035b60405190815260200161015a565b6101d0610203366004610f40565b6105c6565b34801561021457600080fd5b5061014e610223366004610f7c565b6001600160a01b031660009081526020819052604090205460ff1690565b34801561024d57600080fd5b5061014e61025c366004610f7c565b60006020819052908152604090205460ff1681565b34801561027d57600080fd5b506101d061028c366004610f16565b6107d4565b6101d061029f366004610f40565b6107e2565b3480156102b057600080fd5b506101d06102bf366004610f7c565b610802565b3480156102d057600080fd5b506101a56102df366004610ee1565b610878565b3480156102f057600080fd5b506101e76102ff366004610f7c565b610883565b34801561031057600080fd5b506101786108eb565b34801561032557600080fd5b506101d0610334366004610f97565b6108fa565b6101d0610347366004610fe9565b610966565b34801561035857600080fd5b50610178610367366004610ee1565b6109b0565b34801561037857600080fd5b5061014e6103873660046110c5565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316148061041857507f80ac58cd000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b8061044c57507f5b5e139f000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b606060038054610461906110f8565b80601f016020809104026020016040519081016040528092919081815260200182805461048d906110f8565b80156104da5780601f106104af576101008083540402835291602001916104da565b820191906000526020600020905b8154815290600101906020018083116104bd57829003601f168201915b5050505050905090565b60006104ef82610a5a565b610525576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506000908152600760205260409020546001600160a01b031690565b600061054c82610878565b60008381526007602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03888116918217909255915193945085939192908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a4505050565b3360009081526020819052604090205460ff1661061d5760405162461bcd60e51b815260206004820152601060248201526f2ab730b8383937bb32b21030b236b4b760811b60448201526064015b60405180910390fd5b600061062882610a82565b905060008061064584600090815260076020526040902080549091565b9150915061066a81876106553390565b6001600160a01b039081169116811491141790565b6106ae576106788633610387565b6106ae576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0385166106ee576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80156106f957600082555b6001600160a01b038681166000908152600660205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260056020526040812091909155600160e11b8416900361078b576001840160008181526005602052604081205490036107895760015481146107895760008181526005602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6107de8282610b02565b5050565b6107fd83838360405180602001604052806000815250610966565b505050565b3360009081526020819052604090205460ff166108545760405162461bcd60e51b815260206004820152601060248201526f2ab730b8383937bb32b21030b236b4b760811b6044820152606401610614565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b600061044c82610a82565b60006001600160a01b0382166108c5576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b031660009081526006602052604090205467ffffffffffffffff1690565b606060048054610461906110f8565b3360008181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109718484846105c6565b6001600160a01b0383163b156109aa5761098d84848484610b1c565b6109aa576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606109bb82610a5a565b6109f1576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a0860408051602081019091526000815290565b90508051600003610a285760405180602001604052806000815250610a53565b80610a3284610c07565b604051602001610a43929190611132565b6040516020818303038152906040525b9392505050565b60006001548210801561044c575050600090815260056020526040902054600160e01b161590565b600081600154811015610ad05760008181526005602052604081205490600160e01b82169003610ace575b80600003610a53575060001901600081815260056020526040902054610aad565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107de828260405180602001604052806000815250610c4b565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610b51903390899088908890600401611161565b6020604051808303816000875af1925050508015610b8c575060408051601f3d908101601f19168201909252610b899181019061119d565b60015b610bea573d808015610bba576040519150601f19603f3d011682016040523d82523d6000602084013e610bbf565b606091505b508051600003610be2576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610c215750819003601f19909101908152919050565b3360009081526020819052604090205460ff161515600114610ca25760405162461bcd60e51b815260206004820152601060248201526f2ab730b8383937bb32b21030b236b4b760811b6044820152606401610614565b610cac8383610d0f565b6001600160a01b0383163b156107fd576001548281035b610cd66000868380600101945086610b1c565b610cf3576040516368d2bf6b60e11b815260040160405180910390fd5b818110610cc3578160015414610d0857600080fd5b5050505050565b6001546000829003610d4d576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03831660008181526006602090815260408083208054680100000000000000018802019055848352600590915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114610dfc57808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101610dc4565b5081600003610e37576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015550505050565b6001600160e01b031981168114610e5657600080fd5b50565b600060208284031215610e6b57600080fd5b8135610a5381610e40565b60005b83811015610e91578181015183820152602001610e79565b838111156109aa5750506000910152565b60008151808452610eba816020860160208601610e76565b601f01601f19169290920160200192915050565b602081526000610a536020830184610ea2565b600060208284031215610ef357600080fd5b5035919050565b80356001600160a01b0381168114610f1157600080fd5b919050565b60008060408385031215610f2957600080fd5b610f3283610efa565b946020939093013593505050565b600080600060608486031215610f5557600080fd5b610f5e84610efa565b9250610f6c60208501610efa565b9150604084013590509250925092565b600060208284031215610f8e57600080fd5b610a5382610efa565b60008060408385031215610faa57600080fd5b610fb383610efa565b915060208301358015158114610fc857600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610fff57600080fd5b61100885610efa565b935061101660208601610efa565b925060408501359150606085013567ffffffffffffffff8082111561103a57600080fd5b818701915087601f83011261104e57600080fd5b81358181111561106057611060610fd3565b604051601f8201601f19908116603f0116810190838211818310171561108857611088610fd3565b816040528281528a60208487010111156110a157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156110d857600080fd5b6110e183610efa565b91506110ef60208401610efa565b90509250929050565b600181811c9082168061110c57607f821691505b60208210810361112c57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351611144818460208801610e76565b835190830190611158818360208801610e76565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526111936080830184610ea2565b9695505050505050565b6000602082840312156111af57600080fd5b8151610a5381610e4056fea26469706673582212207d37781921dd437b040d60e81f65153723d6eb5d8486ba51d399d5620a1991b464736f6c634300080d0033";

type L2NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2NFT__factory extends ContractFactory {
  constructor(...args: L2NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L2NFT> {
    return super.deploy(overrides || {}) as Promise<L2NFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L2NFT {
    return super.attach(address) as L2NFT;
  }
  override connect(signer: Signer): L2NFT__factory {
    return super.connect(signer) as L2NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2NFTInterface {
    return new utils.Interface(_abi) as L2NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): L2NFT {
    return new Contract(address, _abi, signerOrProvider) as L2NFT;
  }
}
