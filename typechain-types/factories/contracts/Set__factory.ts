/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Set, SetInterface } from "../../contracts/Set";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_element",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_elements",
        type: "uint256[]",
      },
    ],
    name: "addArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAll",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_element",
        type: "uint256",
      },
    ],
    name: "includes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_element",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "size",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610647806100326000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806391d40c831161005057806391d40c83146100bd578063949d225d146100d05780639f161b0a146100e157600080fd5b80631003e2d2146100775780634cc822151461008c57806353ed51431461009f575b600080fd5b61008a61008536600461046e565b610104565b005b61008a61009a36600461046e565b6101db565b6100a7610306565b6040516100b49190610487565b60405180910390f35b61008a6100cb3660046104e1565b61035e565b6001546040519081526020016100b4565b6100f46100ef36600461046e565b610415565b60405190151581526020016100b4565b60005473ffffffffffffffffffffffffffffffffffffffff16331461017c5760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b60648201526084015b60405180910390fd5b61018581610415565b6101d85760018054808201825560008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60182905580546101c891906105b5565b6000828152600260205260409020555b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461024e5760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b6064820152608401610173565b61025781610415565b156101d8576000818152600260205260408120549060018061027860015490565b61028291906105b5565b81548110610292576102926105cc565b9060005260206000200154905080600183815481106102b3576102b36105cc565b60009182526020808320909101929092558281526002909152604080822084905584825281205560018054806102eb576102eb6105e2565b60019003818190600052602060002001600090559055505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561035457602002820191906000526020600020905b815481526020019060010190808311610340575b5050505050905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103d15760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b6064820152608401610173565b60005b8151811015610411576103ff8282815181106103f2576103f26105cc565b6020026020010151610104565b80610409816105f8565b9150506103d4565b5050565b600061042060015490565b60000361042f57506000919050565b600082815260026020526040902054151580610468575081600160008154811061045b5761045b6105cc565b9060005260206000200154145b92915050565b60006020828403121561048057600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156104bf578351835292840192918401916001016104a3565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156104f457600080fd5b823567ffffffffffffffff8082111561050c57600080fd5b818501915085601f83011261052057600080fd5b813581811115610532576105326104cb565b8060051b604051601f19603f83011681018181108582111715610557576105576104cb565b60405291825284820192508381018501918883111561057557600080fd5b938501935b828510156105935784358452938501939285019261057a565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156105c7576105c761059f565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006001820161060a5761060a61059f565b506001019056fea2646970667358221220f01eb07e075d380e581f0514d1ad0080d6553c3df8e79a6d6b6d99e1d9048b0d64736f6c634300080d0033";

type SetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Set__factory extends ContractFactory {
  constructor(...args: SetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Set> {
    return super.deploy(overrides || {}) as Promise<Set>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Set {
    return super.attach(address) as Set;
  }
  override connect(signer: Signer): Set__factory {
    return super.connect(signer) as Set__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SetInterface {
    return new utils.Interface(_abi) as SetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Set {
    return new Contract(address, _abi, signerOrProvider) as Set;
  }
}
