/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AddressComponent,
  AddressComponentInterface,
} from "../../../contracts/TypedComponents.sol/AddressComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gameAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getAllEntitiesAndValues",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getBytesValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntitiesAsSet",
    outputs: [
      {
        internalType: "contract Set",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_value",
        type: "address",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValueAsSet",
    outputs: [
      {
        internalType: "contract Set",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_value",
        type: "address",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052604051610010906100dc565b604051809103906000f08015801561002c573d6000803e3d6000fd5b506001600160a01b0316608052604051610045906100dc565b604051809103906000f080158015610061573d6000803e3d6000fd5b50600180546001600160a01b03929092166001600160a01b031992831617905560048054909116905534801561009657600080fd5b5060405162001f5d38038062001f5d8339810160408190526100b7916100ea565b600080546001600160a01b0319166001600160a01b039290921691909117905561011a565b61067980620018e483390190565b6000602082840312156100fc57600080fd5b81516001600160a01b038116811461011357600080fd5b9392505050565b6080516117ae620001366000396000610a2c01526117ae6000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806378d9f34f11610081578063a1d8509f1161005b578063a1d8509f146101b5578063b361be46146101c6578063cccf7a8e146101d957600080fd5b806378d9f34f146101795780638b2829471461018f5780639933adfd146101a257600080fd5b80633e1b5e0d116100b25780633e1b5e0d146101335780634c518fdc146101465780634cc822151461016657600080fd5b80630ff4c916146100d95780632f30c6f61461010957806331b933b91461011e575b600080fd5b6100ec6100e7366004610c2b565b6101fc565b6040516001600160a01b0390911681526020015b60405180910390f35b61011c610117366004610c59565b610220565b005b610126610252565b6040516101009190610cc4565b610126610141366004610cde565b6102e2565b610159610154366004610c2b565b610311565b6040516101009190610d48565b61011c610174366004610c2b565b6103b3565b610181610564565b604051610100929190610d5b565b61011c61019d366004610e84565b610733565b6100ec6101b0366004610ecb565b6109f9565b6001546001600160a01b03166100ec565b6101266101d4366004610ecb565b610a51565b6101ec6101e7366004610c2b565b610ac1565b6040519015158152602001610100565b600061020782610311565b80602001905181019061021a9190610f08565b92915050565b604080516001600160a01b038316602082015261024e91849101604051602081830303815290604052610733565b5050565b600154604080517f53ed514300000000000000000000000000000000000000000000000000000000815290516060926001600160a01b0316916353ed51439160048083019260009291908290030181865afa1580156102b5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102dd9190810190610f25565b905090565b604080516001600160a01b038316602082015260609161021a9101604051602081830303815290604052610a51565b600081815260026020526040902080546060919061032e90610fcb565b80601f016020809104026020016040519081016040528092919081815260200182805461035a90610fcb565b80156103a75780601f1061037c576101008083540402835291602001916103a7565b820191906000526020600020905b81548152906001019060200180831161038a57829003601f168201915b50505050509050919050565b6000546001600160a01b03163314806103cb57503330145b6104425760405162461bcd60e51b815260206004820152602e60248201527f436f6d706f6e656e743a204f6e6c792067616d65206f722073656c662063616e60448201527f206d6f646966792076616c75657300000000000000000000000000000000000060648201526084015b60405180910390fd5b600154604051634cc8221560e01b8152600481018390526001600160a01b0390911690634cc8221590602401600060405180830381600087803b15801561048857600080fd5b505af115801561049c573d6000803e3d6000fd5b505050600082815260026020526040808220905191925060039183916104c191611005565b60408051918290039091208252602082019290925201600020546004546001600160a01b03918216925016811461054d57604051634cc8221560e01b8152600481018390526001600160a01b03821690634cc8221590602401600060405180830381600087803b15801561053457600080fd5b505af1158015610548573d6000803e3d6000fd5b505050505b600082815260026020526040812061024e91610b48565b6060806000600160009054906101000a90046001600160a01b03166001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105bc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e49190810190610f25565b90506000815167ffffffffffffffff81111561060257610602610dcd565b60405190808252806020026020018201604052801561063557816020015b60608152602001906001900390816106205790505b50905060005b8251811015610729576002600084838151811061065a5761065a6110a0565b60200260200101518152602001908152602001600020805461067b90610fcb565b80601f01602080910402602001604051908101604052809291908181526020018280546106a790610fcb565b80156106f45780601f106106c9576101008083540402835291602001916106f4565b820191906000526020600020905b8154815290600101906020018083116106d757829003601f168201915b505050505082828151811061070b5761070b6110a0565b60200260200101819052508080610721906110b6565b91505061063b565b5090939092509050565b6000546001600160a01b031633148061074b57503330145b6107bd5760405162461bcd60e51b815260206004820152602e60248201527f436f6d706f6e656e743a204f6e6c792067616d65206f722073656c662063616e60448201527f206d6f646966792076616c7565730000000000000000000000000000000000006064820152608401610439565b600154604051630801f16960e11b8152600481018490526001600160a01b0390911690631003e2d290602401600060405180830381600087803b15801561080357600080fd5b505af1158015610817573d6000803e3d6000fd5b5050506000838152600260205260408082209051919250600391839161083c91611005565b60408051918290039091208252602082019290925201600020546004546001600160a01b0391821692501681146108c857604051634cc8221560e01b8152600481018490526001600160a01b03821690634cc8221590602401600060405180830381600087803b1580156108af57600080fd5b505af11580156108c3573d6000803e3d6000fd5b505050505b600083815260026020908152604090912083516108e792850190610b85565b5081516020808401919091206004546000828152600390935260409092205490916001600160a01b039081169116036109885760405161092690610c09565b604051809103906000f080158015610942573d6000803e3d6000fd5b50600082815260036020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169190911790555b60008181526003602052604090819020549051630801f16960e11b8152600481018690526001600160a01b0390911690631003e2d290602401600060405180830381600087803b1580156109db57600080fd5b505af11580156109ef573d6000803e3d6000fd5b5050505050505050565b80516020808301919091206000908152600390915260408120546004546001600160a01b039182169116810361021a57507f000000000000000000000000000000000000000000000000000000000000000092915050565b6060610a5c826109f9565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a99573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261021a9190810190610f25565b6001546040517f9f161b0a000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b031690639f161b0a90602401602060405180830381865afa158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021a91906110dd565b508054610b5490610fcb565b6000825580601f10610b64575050565b601f016020900490600052602060002090810190610b829190610c16565b50565b828054610b9190610fcb565b90600052602060002090601f016020900481019282610bb35760008555610bf9565b82601f10610bcc57805160ff1916838001178555610bf9565b82800160010185558215610bf9579182015b82811115610bf9578251825591602001919060010190610bde565b50610c05929150610c16565b5090565b6106798061110083390190565b5b80821115610c055760008155600101610c17565b600060208284031215610c3d57600080fd5b5035919050565b6001600160a01b0381168114610b8257600080fd5b60008060408385031215610c6c57600080fd5b823591506020830135610c7e81610c44565b809150509250929050565b600081518084526020808501945080840160005b83811015610cb957815187529582019590820190600101610c9d565b509495945050505050565b602081526000610cd76020830184610c89565b9392505050565b600060208284031215610cf057600080fd5b8135610cd781610c44565b6000815180845260005b81811015610d2157602081850181015186830182015201610d05565b81811115610d33576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610cd76020830184610cfb565b604081526000610d6e6040830185610c89565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015610dbe57601f19878403018552610dac838351610cfb565b94860194925090850190600101610d90565b50909998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e0c57610e0c610dcd565b604052919050565b600082601f830112610e2557600080fd5b813567ffffffffffffffff811115610e3f57610e3f610dcd565b610e52601f8201601f1916602001610de3565b818152846020838601011115610e6757600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610e9757600080fd5b82359150602083013567ffffffffffffffff811115610eb557600080fd5b610ec185828601610e14565b9150509250929050565b600060208284031215610edd57600080fd5b813567ffffffffffffffff811115610ef457600080fd5b610f0084828501610e14565b949350505050565b600060208284031215610f1a57600080fd5b8151610cd781610c44565b60006020808385031215610f3857600080fd5b825167ffffffffffffffff80821115610f5057600080fd5b818501915085601f830112610f6457600080fd5b815181811115610f7657610f76610dcd565b8060051b9150610f87848301610de3565b8181529183018401918481019088841115610fa157600080fd5b938501935b83851015610fbf57845182529385019390850190610fa6565b98975050505050505050565b600181811c90821680610fdf57607f821691505b602082108103610fff57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c91508083168061102157607f831692505b6020808410820361104057634e487b7160e01b86526022600452602486fd5b818015611054576001811461106557611092565b60ff19861689528489019650611092565b60008a81526020902060005b8681101561108a5781548b820152908501908301611071565b505084890196505b509498975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016110d657634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156110ef57600080fd5b81518015158114610cd757600080fdfe608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610647806100326000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806391d40c831161005057806391d40c83146100bd578063949d225d146100d05780639f161b0a146100e157600080fd5b80631003e2d2146100775780634cc822151461008c57806353ed51431461009f575b600080fd5b61008a61008536600461046e565b610104565b005b61008a61009a36600461046e565b6101db565b6100a7610306565b6040516100b49190610487565b60405180910390f35b61008a6100cb3660046104e1565b61035e565b6001546040519081526020016100b4565b6100f46100ef36600461046e565b610415565b60405190151581526020016100b4565b60005473ffffffffffffffffffffffffffffffffffffffff16331461017c5760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b60648201526084015b60405180910390fd5b61018581610415565b6101d85760018054808201825560008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60182905580546101c891906105b5565b6000828152600260205260409020555b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461024e5760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b6064820152608401610173565b61025781610415565b156101d8576000818152600260205260408120549060018061027860015490565b61028291906105b5565b81548110610292576102926105cc565b9060005260206000200154905080600183815481106102b3576102b36105cc565b60009182526020808320909101929092558281526002909152604080822084905584825281205560018054806102eb576102eb6105e2565b60019003818190600052602060002001600090559055505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561035457602002820191906000526020600020905b815481526020019060010190808311610340575b5050505050905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103d15760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b6064820152608401610173565b60005b8151811015610411576103ff8282815181106103f2576103f26105cc565b6020026020010151610104565b80610409816105f8565b9150506103d4565b5050565b600061042060015490565b60000361042f57506000919050565b600082815260026020526040902054151580610468575081600160008154811061045b5761045b6105cc565b9060005260206000200154145b92915050565b60006020828403121561048057600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156104bf578351835292840192918401916001016104a3565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156104f457600080fd5b823567ffffffffffffffff8082111561050c57600080fd5b818501915085601f83011261052057600080fd5b813581811115610532576105326104cb565b8060051b604051601f19603f83011681018181108582111715610557576105576104cb565b60405291825284820192508381018501918883111561057557600080fd5b938501935b828510156105935784358452938501939285019261057a565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156105c7576105c761059f565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006001820161060a5761060a61059f565b506001019056fea2646970667358221220f01eb07e075d380e581f0514d1ad0080d6553c3df8e79a6d6b6d99e1d9048b0d64736f6c634300080d0033a2646970667358221220a576846268e13ed857e9b97d1764168e7366c601ee8c818d4eef86e55f26f7a464736f6c634300080d0033608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610647806100326000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806391d40c831161005057806391d40c83146100bd578063949d225d146100d05780639f161b0a146100e157600080fd5b80631003e2d2146100775780634cc822151461008c57806353ed51431461009f575b600080fd5b61008a61008536600461046e565b610104565b005b61008a61009a36600461046e565b6101db565b6100a7610306565b6040516100b49190610487565b60405180910390f35b61008a6100cb3660046104e1565b61035e565b6001546040519081526020016100b4565b6100f46100ef36600461046e565b610415565b60405190151581526020016100b4565b60005473ffffffffffffffffffffffffffffffffffffffff16331461017c5760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b60648201526084015b60405180910390fd5b61018581610415565b6101d85760018054808201825560008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60182905580546101c891906105b5565b6000828152600260205260409020555b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461024e5760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b6064820152608401610173565b61025781610415565b156101d8576000818152600260205260408120549060018061027860015490565b61028291906105b5565b81548110610292576102926105cc565b9060005260206000200154905080600183815481106102b3576102b36105cc565b60009182526020808320909101929092558281526002909152604080822084905584825281205560018054806102eb576102eb6105e2565b60019003818190600052602060002001600090559055505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561035457602002820191906000526020600020905b815481526020019060010190808311610340575b5050505050905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103d15760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b6064820152608401610173565b60005b8151811015610411576103ff8282815181106103f2576103f26105cc565b6020026020010151610104565b80610409816105f8565b9150506103d4565b5050565b600061042060015490565b60000361042f57506000919050565b600082815260026020526040902054151580610468575081600160008154811061045b5761045b6105cc565b9060005260206000200154145b92915050565b60006020828403121561048057600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156104bf578351835292840192918401916001016104a3565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156104f457600080fd5b823567ffffffffffffffff8082111561050c57600080fd5b818501915085601f83011261052057600080fd5b813581811115610532576105326104cb565b8060051b604051601f19603f83011681018181108582111715610557576105576104cb565b60405291825284820192508381018501918883111561057557600080fd5b938501935b828510156105935784358452938501939285019261057a565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156105c7576105c761059f565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60006001820161060a5761060a61059f565b506001019056fea2646970667358221220f01eb07e075d380e581f0514d1ad0080d6553c3df8e79a6d6b6d99e1d9048b0d64736f6c634300080d0033";

type AddressComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressComponent__factory extends ContractFactory {
  constructor(...args: AddressComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gameAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressComponent> {
    return super.deploy(
      _gameAddr,
      overrides || {}
    ) as Promise<AddressComponent>;
  }
  override getDeployTransaction(
    _gameAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gameAddr, overrides || {});
  }
  override attach(address: string): AddressComponent {
    return super.attach(address) as AddressComponent;
  }
  override connect(signer: Signer): AddressComponent__factory {
    return super.connect(signer) as AddressComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressComponentInterface {
    return new utils.Interface(_abi) as AddressComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressComponent {
    return new Contract(address, _abi, signerOrProvider) as AddressComponent;
  }
}
