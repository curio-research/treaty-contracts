/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PositionComponent,
  PositionComponentInterface,
} from "../../../contracts/TypedComponents.sol/PositionComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gameAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getAllEntitiesAndValues",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getBytesValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntitiesAsSet",
    outputs: [
      {
        internalType: "contract Set",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "_value",
        type: "tuple",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValueAsSet",
    outputs: [
      {
        internalType: "contract Set",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "_value",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052604051610010906100dc565b604051809103906000f08015801561002c573d6000803e3d6000fd5b506001600160a01b0316608052604051610045906100dc565b604051809103906000f080158015610061573d6000803e3d6000fd5b50600180546001600160a01b03929092166001600160a01b031992831617905560048054909116905534801561009657600080fd5b5060405162001c7838038062001c788339810160408190526100b7916100ea565b600080546001600160a01b0319166001600160a01b039290921691909117905561011a565b6104af80620017c983390190565b6000602082840312156100fc57600080fd5b81516001600160a01b038116811461011357600080fd5b9392505050565b608051611693620001366000396000610a3701526116936000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638bbf68fe11610081578063b361be461161005b578063b361be46146101ce578063cccf7a8e146101e1578063fd4ab6d81461020457600080fd5b80638bbf68fe1461017f5780639933adfd14610192578063a1d8509f146101bd57600080fd5b80634cc82215116100b25780634cc822151461014157806378d9f34f146101565780638b2829471461016c57600080fd5b80630ff4c916146100d957806331b933b91461010c5780634c518fdc14610121575b600080fd5b6100ec6100e7366004610c72565b610217565b604080518251815260209283015192810192909252015b60405180910390f35b61011461024d565b6040516101039190610cc6565b61013461012f366004610c72565b6102dd565b6040516101039190610d2d565b61015461014f366004610c72565b61037f565b005b61015e610534565b604051610103929190610d40565b61015461017a366004610e69565b610703565b61015461018d366004610eff565b6109c9565b6101a56101a0366004610f2c565b610a04565b6040516001600160a01b039091168152602001610103565b6001546001600160a01b03166101a5565b6101146101dc366004610f2c565b610a5c565b6101f46101ef366004610c72565b610acc565b6040519015158152602001610103565b610114610212366004610f69565b610b53565b6040805180820190915260008082526020820152610234826102dd565b8060200190518101906102479190610f85565b92915050565b600154604080517f53ed514300000000000000000000000000000000000000000000000000000000815290516060926001600160a01b0316916353ed51439160048083019260009291908290030181865afa1580156102b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102d89190810190610fd4565b905090565b60008181526002602052604090208054606091906102fa9061107a565b80601f01602080910402602001604051908101604052809291908181526020018280546103269061107a565b80156103735780601f1061034857610100808354040283529160200191610373565b820191906000526020600020905b81548152906001019060200180831161035657829003601f168201915b50505050509050919050565b6000546001600160a01b031633148061039757503330145b61040e5760405162461bcd60e51b815260206004820152602e60248201527f436f6d706f6e656e743a204f6e6c792067616d65206f722073656c662063616e60448201527f206d6f646966792076616c75657300000000000000000000000000000000000060648201526084015b60405180910390fd5b600154604051634cc8221560e01b8152600481018390526001600160a01b0390911690634cc8221590602401600060405180830381600087803b15801561045457600080fd5b505af1158015610468573d6000803e3d6000fd5b5050506000828152600260205260408082209051919250600391839161048d916110b4565b60408051918290039091208252602082019290925201600020546004546001600160a01b03918216925016811461051957604051634cc8221560e01b8152600481018390526001600160a01b03821690634cc8221590602401600060405180830381600087803b15801561050057600080fd5b505af1158015610514573d6000803e3d6000fd5b505050505b600082815260026020526040812061053091610b8f565b5050565b6060806000600160009054906101000a90046001600160a01b03166001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa15801561058c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105b49190810190610fd4565b90506000815167ffffffffffffffff8111156105d2576105d2610db2565b60405190808252806020026020018201604052801561060557816020015b60608152602001906001900390816105f05790505b50905060005b82518110156106f9576002600084838151811061062a5761062a61114f565b60200260200101518152602001908152602001600020805461064b9061107a565b80601f01602080910402602001604051908101604052809291908181526020018280546106779061107a565b80156106c45780601f10610699576101008083540402835291602001916106c4565b820191906000526020600020905b8154815290600101906020018083116106a757829003601f168201915b50505050508282815181106106db576106db61114f565b602002602001018190525080806106f190611165565b91505061060b565b5090939092509050565b6000546001600160a01b031633148061071b57503330145b61078d5760405162461bcd60e51b815260206004820152602e60248201527f436f6d706f6e656e743a204f6e6c792067616d65206f722073656c662063616e60448201527f206d6f646966792076616c7565730000000000000000000000000000000000006064820152608401610405565b600154604051630801f16960e11b8152600481018490526001600160a01b0390911690631003e2d290602401600060405180830381600087803b1580156107d357600080fd5b505af11580156107e7573d6000803e3d6000fd5b5050506000838152600260205260408082209051919250600391839161080c916110b4565b60408051918290039091208252602082019290925201600020546004546001600160a01b03918216925016811461089857604051634cc8221560e01b8152600481018490526001600160a01b03821690634cc8221590602401600060405180830381600087803b15801561087f57600080fd5b505af1158015610893573d6000803e3d6000fd5b505050505b600083815260026020908152604090912083516108b792850190610bcc565b5081516020808401919091206004546000828152600390935260409092205490916001600160a01b03908116911603610958576040516108f690610c50565b604051809103906000f080158015610912573d6000803e3d6000fd5b50600082815260036020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169190911790555b60008181526003602052604090819020549051630801f16960e11b8152600481018690526001600160a01b0390911690631003e2d290602401600060405180830381600087803b1580156109ab57600080fd5b505af11580156109bf573d6000803e3d6000fd5b5050505050505050565b61053082826040516020016109f09190815181526020918201519181019190915260400190565b604051602081830303815290604052610703565b80516020808301919091206000908152600390915260408120546004546001600160a01b039182169116810361024757507f000000000000000000000000000000000000000000000000000000000000000092915050565b6060610a6782610a04565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa158015610aa4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102479190810190610fd4565b6001546040517f9f161b0a000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b031690639f161b0a90602401602060405180830381865afa158015610b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610247919061118c565b606061024782604051602001610b7b9190815181526020918201519181019190915260400190565b604051602081830303815290604052610a5c565b508054610b9b9061107a565b6000825580601f10610bab575050565b601f016020900490600052602060002090810190610bc99190610c5d565b50565b828054610bd89061107a565b90600052602060002090601f016020900481019282610bfa5760008555610c40565b82601f10610c1357805160ff1916838001178555610c40565b82800160010185558215610c40579182015b82811115610c40578251825591602001919060010190610c25565b50610c4c929150610c5d565b5090565b6104af806111af83390190565b5b80821115610c4c5760008155600101610c5e565b600060208284031215610c8457600080fd5b5035919050565b600081518084526020808501945080840160005b83811015610cbb57815187529582019590820190600101610c9f565b509495945050505050565b602081526000610cd96020830184610c8b565b9392505050565b6000815180845260005b81811015610d0657602081850181015186830182015201610cea565b81811115610d18576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610cd96020830184610ce0565b604081526000610d536040830185610c8b565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015610da357601f19878403018552610d91838351610ce0565b94860194925090850190600101610d75565b50909998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610df157610df1610db2565b604052919050565b600082601f830112610e0a57600080fd5b813567ffffffffffffffff811115610e2457610e24610db2565b610e37601f8201601f1916602001610dc8565b818152846020838601011115610e4c57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610e7c57600080fd5b82359150602083013567ffffffffffffffff811115610e9a57600080fd5b610ea685828601610df9565b9150509250929050565b600060408284031215610ec257600080fd5b6040516040810181811067ffffffffffffffff82111715610ee557610ee5610db2565b604052823581526020928301359281019290925250919050565b60008060608385031215610f1257600080fd5b82359150610f238460208501610eb0565b90509250929050565b600060208284031215610f3e57600080fd5b813567ffffffffffffffff811115610f5557600080fd5b610f6184828501610df9565b949350505050565b600060408284031215610f7b57600080fd5b610cd98383610eb0565b600060408284031215610f9757600080fd5b6040516040810181811067ffffffffffffffff82111715610fba57610fba610db2565b604052825181526020928301519281019290925250919050565b60006020808385031215610fe757600080fd5b825167ffffffffffffffff80821115610fff57600080fd5b818501915085601f83011261101357600080fd5b81518181111561102557611025610db2565b8060051b9150611036848301610dc8565b818152918301840191848101908884111561105057600080fd5b938501935b8385101561106e57845182529385019390850190611055565b98975050505050505050565b600181811c9082168061108e57607f821691505b6020821081036110ae57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806110d057607f831692505b602080841082036110ef57634e487b7160e01b86526022600452602486fd5b818015611103576001811461111457611141565b60ff19861689528489019650611141565b60008a81526020902060005b868110156111395781548b820152908501908301611120565b505084890196505b509498975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161118557634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020828403121561119e57600080fd5b81518015158114610cd957600080fdfe608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561047d806100326000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806353ed51431161005057806353ed514314610094578063949d225d146100b25780639f161b0a146100c357600080fd5b80631003e2d21461006c5780634cc8221514610081575b600080fd5b61007f61007a366004610399565b6100e6565b005b61007f61008f366004610399565b6101bd565b61009c6102e8565b6040516100a991906103b2565b60405180910390f35b6001546040519081526020016100a9565b6100d66100d1366004610399565b610340565b60405190151581526020016100a9565b60005473ffffffffffffffffffffffffffffffffffffffff16331461015e5760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b60648201526084015b60405180910390fd5b61016781610340565b6101ba5760018054808201825560008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60182905580546101aa91906103f6565b6000828152600260205260409020555b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102305760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b6064820152608401610155565b61023981610340565b156101ba576000818152600260205260408120549060018061025a60015490565b61026491906103f6565b815481106102745761027461041b565b9060005260206000200154905080600183815481106102955761029561041b565b60009182526020808320909101929092558281526002909152604080822084905584825281205560018054806102cd576102cd610431565b60019003818190600052602060002001600090559055505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561033657602002820191906000526020600020905b815481526020019060010190808311610322575b5050505050905090565b600061034b60015490565b60000361035a57506000919050565b60008281526002602052604090205415158061039357508160016000815481106103865761038661041b565b9060005260206000200154145b92915050565b6000602082840312156103ab57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156103ea578351835292840192918401916001016103ce565b50909695505050505050565b60008282101561041657634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ebde7a6ce6f021fdc810c16de3d7df0f72534ae7915f8069ae1d3872a5fc997564736f6c634300080d0033a2646970667358221220e74d1c01af0947590cd7448a7fe5207119aa2db78cbc444857b4e467eef7522664736f6c634300080d0033608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561047d806100326000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806353ed51431161005057806353ed514314610094578063949d225d146100b25780639f161b0a146100c357600080fd5b80631003e2d21461006c5780634cc8221514610081575b600080fd5b61007f61007a366004610399565b6100e6565b005b61007f61008f366004610399565b6101bd565b61009c6102e8565b6040516100a991906103b2565b60405180910390f35b6001546040519081526020016100a9565b6100d66100d1366004610399565b610340565b60405190151581526020016100a9565b60005473ffffffffffffffffffffffffffffffffffffffff16331461015e5760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b60648201526084015b60405180910390fd5b61016781610340565b6101ba5760018054808201825560008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60182905580546101aa91906103f6565b6000828152600260205260409020555b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102305760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b6064820152608401610155565b61023981610340565b156101ba576000818152600260205260408120549060018061025a60015490565b61026491906103f6565b815481106102745761027461041b565b9060005260206000200154905080600183815481106102955761029561041b565b60009182526020808320909101929092558281526002909152604080822084905584825281205560018054806102cd576102cd610431565b60019003818190600052602060002001600090559055505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561033657602002820191906000526020600020905b815481526020019060010190808311610322575b5050505050905090565b600061034b60015490565b60000361035a57506000919050565b60008281526002602052604090205415158061039357508160016000815481106103865761038661041b565b9060005260206000200154145b92915050565b6000602082840312156103ab57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156103ea578351835292840192918401916001016103ce565b50909695505050505050565b60008282101561041657634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ebde7a6ce6f021fdc810c16de3d7df0f72534ae7915f8069ae1d3872a5fc997564736f6c634300080d0033";

type PositionComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PositionComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PositionComponent__factory extends ContractFactory {
  constructor(...args: PositionComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gameAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PositionComponent> {
    return super.deploy(
      _gameAddr,
      overrides || {}
    ) as Promise<PositionComponent>;
  }
  override getDeployTransaction(
    _gameAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gameAddr, overrides || {});
  }
  override attach(address: string): PositionComponent {
    return super.attach(address) as PositionComponent;
  }
  override connect(signer: Signer): PositionComponent__factory {
    return super.connect(signer) as PositionComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PositionComponentInterface {
    return new utils.Interface(_abi) as PositionComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PositionComponent {
    return new Contract(address, _abi, signerOrProvider) as PositionComponent;
  }
}
