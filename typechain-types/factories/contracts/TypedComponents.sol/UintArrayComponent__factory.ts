/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UintArrayComponent,
  UintArrayComponentInterface,
} from "../../../contracts/TypedComponents.sol/UintArrayComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gameAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getAllEntitiesAndValues",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getBytesValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntitiesAsSet",
    outputs: [
      {
        internalType: "contract Set",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_value",
        type: "uint256[]",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValueAsSet",
    outputs: [
      {
        internalType: "contract Set",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_value",
        type: "uint256[]",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052604051610010906100e0565b604051809103906000f08015801561002c573d6000803e3d6000fd5b5060601b6001600160601b031916608052604051610049906100e0565b604051809103906000f080158015610065573d6000803e3d6000fd5b50600180546001600160a01b03929092166001600160a01b031992831617905560048054909116905534801561009a57600080fd5b5060405162001c5538038062001c558339810160408190526100bb916100ee565b600080546001600160a01b0319166001600160a01b039290921691909117905561011c565b610529806200172c83390190565b6000602082840312156100ff578081fd5b81516001600160a01b0381168114610115578182fd5b9392505050565b60805160601c6115f16200013b600039600061095701526115f16000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063946aadc611610081578063a1d8509f1161005b578063a1d8509f146101b9578063b361be46146101ca578063cccf7a8e146101dd57600080fd5b8063946aadc614610168578063963e9eb01461017b5780639933adfd1461018e57600080fd5b80634cc82215116100b25780634cc822151461012a57806378d9f34f1461013f5780638b2829471461015557600080fd5b80630ff4c916146100d957806331b933b9146101025780634c518fdc1461010a575b600080fd5b6100ec6100e7366004610d76565b610200565b6040516100f99190610f2e565b60405180910390f35b6100ec610224565b61011d610118366004610d76565b6102c3565b6040516100f99190610fb2565b61013d610138366004610d76565b610365565b005b61014761048b565b6040516100f9929190610f41565b61013d610163366004610dd3565b610693565b61013d610176366004610d8e565b6108d0565b6100ec610189366004610c4e565b6108f9565b6101a161019c366004610d43565b610923565b6040516001600160a01b0390911681526020016100f9565b6001546001600160a01b03166101a1565b6100ec6101d8366004610d43565b61097c565b6101f06101eb366004610d76565b6109fb565b60405190151581526020016100f9565b606061020b826102c3565b80602001905181019061021e9190610c89565b92915050565b600154604080517f53ed514300000000000000000000000000000000000000000000000000000000815290516060926001600160a01b0316916353ed5143916004808301926000929190829003018186803b15801561028257600080fd5b505afa158015610296573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102be9190810190610c89565b905090565b60008181526002602052604090208054606091906102e09061101a565b80601f016020809104026020016040519081016040528092919081815260200182805461030c9061101a565b80156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b50505050509050919050565b600154604051634cc8221560e01b8152600481018390526001600160a01b0390911690634cc8221590602401600060405180830381600087803b1580156103ab57600080fd5b505af11580156103bf573d6000803e3d6000fd5b505050600082815260026020526040808220905191925060039183916103e491610e93565b60408051918290039091208252602082019290925201600020546004546001600160a01b03918216925016811461047057604051634cc8221560e01b8152600481018390526001600160a01b03821690634cc8221590602401600060405180830381600087803b15801561045757600080fd5b505af115801561046b573d6000803e3d6000fd5b505050505b600082815260026020526040812061048791610a91565b5050565b6060806000600160009054906101000a90046001600160a01b03166001600160a01b03166353ed51436040518163ffffffff1660e01b815260040160006040518083038186803b1580156104de57600080fd5b505afa1580156104f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261051a9190810190610c89565b90506000815167ffffffffffffffff81111561054657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561057957816020015b60608152602001906001900390816105645790505b50905060005b825181101561068957600260008483815181106105ac57634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002080546105cd9061101a565b80601f01602080910402602001604051908101604052809291908181526020018280546105f99061101a565b80156106465780601f1061061b57610100808354040283529160200191610646565b820191906000526020600020905b81548152906001019060200180831161062957829003601f168201915b505050505082828151811061066b57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061068190611055565b91505061057f565b5090939092509050565b600154604051630801f16960e11b8152600481018490526001600160a01b0390911690631003e2d290602401600060405180830381600087803b1580156106d957600080fd5b505af11580156106ed573d6000803e3d6000fd5b5050506000838152600260205260408082209051919250600391839161071291610e93565b60408051918290039091208252602082019290925201600020546004546001600160a01b03918216925016811461079e57604051634cc8221560e01b8152600481018490526001600160a01b03821690634cc8221590602401600060405180830381600087803b15801561078557600080fd5b505af1158015610799573d6000803e3d6000fd5b505050505b600083815260026020908152604090912083516107bd92850190610ace565b5081516020808401919091206004546000828152600390935260409092205490916001600160a01b039182169116141561085f576040516107fd90610b52565b604051809103906000f080158015610819573d6000803e3d6000fd5b50600082815260036020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169190911790555b60008181526003602052604090819020549051630801f16960e11b8152600481018690526001600160a01b0390911690631003e2d290602401600060405180830381600087803b1580156108b257600080fd5b505af11580156108c6573d6000803e3d6000fd5b5050505050505050565b61048782826040516020016108e59190610f2e565b604051602081830303815290604052610693565b606061021e8260405160200161090f9190610f2e565b60405160208183030381529060405261097c565b80516020808301919091206000908152600390915260408120546004546001600160a01b03918216911681141561021e57507f000000000000000000000000000000000000000000000000000000000000000092915050565b606061098782610923565b6001600160a01b03166353ed51436040518163ffffffff1660e01b815260040160006040518083038186803b1580156109bf57600080fd5b505afa1580156109d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261021e9190810190610c89565b6001546040517f9f161b0a000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b031690639f161b0a9060240160206040518083038186803b158015610a5957600080fd5b505afa158015610a6d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610d1c565b508054610a9d9061101a565b6000825580601f10610aad575050565b601f016020900490600052602060002090810190610acb9190610b5f565b50565b828054610ada9061101a565b90600052602060002090601f016020900481019282610afc5760008555610b42565b82601f10610b1557805160ff1916838001178555610b42565b82800160010185558215610b42579182015b82811115610b42578251825591602001919060010190610b27565b50610b4e929150610b5f565b5090565b6105298061109383390190565b5b80821115610b4e5760008155600101610b60565b600082601f830112610b84578081fd5b81356020610b99610b9483610ff6565b610fc5565b80838252828201915082860187848660051b8901011115610bb8578586fd5b855b85811015610bd657813584529284019290840190600101610bba565b5090979650505050505050565b600082601f830112610bf3578081fd5b813567ffffffffffffffff811115610c0d57610c0d61107c565b610c20601f8201601f1916602001610fc5565b818152846020838601011115610c34578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215610c5f578081fd5b813567ffffffffffffffff811115610c75578182fd5b610c8184828501610b74565b949350505050565b60006020808385031215610c9b578182fd5b825167ffffffffffffffff811115610cb1578283fd5b8301601f81018513610cc1578283fd5b8051610ccf610b9482610ff6565b80828252848201915084840188868560051b8701011115610cee578687fd5b8694505b83851015610d10578051835260019490940193918501918501610cf2565b50979650505050505050565b600060208284031215610d2d578081fd5b81518015158114610d3c578182fd5b9392505050565b600060208284031215610d54578081fd5b813567ffffffffffffffff811115610d6a578182fd5b610c8184828501610be3565b600060208284031215610d87578081fd5b5035919050565b60008060408385031215610da0578081fd5b82359150602083013567ffffffffffffffff811115610dbd578182fd5b610dc985828601610b74565b9150509250929050565b60008060408385031215610de5578182fd5b82359150602083013567ffffffffffffffff811115610e02578182fd5b610dc985828601610be3565b6000815180845260208085019450808401835b83811015610e3d57815187529582019590820190600101610e21565b509495945050505050565b60008151808452815b81811015610e6d57602081850181015186830182015201610e51565b81811115610e7e5782602083870101525b50601f01601f19169290920160200192915050565b600080835482600182811c915080831680610eaf57607f831692505b6020808410821415610ecf57634e487b7160e01b87526022600452602487fd5b818015610ee35760018114610ef457610f20565b60ff19861689528489019650610f20565b60008a815260209020885b86811015610f185781548b820152908501908301610eff565b505084890196505b509498975050505050505050565b602081526000610d3c6020830184610e0e565b604081526000610f546040830185610e0e565b6020838203818501528185518084528284019150828160051b850101838801865b83811015610fa357601f19878403018552610f91838351610e48565b94860194925090850190600101610f75565b50909998505050505050505050565b602081526000610d3c6020830184610e48565b604051601f8201601f1916810167ffffffffffffffff81118282101715610fee57610fee61107c565b604052919050565b600067ffffffffffffffff8211156110105761101061107c565b5060051b60200190565b600181811c9082168061102e57607f821691505b6020821081141561104f57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561107557634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfe608060405234801561001057600080fd5b50610509806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806391d40c831161005057806391d40c83146100bd578063949d225d146100d05780639f161b0a146100e157600080fd5b80631003e2d2146100775780634cc822151461008c57806353ed51431461009f575b600080fd5b61008a610085366004610419565b610104565b005b61008a61009a366004610419565b61016d565b6100a7610253565b6040516100b49190610431565b60405180910390f35b61008a6100cb366004610359565b6102ab565b6000546040519081526020016100b4565b6100f46100ef366004610419565b6102fd565b60405190151581526020016100b4565b61010d816102fd565b156101155750565b60008054600181810183559180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630182905561015160005490565b61015b9190610475565b60009182526001602052604090912055565b610176816102fd565b61017d5750565b60008181526001602081905260408220549190819061019b60005490565b6101a59190610475565b815481106101c357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080600083815481106101f257634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260019091526040808220849055848252812081905580548061023857634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055505050565b606060008054806020026020016040519081016040528092919081815260200182805480156102a157602002820191906000526020600020905b81548152602001906001019080831161028d575b5050505050905090565b60005b81518110156102f9576102e78282815181106102da57634e487b7160e01b600052603260045260246000fd5b6020026020010151610104565b806102f18161048c565b9150506102ae565b5050565b6000805461030d57506000919050565b6000828152600160205260409020541515806103535750816000808154811061034657634e487b7160e01b600052603260045260246000fd5b9060005260206000200154145b92915050565b6000602080838503121561036b578182fd5b823567ffffffffffffffff80821115610382578384fd5b818501915085601f830112610395578384fd5b8135818111156103a7576103a76104bd565b8060051b604051601f19603f830116810181811085821117156103cc576103cc6104bd565b604052828152858101935084860182860187018a10156103ea578788fd5b8795505b8386101561040c5780358552600195909501949386019386016103ee565b5098975050505050505050565b60006020828403121561042a578081fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156104695783518352928401929184019160010161044d565b50909695505050505050565b600082821015610487576104876104a7565b500390565b60006000198214156104a0576104a06104a7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212202dd06c7e0608124355cb1f9ceca0e5d4d5916427eed189b475797b6f8ca8ef0164736f6c63430008040033a264697066735822122079c3c9b42e2d4a8d93823f10efb262cc135797f484493033f4aab8db91e319c764736f6c63430008040033608060405234801561001057600080fd5b50610509806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806391d40c831161005057806391d40c83146100bd578063949d225d146100d05780639f161b0a146100e157600080fd5b80631003e2d2146100775780634cc822151461008c57806353ed51431461009f575b600080fd5b61008a610085366004610419565b610104565b005b61008a61009a366004610419565b61016d565b6100a7610253565b6040516100b49190610431565b60405180910390f35b61008a6100cb366004610359565b6102ab565b6000546040519081526020016100b4565b6100f46100ef366004610419565b6102fd565b60405190151581526020016100b4565b61010d816102fd565b156101155750565b60008054600181810183559180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630182905561015160005490565b61015b9190610475565b60009182526001602052604090912055565b610176816102fd565b61017d5750565b60008181526001602081905260408220549190819061019b60005490565b6101a59190610475565b815481106101c357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080600083815481106101f257634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260019091526040808220849055848252812081905580548061023857634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055505050565b606060008054806020026020016040519081016040528092919081815260200182805480156102a157602002820191906000526020600020905b81548152602001906001019080831161028d575b5050505050905090565b60005b81518110156102f9576102e78282815181106102da57634e487b7160e01b600052603260045260246000fd5b6020026020010151610104565b806102f18161048c565b9150506102ae565b5050565b6000805461030d57506000919050565b6000828152600160205260409020541515806103535750816000808154811061034657634e487b7160e01b600052603260045260246000fd5b9060005260206000200154145b92915050565b6000602080838503121561036b578182fd5b823567ffffffffffffffff80821115610382578384fd5b818501915085601f830112610395578384fd5b8135818111156103a7576103a76104bd565b8060051b604051601f19603f830116810181811085821117156103cc576103cc6104bd565b604052828152858101935084860182860187018a10156103ea578788fd5b8795505b8386101561040c5780358552600195909501949386019386016103ee565b5098975050505050505050565b60006020828403121561042a578081fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156104695783518352928401929184019160010161044d565b50909695505050505050565b600082821015610487576104876104a7565b500390565b60006000198214156104a0576104a06104a7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212202dd06c7e0608124355cb1f9ceca0e5d4d5916427eed189b475797b6f8ca8ef0164736f6c63430008040033";

type UintArrayComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UintArrayComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UintArrayComponent__factory extends ContractFactory {
  constructor(...args: UintArrayComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gameAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UintArrayComponent> {
    return super.deploy(
      _gameAddr,
      overrides || {}
    ) as Promise<UintArrayComponent>;
  }
  override getDeployTransaction(
    _gameAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gameAddr, overrides || {});
  }
  override attach(address: string): UintArrayComponent {
    return super.attach(address) as UintArrayComponent;
  }
  override connect(signer: Signer): UintArrayComponent__factory {
    return super.connect(signer) as UintArrayComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UintArrayComponentInterface {
    return new utils.Interface(_abi) as UintArrayComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UintArrayComponent {
    return new Contract(address, _abi, signerOrProvider) as UintArrayComponent;
  }
}
