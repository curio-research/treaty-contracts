/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UintArrayComponent,
  UintArrayComponentInterface,
} from "../../../contracts/TypedComponents.sol/UintArrayComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gameAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getAllEntitiesAndValues",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getBytesValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntitiesAsSet",
    outputs: [
      {
        internalType: "contract Set",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_value",
        type: "uint256[]",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValueAsSet",
    outputs: [
      {
        internalType: "contract Set",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_value",
        type: "uint256[]",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052604051610010906100dc565b604051809103906000f08015801561002c573d6000803e3d6000fd5b506001600160a01b0316608052604051610045906100dc565b604051809103906000f080158015610061573d6000803e3d6000fd5b50600180546001600160a01b03929092166001600160a01b031992831617905560048054909116905534801561009657600080fd5b5060405162001c3038038062001c308339810160408190526100b7916100ea565b600080546001600160a01b0319166001600160a01b039290921691909117905561011a565b6104af806200178183390190565b6000602082840312156100fc57600080fd5b81516001600160a01b038116811461011357600080fd5b9392505050565b60805161164b620001366000396000610a26015261164b6000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063946aadc611610081578063a1d8509f1161005b578063a1d8509f146101b9578063b361be46146101ca578063cccf7a8e146101dd57600080fd5b8063946aadc614610168578063963e9eb01461017b5780639933adfd1461018e57600080fd5b80634cc82215116100b25780634cc822151461012a57806378d9f34f1461013f5780638b2829471461015557600080fd5b80630ff4c916146100d957806331b933b9146101025780634c518fdc1461010a575b600080fd5b6100ec6100e7366004610c25565b610200565b6040516100f99190610c79565b60405180910390f35b6100ec610224565b61011d610118366004610c25565b6102b4565b6040516100f99190610ce0565b61013d610138366004610c25565b610356565b005b61014761050b565b6040516100f9929190610cf3565b61013d610163366004610e1c565b6106da565b61013d610176366004610ef2565b6109a0565b6100ec610189366004610f2f565b6109c9565b6101a161019c366004610f6c565b6109f3565b6040516001600160a01b0390911681526020016100f9565b6001546001600160a01b03166101a1565b6100ec6101d8366004610f6c565b610a4b565b6101f06101eb366004610c25565b610abb565b60405190151581526020016100f9565b606061020b826102b4565b80602001905181019061021e9190610fa1565b92915050565b600154604080517f53ed514300000000000000000000000000000000000000000000000000000000815290516060926001600160a01b0316916353ed51439160048083019260009291908290030181865afa158015610287573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102af9190810190610fa1565b905090565b60008181526002602052604090208054606091906102d190611032565b80601f01602080910402602001604051908101604052809291908181526020018280546102fd90611032565b801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b50505050509050919050565b6000546001600160a01b031633148061036e57503330145b6103e55760405162461bcd60e51b815260206004820152602e60248201527f436f6d706f6e656e743a204f6e6c792067616d65206f722073656c662063616e60448201527f206d6f646966792076616c75657300000000000000000000000000000000000060648201526084015b60405180910390fd5b600154604051634cc8221560e01b8152600481018390526001600160a01b0390911690634cc8221590602401600060405180830381600087803b15801561042b57600080fd5b505af115801561043f573d6000803e3d6000fd5b505050600082815260026020526040808220905191925060039183916104649161106c565b60408051918290039091208252602082019290925201600020546004546001600160a01b0391821692501681146104f057604051634cc8221560e01b8152600481018390526001600160a01b03821690634cc8221590602401600060405180830381600087803b1580156104d757600080fd5b505af11580156104eb573d6000803e3d6000fd5b505050505b600082815260026020526040812061050791610b42565b5050565b6060806000600160009054906101000a90046001600160a01b03166001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa158015610563573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261058b9190810190610fa1565b90506000815167ffffffffffffffff8111156105a9576105a9610d65565b6040519080825280602002602001820160405280156105dc57816020015b60608152602001906001900390816105c75790505b50905060005b82518110156106d0576002600084838151811061060157610601611107565b60200260200101518152602001908152602001600020805461062290611032565b80601f016020809104026020016040519081016040528092919081815260200182805461064e90611032565b801561069b5780601f106106705761010080835404028352916020019161069b565b820191906000526020600020905b81548152906001019060200180831161067e57829003601f168201915b50505050508282815181106106b2576106b2611107565b602002602001018190525080806106c89061111d565b9150506105e2565b5090939092509050565b6000546001600160a01b03163314806106f257503330145b6107645760405162461bcd60e51b815260206004820152602e60248201527f436f6d706f6e656e743a204f6e6c792067616d65206f722073656c662063616e60448201527f206d6f646966792076616c75657300000000000000000000000000000000000060648201526084016103dc565b600154604051630801f16960e11b8152600481018490526001600160a01b0390911690631003e2d290602401600060405180830381600087803b1580156107aa57600080fd5b505af11580156107be573d6000803e3d6000fd5b505050600083815260026020526040808220905191925060039183916107e39161106c565b60408051918290039091208252602082019290925201600020546004546001600160a01b03918216925016811461086f57604051634cc8221560e01b8152600481018490526001600160a01b03821690634cc8221590602401600060405180830381600087803b15801561085657600080fd5b505af115801561086a573d6000803e3d6000fd5b505050505b6000838152600260209081526040909120835161088e92850190610b7f565b5081516020808401919091206004546000828152600390935260409092205490916001600160a01b0390811691160361092f576040516108cd90610c03565b604051809103906000f0801580156108e9573d6000803e3d6000fd5b50600082815260036020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169190911790555b60008181526003602052604090819020549051630801f16960e11b8152600481018690526001600160a01b0390911690631003e2d290602401600060405180830381600087803b15801561098257600080fd5b505af1158015610996573d6000803e3d6000fd5b5050505050505050565b61050782826040516020016109b59190610c79565b6040516020818303038152906040526106da565b606061021e826040516020016109df9190610c79565b604051602081830303815290604052610a4b565b80516020808301919091206000908152600390915260408120546004546001600160a01b039182169116810361021e57507f000000000000000000000000000000000000000000000000000000000000000092915050565b6060610a56826109f3565b6001600160a01b03166353ed51436040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a93573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261021e9190810190610fa1565b6001546040517f9f161b0a000000000000000000000000000000000000000000000000000000008152600481018390526000916001600160a01b031690639f161b0a90602401602060405180830381865afa158015610b1e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190611144565b508054610b4e90611032565b6000825580601f10610b5e575050565b601f016020900490600052602060002090810190610b7c9190610c10565b50565b828054610b8b90611032565b90600052602060002090601f016020900481019282610bad5760008555610bf3565b82601f10610bc657805160ff1916838001178555610bf3565b82800160010185558215610bf3579182015b82811115610bf3578251825591602001919060010190610bd8565b50610bff929150610c10565b5090565b6104af8061116783390190565b5b80821115610bff5760008155600101610c11565b600060208284031215610c3757600080fd5b5035919050565b600081518084526020808501945080840160005b83811015610c6e57815187529582019590820190600101610c52565b509495945050505050565b602081526000610c8c6020830184610c3e565b9392505050565b6000815180845260005b81811015610cb957602081850181015186830182015201610c9d565b81811115610ccb576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c8c6020830184610c93565b604081526000610d066040830185610c3e565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015610d5657601f19878403018552610d44838351610c93565b94860194925090850190600101610d28565b50909998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610da457610da4610d65565b604052919050565b600082601f830112610dbd57600080fd5b813567ffffffffffffffff811115610dd757610dd7610d65565b610dea601f8201601f1916602001610d7b565b818152846020838601011115610dff57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610e2f57600080fd5b82359150602083013567ffffffffffffffff811115610e4d57600080fd5b610e5985828601610dac565b9150509250929050565b600067ffffffffffffffff821115610e7d57610e7d610d65565b5060051b60200190565b600082601f830112610e9857600080fd5b81356020610ead610ea883610e63565b610d7b565b82815260059290921b84018101918181019086841115610ecc57600080fd5b8286015b84811015610ee75780358352918301918301610ed0565b509695505050505050565b60008060408385031215610f0557600080fd5b82359150602083013567ffffffffffffffff811115610f2357600080fd5b610e5985828601610e87565b600060208284031215610f4157600080fd5b813567ffffffffffffffff811115610f5857600080fd5b610f6484828501610e87565b949350505050565b600060208284031215610f7e57600080fd5b813567ffffffffffffffff811115610f9557600080fd5b610f6484828501610dac565b60006020808385031215610fb457600080fd5b825167ffffffffffffffff811115610fcb57600080fd5b8301601f81018513610fdc57600080fd5b8051610fea610ea882610e63565b81815260059190911b8201830190838101908783111561100957600080fd5b928401925b828410156110275783518252928401929084019061100e565b979650505050505050565b600181811c9082168061104657607f821691505b60208210810361106657634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c91508083168061108857607f831692505b602080841082036110a757634e487b7160e01b86526022600452602486fd5b8180156110bb57600181146110cc576110f9565b60ff198616895284890196506110f9565b60008a81526020902060005b868110156110f15781548b8201529085019083016110d8565b505084890196505b509498975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161113d57634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020828403121561115657600080fd5b81518015158114610c8c57600080fdfe608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561047d806100326000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806353ed51431161005057806353ed514314610094578063949d225d146100b25780639f161b0a146100c357600080fd5b80631003e2d21461006c5780634cc8221514610081575b600080fd5b61007f61007a366004610399565b6100e6565b005b61007f61008f366004610399565b6101bd565b61009c6102e8565b6040516100a991906103b2565b60405180910390f35b6001546040519081526020016100a9565b6100d66100d1366004610399565b610340565b60405190151581526020016100a9565b60005473ffffffffffffffffffffffffffffffffffffffff16331461015e5760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b60648201526084015b60405180910390fd5b61016781610340565b6101ba5760018054808201825560008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60182905580546101aa91906103f6565b6000828152600260205260409020555b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102305760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b6064820152608401610155565b61023981610340565b156101ba576000818152600260205260408120549060018061025a60015490565b61026491906103f6565b815481106102745761027461041b565b9060005260206000200154905080600183815481106102955761029561041b565b60009182526020808320909101929092558281526002909152604080822084905584825281205560018054806102cd576102cd610431565b60019003818190600052602060002001600090559055505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561033657602002820191906000526020600020905b815481526020019060010190808311610322575b5050505050905090565b600061034b60015490565b60000361035a57506000919050565b60008281526002602052604090205415158061039357508160016000815481106103865761038661041b565b9060005260206000200154145b92915050565b6000602082840312156103ab57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156103ea578351835292840192918401916001016103ce565b50909695505050505050565b60008282101561041657634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212204af513f4c6ced8d8fbeaf7a242307a0a1384e8a5ba73c71c7d3d2e25f90a3d8164736f6c634300080d0033a264697066735822122046bcc9c40828b739923a89e8261728350c6da041f4feeaf74c7696d0917ae93364736f6c634300080d0033608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561047d806100326000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806353ed51431161005057806353ed514314610094578063949d225d146100b25780639f161b0a146100c357600080fd5b80631003e2d21461006c5780634cc8221514610081575b600080fd5b61007f61007a366004610399565b6100e6565b005b61007f61008f366004610399565b6101bd565b61009c6102e8565b6040516100a991906103b2565b60405180910390f35b6001546040519081526020016100a9565b6100d66100d1366004610399565b610340565b60405190151581526020016100a9565b60005473ffffffffffffffffffffffffffffffffffffffff16331461015e5760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b60648201526084015b60405180910390fd5b61016781610340565b6101ba5760018054808201825560008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60182905580546101aa91906103f6565b6000828152600260205260409020555b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102305760405162461bcd60e51b8152602060048201526024808201527f5365743a204f6e6c79206465706c6f7965722063616e206d6f646966792076616044820152636c75657360e01b6064820152608401610155565b61023981610340565b156101ba576000818152600260205260408120549060018061025a60015490565b61026491906103f6565b815481106102745761027461041b565b9060005260206000200154905080600183815481106102955761029561041b565b60009182526020808320909101929092558281526002909152604080822084905584825281205560018054806102cd576102cd610431565b60019003818190600052602060002001600090559055505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561033657602002820191906000526020600020905b815481526020019060010190808311610322575b5050505050905090565b600061034b60015490565b60000361035a57506000919050565b60008281526002602052604090205415158061039357508160016000815481106103865761038661041b565b9060005260206000200154145b92915050565b6000602082840312156103ab57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156103ea578351835292840192918401916001016103ce565b50909695505050505050565b60008282101561041657634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212204af513f4c6ced8d8fbeaf7a242307a0a1384e8a5ba73c71c7d3d2e25f90a3d8164736f6c634300080d0033";

type UintArrayComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UintArrayComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UintArrayComponent__factory extends ContractFactory {
  constructor(...args: UintArrayComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gameAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UintArrayComponent> {
    return super.deploy(
      _gameAddr,
      overrides || {}
    ) as Promise<UintArrayComponent>;
  }
  override getDeployTransaction(
    _gameAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gameAddr, overrides || {});
  }
  override attach(address: string): UintArrayComponent {
    return super.attach(address) as UintArrayComponent;
  }
  override connect(signer: Signer): UintArrayComponent__factory {
    return super.connect(signer) as UintArrayComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UintArrayComponentInterface {
    return new utils.Interface(_abi) as UintArrayComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UintArrayComponent {
    return new Contract(address, _abi, signerOrProvider) as UintArrayComponent;
  }
}
