/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../../../contracts/facets/DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "_facetFunctionSelectors",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b5c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80637a0ed627116100505780637a0ed627146100e2578063adfca15e146100f7578063cdffacc61461011757600080fd5b806301ffc9a71461006c57806352ef6b2c146100cd575b600080fd5b6100b861007a366004610930565b6001600160e01b03191660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100d561017b565b6040516100c49190610961565b6100ea610351565b6040516100c491906109f3565b61010a610105366004610a70565b6107ac565b6040516100c49190610a99565b610163610125366004610930565b6001600160e01b03191660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205460601c90565b6040516001600160a01b0390911681526020016100c4565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9061ffff1667ffffffffffffffff8111156101de576101de610aac565b604051908082528060200260200182016040528015610207578160200160208202803683370190505b50915060008060005b600284015461ffff16821015610349576000818152600185016020526040812054905b6008811015610334578361024681610ad8565b600288015490955061ffff168511905061033457600581901b82901b6001600160e01b0319811660009081526020889052604081205460601c90805b888110156102d7578a818151811061029c5761029c610af1565b60200260200101516001600160a01b0316836001600160a01b0316036102c557600191506102d7565b806102cf81610ad8565b915050610282565b5080156102e657505050610322565b818a89815181106102f9576102f9610af1565b6001600160a01b03909216602092830291909101909101528761031b81610ad8565b9850505050505b8061032c81610ad8565b915050610233565b5050808061034190610ad8565b915050610210565b505082525090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9061ffff1667ffffffffffffffff8111156103b4576103b4610aac565b6040519080825280602002602001820160405280156103fa57816020015b6040805180820190915260008152606060208201528152602001906001900390816103d25790505b50600282015490925060009061ffff1667ffffffffffffffff81111561042257610422610aac565b60405190808252806020026020018201604052801561044b578160200160208202803683370190505b50905060008060005b600285015461ffff1682101561073a576000818152600186016020526040812054905b6008811015610725578361048a81610ad8565b600289015490955061ffff168511905061072557600581901b82901b6001600160e01b0319811660009081526020899052604081205460601c90805b888110156105e357826001600160a01b03168c82815181106104ea576104ea610af1565b6020026020010151600001516001600160a01b0316036105d157838c828151811061051757610517610af1565b6020026020010151602001518b838151811061053557610535610af1565b602002602001015160ff168151811061055057610550610af1565b60200260200101906001600160e01b03191690816001600160e01b0319168152505060ff8a828151811061058657610586610af1565b602002602001015160ff161061059b57600080fd5b8981815181106105ad576105ad610af1565b6020026020010180518091906105c290610b07565b60ff16905250600191506105e3565b806105db81610ad8565b9150506104c6565b5080156105f257505050610713565b818b898151811061060557610605610af1565b60209081029190910101516001600160a01b03909116905260028a015461ffff1667ffffffffffffffff81111561063e5761063e610aac565b604051908082528060200260200182016040528015610667578160200160208202803683370190505b508b898151811061067a5761067a610af1565b602002602001015160200181905250828b898151811061069c5761069c610af1565b6020026020010151602001516000815181106106ba576106ba610af1565b60200260200101906001600160e01b03191690816001600160e01b0319168152505060018989815181106106f0576106f0610af1565b60ff909216602092830291909101909101528761070c81610ad8565b9850505050505b8061071d81610ad8565b915050610477565b5050808061073290610ad8565b915050610454565b5060005b828110156107a157600084828151811061075a5761075a610af1565b602002602001015160ff169050600087838151811061077b5761077b610af1565b60200260200101516020015190508181525050808061079990610ad8565b91505061073e565b508185525050505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9060009061ffff1667ffffffffffffffff81111561081257610812610aac565b60405190808252806020026020018201604052801561083b578160200160208202803683370190505b5092506000805b600284015461ffff16821015610926576000818152600185016020526040812054905b6008811015610911578361087881610ad8565b600288015490955061ffff168511905061091157600581901b82901b6001600160e01b0319811660009081526020889052604090205460601c6001600160a01b038a168190036108fc57818988815181106108d5576108d5610af1565b6001600160e01b031990921660209283029190910190910152866108f881610ad8565b9750505b5050808061090990610ad8565b915050610865565b5050808061091e90610ad8565b915050610842565b5050825250919050565b60006020828403121561094257600080fd5b81356001600160e01b03198116811461095a57600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156109a25783516001600160a01b03168352928401929184019160010161097d565b50909695505050505050565b600081518084526020808501945080840160005b838110156109e85781516001600160e01b031916875295820195908201906001016109c2565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610a6257888303603f19018552815180516001600160a01b03168452870151878401879052610a4f878501826109ae565b9588019593505090860190600101610a1a565b509098975050505050505050565b600060208284031215610a8257600080fd5b81356001600160a01b038116811461095a57600080fd5b60208152600061095a60208301846109ae565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610aea57610aea610ac2565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103610b1d57610b1d610ac2565b6001019291505056fea2646970667358221220ccaf00f7d9482c99cb8602455b2f8df4dc5a5b3dbd101d30e0563c12cb8ef2c764736f6c634300080d0033";

type DiamondLoupeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondLoupeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(...args: DiamondLoupeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondLoupeFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondLoupeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondLoupeFacet {
    return super.attach(address) as DiamondLoupeFacet;
  }
  override connect(signer: Signer): DiamondLoupeFacet__factory {
    return super.connect(signer) as DiamondLoupeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new utils.Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondLoupeFacet;
  }
}
