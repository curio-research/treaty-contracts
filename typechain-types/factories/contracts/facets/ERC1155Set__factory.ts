/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC1155Set,
  ERC1155SetInterface,
} from "../../../contracts/facets/ERC1155Set";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_element",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_elements",
        type: "uint256[]",
      },
    ],
    name: "addArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAll",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_element",
        type: "uint256",
      },
    ],
    name: "includes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_element",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "size",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c816200003e565b50620000383362000057565b6200018c565b805162000053906002906020840190620000a9565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000b7906200014f565b90600052602060002090601f016020900481019282620000db576000855562000126565b82601f10620000f657805160ff191683800117855562000126565b8280016001018555821562000126579182015b828111156200012657825182559160200191906001019062000109565b506200013492915062000138565b5090565b5b8082111562000134576000815560010162000139565b600181811c908216806200016457607f821691505b602082108114156200018657634e487b7160e01b600052602260045260246000fd5b50919050565b611b1b806200019c6000396000f3fe608060405234801561001057600080fd5b506004361061011a5760003560e01c8063715018a6116100b25780639f161b0a11610081578063e985e9c511610066578063e985e9c51461024f578063f242432a1461028b578063f2fde38b1461029e57600080fd5b80639f161b0a14610229578063a22cb4651461023c57600080fd5b8063715018a6146101eb5780638da5cb5b146101f357806391d40c831461020e578063949d225d1461022157600080fd5b80632eb2c2d6116100ee5780632eb2c2d61461019d5780634cc82215146101b05780634e1273f4146101c357806353ed5143146101e357600080fd5b8062fdd58e1461011f57806301ffc9a7146101455780630e89341c146101685780631003e2d214610188575b600080fd5b61013261012d366004611632565b6102b1565b6040519081526020015b60405180910390f35b610158610153366004611761565b61035a565b604051901515815260200161013c565b61017b610176366004611799565b6103f7565b60405161013c9190611918565b61019b610196366004611799565b61048b565b005b61019b6101ab3660046114ef565b6104f7565b61019b6101be366004611799565b610599565b6101d66101d136600461165b565b61067e565b60405161013c91906118d7565b6101d66107f4565b61019b61084c565b6003546040516001600160a01b03909116815260200161013c565b61019b61021c366004611726565b6108b2565b600454610132565b610158610237366004611799565b610904565b61019b61024a3660046115f8565b610967565b61015861025d3660046114bd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61019b610299366004611595565b610972565b61019b6102ac36600461149c565b610a0d565b60006001600160a01b0383166103345760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b031982167fd9b67a260000000000000000000000000000000000000000000000000000000014806103bd57506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b806103f157507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600280546104069061197e565b80601f01602080910402602001604051908101604052809291908181526020018280546104329061197e565b801561047f5780601f106104545761010080835404028352916020019161047f565b820191906000526020600020905b81548152906001019060200180831161046257829003601f168201915b50505050509050919050565b61049481610904565b1561049c5750565b60048054600181810183556000929092527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018290556104db60045490565b6104e59190611967565b60009182526005602052604090912055565b6001600160a01b0385163314806105135750610513853361025d565b6105855760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000606482015260840161032b565b6105928585858585610aef565b5050505050565b6105a281610904565b6105a95750565b60008181526005602052604081205490600460016105c660045490565b6105d09190611967565b815481106105ee57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050806004838154811061061d57634e487b7160e01b600052603260045260246000fd5b600091825260208083209091019290925582815260059091526040808220849055848252812055600480548061066357634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055505050565b606081518351146106f75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161032b565b6000835167ffffffffffffffff81111561072157634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561074a578160200160208202803683370190505b50905060005b84518110156107ec576107b185828151811061077c57634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106107a457634e487b7160e01b600052603260045260246000fd5b60200260200101516102b1565b8282815181106107d157634e487b7160e01b600052603260045260246000fd5b60209081029190910101526107e5816119e6565b9050610750565b509392505050565b6060600480548060200260200160405190810160405280929190818152602001828054801561084257602002820191906000526020600020905b81548152602001906001019080831161082e575b5050505050905090565b6003546001600160a01b031633146108a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161032b565b6108b06000610d7e565b565b60005b8151811015610900576108ee8282815181106108e157634e487b7160e01b600052603260045260246000fd5b602002602001015161048b565b806108f8816119e6565b9150506108b5565b5050565b600061090f60045490565b61091b57506000919050565b6000828152600560205260409020541515806103f1575081600460008154811061095557634e487b7160e01b600052603260045260246000fd5b90600052602060002001541492915050565b610900338383610de8565b6001600160a01b03851633148061098e575061098e853361025d565b610a005760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161032b565b6105928585858585610edd565b6003546001600160a01b03163314610a675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161032b565b6001600160a01b038116610ae35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161032b565b610aec81610d7e565b50565b8151835114610b665760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d61746368000000000000000000000000000000000000000000000000606482015260840161032b565b6001600160a01b038416610bca5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161032b565b3360005b8451811015610d10576000858281518110610bf957634e487b7160e01b600052603260045260246000fd5b602002602001015190506000858381518110610c2557634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610cb85760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161032b565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610cf590849061194f565b9250508190555050505080610d09906119e6565b9050610bce565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610d609291906118ea565b60405180910390a4610d76818787878787611084565b505050505050565b600380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610e705760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161032b565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610f415760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161032b565b33610f5a818787610f5188611239565b61059288611239565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610fde5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161032b565b6000858152602081815260408083206001600160a01b038b811685529252808320878503905590881682528120805486929061101b90849061194f565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461107b828888888888611292565b50505050505050565b6001600160a01b0384163b15610d765760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906110c89089908990889088908890600401611836565b602060405180830381600087803b1580156110e257600080fd5b505af1925050508015611112575060408051601f3d908101601f1916820190925261110f9181019061177d565b60015b6111c85761111e611a2d565b806308c379a014156111585750611133611a45565b8061113e575061115a565b8060405162461bcd60e51b815260040161032b9190611918565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161032b565b6001600160e01b0319811663bc197c8160e01b1461107b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161032b565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061128157634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b15610d765760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906112d69089908990889088908890600401611894565b602060405180830381600087803b1580156112f057600080fd5b505af1925050508015611320575060408051601f3d908101601f1916820190925261131d9181019061177d565b60015b61132c5761111e611a2d565b6001600160e01b0319811663f23a6e6160e01b1461107b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161032b565b80356001600160a01b03811681146113b457600080fd5b919050565b600082601f8301126113c9578081fd5b813560206113d68261192b565b6040516113e382826119b9565b8381528281019150858301600585901b87018401881015611402578586fd5b855b8581101561142057813584529284019290840190600101611404565b5090979650505050505050565b600082601f83011261143d578081fd5b813567ffffffffffffffff81111561145757611457611a17565b60405161146e601f8301601f1916602001826119b9565b818152846020838601011115611482578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156114ad578081fd5b6114b68261139d565b9392505050565b600080604083850312156114cf578081fd5b6114d88361139d565b91506114e66020840161139d565b90509250929050565b600080600080600060a08688031215611506578081fd5b61150f8661139d565b945061151d6020870161139d565b9350604086013567ffffffffffffffff80821115611539578283fd5b61154589838a016113b9565b9450606088013591508082111561155a578283fd5b61156689838a016113b9565b9350608088013591508082111561157b578283fd5b506115888882890161142d565b9150509295509295909350565b600080600080600060a086880312156115ac578081fd5b6115b58661139d565b94506115c36020870161139d565b93506040860135925060608601359150608086013567ffffffffffffffff8111156115ec578182fd5b6115888882890161142d565b6000806040838503121561160a578182fd5b6116138361139d565b915060208301358015158114611627578182fd5b809150509250929050565b60008060408385031215611644578182fd5b61164d8361139d565b946020939093013593505050565b6000806040838503121561166d578182fd5b823567ffffffffffffffff80821115611684578384fd5b818501915085601f830112611697578384fd5b813560206116a48261192b565b6040516116b182826119b9565b8381528281019150858301600585901b870184018b10156116d0578889fd5b8896505b848710156116f9576116e58161139d565b8352600196909601959183019183016116d4565b509650508601359250508082111561170f578283fd5b5061171c858286016113b9565b9150509250929050565b600060208284031215611737578081fd5b813567ffffffffffffffff81111561174d578182fd5b611759848285016113b9565b949350505050565b600060208284031215611772578081fd5b81356114b681611acf565b60006020828403121561178e578081fd5b81516114b681611acf565b6000602082840312156117aa578081fd5b5035919050565b6000815180845260208085019450808401835b838110156117e0578151875295820195908201906001016117c4565b509495945050505050565b60008151808452815b81811015611810576020818501810151868301820152016117f4565b818111156118215782602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a0604083015261186260a08301866117b1565b828103606084015261187481866117b1565b9050828103608084015261188881856117eb565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526118cc60a08301846117eb565b979650505050505050565b6020815260006114b660208301846117b1565b6040815260006118fd60408301856117b1565b828103602084015261190f81856117b1565b95945050505050565b6020815260006114b660208301846117eb565b600067ffffffffffffffff82111561194557611945611a17565b5060051b60200190565b6000821982111561196257611962611a01565b500190565b60008282101561197957611979611a01565b500390565b600181811c9082168061199257607f821691505b602082108114156119b357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156119df576119df611a17565b6040525050565b60006000198214156119fa576119fa611a01565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611a4257600481823e5160e01c5b90565b600060443d1015611a535790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611a8357505050505090565b8285019150815181811115611a9b5750505050505090565b843d8701016020828501011115611ab55750505050505090565b611ac4602082860101876119b9565b509095945050505050565b6001600160e01b031981168114610aec57600080fdfea2646970667358221220cff2be870628c00a5efc277e6ea05741d04989f501aee0bcf965523a2ae9cbec64736f6c63430008040033";

type ERC1155SetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155SetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Set__factory extends ContractFactory {
  constructor(...args: ERC1155SetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Set> {
    return super.deploy(overrides || {}) as Promise<ERC1155Set>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Set {
    return super.attach(address) as ERC1155Set;
  }
  override connect(signer: Signer): ERC1155Set__factory {
    return super.connect(signer) as ERC1155Set__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155SetInterface {
    return new utils.Interface(_abi) as ERC1155SetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Set {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Set;
  }
}
