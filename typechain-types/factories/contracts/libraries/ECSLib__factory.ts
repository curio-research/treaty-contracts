/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ECSLib,
  ECSLibInterface,
} from "../../../contracts/libraries/ECSLib";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_componentName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "ComponentValueRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_componentName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "ComponentValueSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "EntityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "NewComponent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "NewEntity",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "_getComponent",
    outputs: [
      {
        internalType: "contract Component",
        name: "",
        type: "Component",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_arr1",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_arr2",
        type: "uint256[]",
      },
    ],
    name: "concatenate",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_componentName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getAddressComponent",
    outputs: [
      {
        internalType: "contract AddressComponent",
        name: "",
        type: "AddressComponent",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_componentName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getBool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getBoolComponent",
    outputs: [
      {
        internalType: "contract BoolComponent",
        name: "",
        type: "BoolComponent",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getComponentByEntity",
    outputs: [
      {
        internalType: "contract Component",
        name: "",
        type: "Component",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_componentName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getComponentValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_componentName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getInt",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getIntComponent",
    outputs: [
      {
        internalType: "contract IntComponent",
        name: "",
        type: "IntComponent",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_componentName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getPositionComponent",
    outputs: [
      {
        internalType: "contract PositionComponent",
        name: "",
        type: "PositionComponent",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_componentName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getStringComponent",
    outputs: [
      {
        internalType: "contract StringComponent",
        name: "",
        type: "StringComponent",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_componentName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getUint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_componentName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_entity",
        type: "uint256",
      },
    ],
    name: "getUintArray",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getUintArrayComponent",
    outputs: [
      {
        internalType: "contract UintArrayComponent",
        name: "",
        type: "UintArrayComponent",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getUintComponent",
    outputs: [
      {
        internalType: "contract UintComponent",
        name: "",
        type: "UintComponent",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum QueryType",
            name: "queryType",
            type: "QueryType",
          },
          {
            internalType: "contract Component",
            name: "component",
            type: "Component",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct QueryCondition[]",
        name: "_queryConditions",
        type: "tuple[]",
      },
    ],
    name: "query",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum QueryType",
        name: "_queryType",
        type: "QueryType",
      },
      {
        internalType: "contract Component",
        name: "_component",
        type: "Component",
      },
      {
        internalType: "bytes",
        name: "_value",
        type: "bytes",
      },
    ],
    name: "queryChunk",
    outputs: [
      {
        components: [
          {
            internalType: "enum QueryType",
            name: "queryType",
            type: "QueryType",
          },
          {
            internalType: "contract Component",
            name: "component",
            type: "Component",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct QueryCondition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61343c61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106102b65760003560e01c80637b2c17a011610185578063b0130a62116100e2578063ee6b082b11610096578063f373ff4c1161007b578063f373ff4c146102eb578063fa8f91ba146102eb578063fd4a0078146102bb57600080fd5b8063ee6b082b146102bb578063f17862511461056457600080fd5b8063d6bb8f45116100c7578063d6bb8f4514610511578063e6a3b44b14610531578063ee6357401461054457600080fd5b8063b0130a62146102eb578063bd807c6c146103e657600080fd5b80639b1ce46211610139578063a68c35c81161011e578063a68c35c8146104be578063ab8b8220146104de578063b00108e8146104f157600080fd5b80639b1ce4621461048b5780639f2ffa11146104ab57600080fd5b8063901186c21161016a578063901186c21461044b578063987750a5146102eb578063988cd1b21461046b57600080fd5b80637b2c17a0146102bb5780637be111c91461042c57600080fd5b806325e48e1f116102335780634186f9f5116101e75780636d6d386b116101cc5780636d6d386b146103f957806372a7c5ac146104195780637838831e146102eb57600080fd5b80634186f9f5146102bb578063520c051d146102bb57600080fd5b806339684ca51161021857806339684ca5146103c65780633e446033146103e6578063405fc427146102eb57600080fd5b806325e48e1f146102bb57806331b55b68146102eb57600080fd5b806311ab1bfd1161028a57806321ec12531161026f57806321ec12531461039357806322376ceb146103a657806325bd34a6146102bb57600080fd5b806311ab1bfd146103505780631c27e4d31461037357600080fd5b80620f9f1c146102bb578063011b968d146102eb578063051be4661461030d578063111c24841461032d575b600080fd5b6102ce6102c93660046129d5565b610584565b6040516001600160a01b0390911681526020015b60405180910390f35b8180156102f757600080fd5b5061030b610306366004612a0a565b610622565b005b61032061031b366004612a0a565b6106c7565b6040516102e29190612a4f565b81801561033957600080fd5b506103426107e3565b6040519081526020016102e2565b61036361035e366004612a0a565b61091b565b60405190151581526020016102e2565b81801561037f57600080fd5b5061030b61038e366004612a66565b610a0a565b6102ce6103a1366004612a0a565b610aef565b8180156103b257600080fd5b5061030b6103c1366004612a66565b610bde565b8180156103d257600080fd5b5061030b6103e1366004612ab4565b610c36565b6103426103f4366004612a0a565b610cd1565b81801561040557600080fd5b5061030b610414366004612b21565b610dc0565b6102ce610427366004612b21565b6110c3565b81801561043857600080fd5b5061030b610447366004612b3a565b5050565b81801561045757600080fd5b5061030b610466366004612b90565b611160565b81801561047757600080fd5b5061030b610486366004612c20565b6111fc565b61049e610499366004612d05565b6112c1565b6040516102e29190612d69565b61049e6104b9366004612dc1565b6113d6565b8180156104ca57600080fd5b5061030b6104d9366004612eca565b6113e1565b61049e6104ec366004612a0a565b61147d565b8180156104fd57600080fd5b5061030b61050c366004612a0a565b61157d565b61052461051f366004612a0a565b611633565b6040516102e29190612f89565b61052461053f366004612a0a565b611733565b610557610552366004612f9c565b6117b7565b6040516102e29190613008565b81801561057057600080fd5b5061030b61057f366004612ab4565b611810565b6000807f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba086601501836040516105b99190613060565b90815260405160209181900382018120546001600160a01b03169250821515916105e59186910161307c565b6040516020818303038152906040529061061b5760405162461bcd60e51b81526004016106129190612f89565b60405180910390fd5b5092915050565b61062b82610584565b6001600160a01b0316634cc82215826040518263ffffffff1660e01b815260040161065891815260200190565b600060405180830381600087803b15801561067257600080fd5b505af1158015610686573d6000803e3d6000fd5b505050507f5b2a370f74161b9f4e0dd5d3a4537c08c715d1bc869ab8b3051121bb8a94012982826040516106bb9291906130d5565b60405180910390a15050565b604080518082019091526000808252602082015260006106e684610584565b604051636667bd4760e11b8152600481018590529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa15801561072e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075291906130f7565b61077157505060408051808201909152600080825260208201526107dd565b6040516307fa648b60e11b8152600481018490526001600160a01b03821690630ff4c916906024016040805180830381865afa1580156107b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d99190613119565b9150505b92915050565b7f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba098547f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba09954604080517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810183905290516000936001600160a01b031692918391631003e2d291602480820192889290919082900301818387803b15801561088d57600080fd5b505af11580156108a1573d6000803e3d6000fd5b505050506108cc7f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba08690565b60130180549060006108dd83613161565b90915550506040518181527fdfadbed979b9afb94e08d5dac8199c7e9ad17df94da4c9e21adb35de32dc26939060200160405180910390a192915050565b60008061092784610584565b604051636667bd4760e11b8152600481018590529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa15801561096f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099391906130f7565b6109a15760009150506107dd565b6040516307fa648b60e11b8152600481018490526001600160a01b03821690630ff4c91690602401602060405180830381865afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d991906130f7565b610a1383610584565b6040517f293e852e00000000000000000000000000000000000000000000000000000000815260048101849052602481018390526001600160a01b03919091169063293e852e906044015b600060405180830381600087803b158015610a7857600080fd5b505af1158015610a8c573d6000803e3d6000fd5b505050507fd5f0779a9671b2254e488c29e89421489d8cc7cacede6e538c065946c98348d1838383604051602001610ac691815260200190565b60408051601f1981840301815290829052610ae293929161317a565b60405180910390a1505050565b600080610afb84610584565b604051636667bd4760e11b8152600481018590529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa158015610b43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6791906130f7565b610b755760009150506107dd565b6040516307fa648b60e11b8152600481018490526001600160a01b03821690630ff4c91690602401602060405180830381865afa158015610bba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d991906131af565b610be783610584565b6040517f1ab06ee500000000000000000000000000000000000000000000000000000000815260048101849052602481018390526001600160a01b039190911690631ab06ee590604401610a5e565b610c3f83610584565b6001600160a01b0316638b28294783836040518363ffffffff1660e01b8152600401610c6c9291906131cc565b600060405180830381600087803b158015610c8657600080fd5b505af1158015610c9a573d6000803e3d6000fd5b505050507fd5f0779a9671b2254e488c29e89421489d8cc7cacede6e538c065946c98348d1838383604051610ae29392919061317a565b600080610cdd84610584565b604051636667bd4760e11b8152600481018590529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa158015610d25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4991906130f7565b610d575760009150506107dd565b6040516307fa648b60e11b8152600481018490526001600160a01b03821690630ff4c91690602401602060405180830381865afa158015610d9c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d991906131e5565b60007f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba08660120154604051634cc8221560e01b8152600481018490526001600160a01b0390911691508190634cc8221590602401600060405180830381600087803b158015610e2d57600080fd5b505af1158015610e41573d6000803e3d6000fd5b505050506000610e6e7f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba08690565b601401805480602002602001604051908101604052809291908181526020016000905b82821015610f3d578382906000526020600020018054610eb0906131fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610edc906131fe565b8015610f295780601f10610efe57610100808354040283529160200191610f29565b820191906000526020600020905b815481529060010190602001808311610f0c57829003601f168201915b505050505081526020019060010190610e91565b50505050905060005b81518110156110925760006110217f55a00bec60f0186444b50c10b732dd4123adc4f1d8b00b50012262ae72fba0866014018381548110610f8957610f89613232565b906000526020600020018054610f9e906131fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610fca906131fe565b80156110175780601f10610fec57610100808354040283529160200191611017565b820191906000526020600020905b815481529060010190602001808311610ffa57829003601f168201915b5050505050610584565b604051634cc8221560e01b8152600481018790529091506001600160a01b03821690634cc8221590602401600060405180830381600087803b15801561106657600080fd5b505af115801561107a573d6000803e3d6000fd5b5050505050808061108a90613161565b915050610f46565b506040518381527f7470dc11dd2276b25ad62ef75ea39990c74dc578787ab0e73896ae0fbf2eef6b90602001610ae2565b6000806111056040518060400160405280600781526020017f416464726573730000000000000000000000000000000000000000000000000081525084610aef565b6040517f435552494f3a20436f6d706f6e656e742077697468206964200000000000000060208201526039810185905269081b9bdd08199bdd5b9960b21b60598201529091506001600160a01b0382161515906063016105e5565b61116983610584565b6001600160a01b0316638bbf68fe83836040518363ffffffff1660e01b8152600401611196929190613248565b600060405180830381600087803b1580156111b057600080fd5b505af11580156111c4573d6000803e3d6000fd5b505050507fd5f0779a9671b2254e488c29e89421489d8cc7cacede6e538c065946c98348d1838383604051602001610ac69190612a4f565b61120583610584565b6040517f2f30c6f6000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b0383811660248301529190911690632f30c6f690604401600060405180830381600087803b15801561126a57600080fd5b505af115801561127e573d6000803e3d6000fd5b5050604080516001600160a01b03851660208201527fd5f0779a9671b2254e488c29e89421489d8cc7cacede6e538c065946c98348d19350869250859101610ac6565b60606000825184516112d39190613266565b67ffffffffffffffff8111156112eb576112eb6128c4565b604051908082528060200260200182016040528015611314578160200160208202803683370190505b50905060005b845181101561136c5784818151811061133557611335613232565b602002602001015182828151811061134f5761134f613232565b60209081029190910101528061136481613161565b91505061131a565b5060005b83518110156113ce5783818151811061138b5761138b613232565b6020026020010151828287516113a19190613266565b815181106113b1576113b1613232565b6020908102919091010152806113c681613161565b915050611370565b509392505050565b60606107dd826118ac565b6113ea83610584565b6001600160a01b031663946aadc683836040518363ffffffff1660e01b81526004016114179291906132b9565b600060405180830381600087803b15801561143157600080fd5b505af1158015611445573d6000803e3d6000fd5b505050507fd5f0779a9671b2254e488c29e89421489d8cc7cacede6e538c065946c98348d1838383604051602001610ac691906132d2565b6060600061148a84610584565b604051636667bd4760e11b8152600481018590529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa1580156114d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f691906130f7565b6115105750506040805160008152602081019091526107dd565b6040516307fa648b60e11b8152600481018490526001600160a01b03821690630ff4c91690602401600060405180830381865afa158015611555573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107d991908101906132e5565b61158682610584565b6001600160a01b03166360fe47b1826040518263ffffffff1660e01b81526004016115b391815260200190565b600060405180830381600087803b1580156115cd57600080fd5b505af11580156115e1573d6000803e3d6000fd5b505060408051600160208201527fd5f0779a9671b2254e488c29e89421489d8cc7cacede6e538c065946c98348d1935085925084910160408051601f19818403018152908290526106bb93929161317a565b6060600061164084610584565b604051636667bd4760e11b8152600481018590529091506001600160a01b0382169063cccf7a8e90602401602060405180830381865afa158015611688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ac91906130f7565b6116c65750506040805160208101909152600081526107dd565b6040516307fa648b60e11b8152600481018490526001600160a01b03821690630ff4c91690602401600060405180830381865afa15801561170b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107d991908101906133a6565b606061173e83610584565b6001600160a01b0316634c518fdc836040518263ffffffff1660e01b815260040161176b91815260200190565b600060405180830381865afa158015611788573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117b091908101906133a6565b9392505050565b6040805160608082018352600080835260208301529181019190915260405180606001604052808560058111156117f0576117f0612ff2565b81526001600160a01b038516602082015260400183905290509392505050565b61181983610584565b6001600160a01b0316636437197783836040518363ffffffff1660e01b81526004016118469291906131cc565b600060405180830381600087803b15801561186057600080fd5b505af1158015611874573d6000803e3d6000fd5b505050507fd5f0779a9671b2254e488c29e89421489d8cc7cacede6e538c065946c98348d1838383604051602001610ac69190612f89565b60606118b6612851565b600160b51b8152600060208201819052600160808301525b8351811015611cd95760008482815181106118eb576118eb613232565b602002602001015190506118fe81611cec565b1561194c5760048151600581111561191857611918612ff2565b0361192557604083018190525b60058151600581111561193a5761193a612ff2565b0361194757606083018190525b611cc6565b826080015115611bf25761195f81611d27565b6119ab5760405162461bcd60e51b815260206004820152601a60248201527f4e454741544956455f494e495449414c5f434f4e444954494f4e0000000000006044820152606401610612565b60006080840181905280825160058111156119c8576119c8612ff2565b14611a4b5781602001516001600160a01b031663b361be4683604001516040518263ffffffff1660e01b8152600401611a019190612f89565b600060405180830381865afa158015611a1e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a4691908101906132e5565b611ab5565b81602001516001600160a01b03166331b933b96040518163ffffffff1660e01b8152600401600060405180830381865afa158015611a8d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ab591908101906132e5565b9050611ac081611d4b565b84528051602080860191909152606085015101516001600160a01b031615801590611b0657506000846060015160400151806020019051810190611b0491906131e5565b115b15611bec5760005b8151811015611bea576000611b60838381518110611b2e57611b2e613232565b6020026020010151876060015160200151886060015160400151806020019051810190611b5b91906131e5565b611da0565b905060005b8151811015611bd557611bae611ba66040518060400160405280858581518110611b9157611b91613232565b60200260200101518152602001600081525090565b885190611f99565b875260208701805190611bc082613161565b90525080611bcd81613161565b915050611b65565b50508080611be290613161565b915050611b0e565b505b50611cc6565b8251600160b51b9060009060019060601c69ffffffffffffffffffff165b8115611cbb576000611c348260408051808201909152600080825260208201525090565b80519091506000611c458289611fea565b9050611c538a8984846122bb565b90508015611c9157611c81611c7a6040518060400160405280858152602001600081525090565b8890611f99565b965085611c8d81613161565b9650505b611c9e8a89848a8a612343565b8b5160b01c860151919850965080151595509350611c1092505050565b505090845260208401525b5080611cd181613161565b9150506118ce565b506117b0816000015182602001516124ba565b6000600482516005811115611d0357611d03612ff2565b14806107dd575060055b82516005811115611d2057611d20612ff2565b1492915050565b60008082516005811115611d3d57611d3d612ff2565b14806107dd57506002611d0d565b600160b51b60005b8251811015611d9a57611d86611d7f6040518060400160405280868581518110611b9157611b91613232565b8390611f99565b915080611d9281613161565b915050611d53565b50919050565b606081600003611dbf57506040805160008152602081019091526117b0565b6000836001600160a01b031663b361be4686604051602001611de391815260200190565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401611e0e9190612f89565b600060405180830381865afa158015611e2b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611e5391908101906132e5565b905082600103611e645790506117b0565b600160b51b6000805b8351811015611f12576000611ea3858381518110611e8d57611e8d613232565b60200260200101518960018a611b5b91906133ef565b905060005b8151811015611efd57611edb611ed46040518060400160405280858581518110611b9157611b91613232565b8690611f99565b945083611ee781613161565b9450508080611ef590613161565b915050611ea8565b50508080611f0a90613161565b915050611e6d565b506000611f2b83855184611f269190613266565b6124ba565b905060005b8451811015611f8d57848181518110611f4b57611f4b613232565b6020026020010151828285611f609190613266565b81518110611f7057611f70613232565b602090810291909101015280611f8581613161565b915050611f30565b50979650505050505050565b6000808360501b60b01c1160018114611fbe578260101b8360601b851717915061061b565b828460b01c8560a01b60b01c01528260101b6bffffffffffffffffffffffff1985161791505092915050565b6000808251600581111561200057612000612ff2565b0361207b576020820151604051636667bd4760e11b8152600481018590526001600160a01b039091169063cccf7a8e90602401602060405180830381865afa158015612050573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207491906130f7565b90506107dd565b60028251600581111561209057612090612ff2565b0361212357602082015160405163131463f760e21b8152600481018590526001600160a01b0390911690634c518fdc90602401600060405180830381865afa1580156120e0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261210891908101906133a6565b805190602001208260400151805190602001201490506107dd565b60018251600581111561213857612138612ff2565b036121b4576020820151604051636667bd4760e11b8152600481018590526001600160a01b039091169063cccf7a8e90602401602060405180830381865afa158015612188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ac91906130f7565b1590506107dd565b6003825160058111156121c9576121c9612ff2565b0361225d57602082015160405163131463f760e21b8152600481018590526001600160a01b0390911690634c518fdc90602401600060405180830381865afa158015612219573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261224191908101906133a6565b80519060200120826040015180519060200120141590506107dd565b61226682612592565b6122b25760405162461bcd60e51b815260206004820152601360248201527f4e4f5f454e544954595f434f4e444954494f4e000000000000000000000000006044820152606401610612565b50600092915050565b6040840151602001516000906001600160a01b0316158015906122f9575060008560400151604001518060200190518101906122f791906131e5565b115b801561230c575061230a82856125f1565b155b15612338576000806123238587896040015161261c565b9150915080156123355750905061233b565b50505b50805b949350505050565b60608501516020015160009081906001600160a01b0316158015906123835750600087606001516040015180602001905181019061238191906131e5565b115b156124ae5760006123b3868960600151602001518a6060015160400151806020019051810190611b5b91906131e5565b905060005b81518110156124ab5760008282815181106123d5576123d5613232565b6020026020010151905060006123eb828b611fea565b90508015801561240b575060408b0151602001516001600160a01b031615155b8015612432575060008b604001516040015180602001905181019061243091906131e5565b115b1561245a57600080612449848d8f6040015161261c565b915091508015612457578192505b50505b80156124965761248661247f60405180604001604052808c8152602001600081525090565b8990611f99565b97508661249281613161565b9750505b505080806124a390613161565b9150506123b8565b50505b50919590945092505050565b60608167ffffffffffffffff8111156124d5576124d56128c4565b6040519080825280602002602001820160405280156124fe578160200160208202803683370190505b50905081156107dd57600169ffffffffffffffffffff606085901c1660005b82156125895760006125418360408051808201909152600080825260208201525090565b9050806000015185838151811061255a5761255a613232565b60209081029190910101528161256f81613161565b60b089901c9490940151801515955093925061251d915050565b50505092915050565b600080825160058111156125a8576125a8612ff2565b14806125c657506002825160058111156125c4576125c4612ff2565b145b806125e4575060015b825160058111156125e2576125e2612ff2565b145b806107dd57506003611d0d565b6000828015612604575061260482611d27565b806117b05750821580156117b057506117b082612848565b60008061262884612592565b6126745760405162461bcd60e51b815260206004820152601360248201527f4e4f5f454e544954595f434f4e444954494f4e000000000000000000000000006044820152606401610612565b60048351600581111561268957612689612ff2565b146126d65760405162461bcd60e51b815260206004820152601760248201527f4e4f5f50524f58595f524541445f434f4e444954494f4e0000000000000000006044820152606401610612565b8460005b84604001518060200190518101906126f291906131e5565b811015612839576020850151604051636667bd4760e11b8152600481018490526001600160a01b039091169063cccf7a8e90602401602060405180830381865afa158015612744573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061276891906130f7565b6127785750600091506128409050565b602085015160405163131463f760e21b8152600481018490526001600160a01b0390911690634c518fdc90602401600060405180830381865afa1580156127c3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526127eb91908101906133a6565b8060200190518101906127fe91906131e5565b915061280a8287611fea565b935061281684876125f1565b156128275750600191506128409050565b8061283181613161565b9150506126da565b5060019150505b935093915050565b600060016125cf565b6040805160a0810182526000808252602082015290810161288d6040805160608101909152806000815260006020820152606060409091015290565b81526020016128b76040805160608101909152806000815260006020820152606060409091015290565b8152600060209091015290565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156128fd576128fd6128c4565b60405290565b6040516060810167ffffffffffffffff811182821017156128fd576128fd6128c4565b604051601f8201601f1916810167ffffffffffffffff8111828210171561294f5761294f6128c4565b604052919050565b600067ffffffffffffffff821115612971576129716128c4565b50601f01601f191660200190565b600082601f83011261299057600080fd5b81356129a361299e82612957565b612926565b8181528460208386010111156129b857600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156129e757600080fd5b813567ffffffffffffffff8111156129fe57600080fd5b6107d98482850161297f565b60008060408385031215612a1d57600080fd5b823567ffffffffffffffff811115612a3457600080fd5b612a408582860161297f565b95602094909401359450505050565b8151815260208083015190820152604081016107dd565b600080600060608486031215612a7b57600080fd5b833567ffffffffffffffff811115612a9257600080fd5b612a9e8682870161297f565b9660208601359650604090950135949350505050565b600080600060608486031215612ac957600080fd5b833567ffffffffffffffff80821115612ae157600080fd5b612aed8783880161297f565b9450602086013593506040860135915080821115612b0a57600080fd5b50612b178682870161297f565b9150509250925092565b600060208284031215612b3357600080fd5b5035919050565b60008060408385031215612b4d57600080fd5b823567ffffffffffffffff811115612b6457600080fd5b612b708582860161297f565b925050602083013560098110612b8557600080fd5b809150509250929050565b60008060008385036080811215612ba657600080fd5b843567ffffffffffffffff811115612bbd57600080fd5b612bc98782880161297f565b945050602085013592506040603f1982011215612be557600080fd5b50612bee6128da565b604085013581526060909401356020850152509093909250565b6001600160a01b0381168114612c1d57600080fd5b50565b600080600060608486031215612c3557600080fd5b833567ffffffffffffffff811115612c4c57600080fd5b612c588682870161297f565b935050602084013591506040840135612c7081612c08565b809150509250925092565b600067ffffffffffffffff821115612c9557612c956128c4565b5060051b60200190565b600082601f830112612cb057600080fd5b81356020612cc061299e83612c7b565b82815260059290921b84018101918181019086841115612cdf57600080fd5b8286015b84811015612cfa5780358352918301918301612ce3565b509695505050505050565b60008060408385031215612d1857600080fd5b823567ffffffffffffffff80821115612d3057600080fd5b612d3c86838701612c9f565b93506020850135915080821115612d5257600080fd5b50612d5f85828601612c9f565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015612da157835183529284019291840191600101612d85565b50909695505050505050565b803560068110612dbc57600080fd5b919050565b60006020808385031215612dd457600080fd5b823567ffffffffffffffff80821115612dec57600080fd5b818501915085601f830112612e0057600080fd5b8135612e0e61299e82612c7b565b81815260059190911b83018401908481019088831115612e2d57600080fd5b8585015b83811015612ebd57803585811115612e495760008081fd5b86016060818c03601f1901811315612e615760008081fd5b612e69612903565b612e748a8401612dad565b8152604080840135612e8581612c08565b828c0152918301359188831115612e9c5760008081fd5b612eaa8e8c8587010161297f565b9082015285525050918601918601612e31565b5098975050505050505050565b600080600060608486031215612edf57600080fd5b833567ffffffffffffffff80821115612ef757600080fd5b612f038783880161297f565b9450602086013593506040860135915080821115612f2057600080fd5b50612b1786828701612c9f565b60005b83811015612f48578181015183820152602001612f30565b83811115612f57576000848401525b50505050565b60008151808452612f75816020860160208601612f2d565b601f01601f19169290920160200192915050565b6020815260006117b06020830184612f5d565b600080600060608486031215612fb157600080fd5b612fba84612dad565b92506020840135612fca81612c08565b9150604084013567ffffffffffffffff811115612fe657600080fd5b612b178682870161297f565b634e487b7160e01b600052602160045260246000fd5b60208152600082516006811061302e57634e487b7160e01b600052602160045260246000fd5b806020840152506001600160a01b03602084015116604083015260408301516060808401526107d96080840182612f5d565b60008251613072818460208701612f2d565b9190910192915050565b7f435552494f3a20436f6d706f6e656e74200000000000000000000000000000008152600082516130b4816011850160208701612f2d565b69081b9bdd08199bdd5b9960b21b6011939091019283015250601b01919050565b6040815260006130e86040830185612f5d565b90508260208301529392505050565b60006020828403121561310957600080fd5b815180151581146117b057600080fd5b60006040828403121561312b57600080fd5b6131336128da565b82518152602083015160208201528091505092915050565b634e487b7160e01b600052601160045260246000fd5b6000600182016131735761317361314b565b5060010190565b60608152600061318d6060830186612f5d565b84602084015282810360408401526131a58185612f5d565b9695505050505050565b6000602082840312156131c157600080fd5b81516117b081612c08565b82815260406020820152600061233b6040830184612f5d565b6000602082840312156131f757600080fd5b5051919050565b600181811c9082168061321257607f821691505b602082108103611d9a57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b828152606081016117b0602083018480518252602090810151910152565b600082198211156132795761327961314b565b500190565b600081518084526020808501945080840160005b838110156132ae57815187529582019590820190600101613292565b509495945050505050565b82815260406020820152600061233b604083018461327e565b6020815260006117b0602083018461327e565b600060208083850312156132f857600080fd5b825167ffffffffffffffff81111561330f57600080fd5b8301601f8101851361332057600080fd5b805161332e61299e82612c7b565b81815260059190911b8201830190838101908783111561334d57600080fd5b928401925b8284101561336b57835182529284019290840190613352565b979650505050505050565b600061338461299e84612957565b905082815283838301111561339857600080fd5b6117b0836020830184612f2d565b6000602082840312156133b857600080fd5b815167ffffffffffffffff8111156133cf57600080fd5b8201601f810184136133e057600080fd5b6107d984825160208401613376565b6000828210156134015761340161314b565b50039056fea264697066735822122047c2519081004740fe8117b6d78229eb86fd9bf9a69d31fe95a9fce5447e6e8064736f6c634300080d0033";

type ECSLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ECSLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ECSLib__factory extends ContractFactory {
  constructor(...args: ECSLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ECSLib> {
    return super.deploy(overrides || {}) as Promise<ECSLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ECSLib {
    return super.attach(address) as ECSLib;
  }
  override connect(signer: Signer): ECSLib__factory {
    return super.connect(signer) as ECSLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ECSLibInterface {
    return new utils.Interface(_abi) as ECSLibInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ECSLib {
    return new Contract(address, _abi, signerOrProvider) as ECSLib;
  }
}
